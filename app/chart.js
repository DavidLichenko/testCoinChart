(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["chunk-22c0b763"], {
    "002b": function(t, e, s) {
        "use strict";
        s("3619")
    },
    "0087": function(t, e, s) {
        "use strict";
        s("7d0c")
    },
    "00dc6": function(t, e, s) {
        "use strict";
        s("d359")
    },
    "0195": function(t, e, s) {
        "use strict";
        s("fd32")
    },
    "01a8": function(t, e, s) {},
    "02d4": function(t, e, s) {},
    "0370": function(t, e, s) {
        "use strict";
        s("274a")
    },
    "043b": function(t, e, s) {
        "use strict";
        s("634c")
    },
    "0522": function(t, e, s) {},
    "05b6": function(t, e, s) {},
    "0682": function(t, e, s) {
        "use strict";
        s("b29c")
    },
    "073c": function(t, e, s) {
        "use strict";
        s("e97a")
    },
    "07e6": function(t, e, s) {},
    "09d4": function(t, e, s) {},
    "09e8": function(t, e, s) {
        "use strict";
        s("dce2")
    },
    "0b3f": function(t, e, s) {},
    "0cb2": function(t, e, s) {
        "use strict";
        var a = s("e330")
            , i = s("7b0b")
            , o = Math.floor
            , n = a("".charAt)
            , r = a("".replace)
            , l = a("".slice)
            , c = /\$([$&'`]|\d{1,2}|<[^>]*>)/g
            , d = /\$([$&'`]|\d{1,2})/g;
        t.exports = function(t, e, s, a, u, m) {
            var p = s + t.length
                , h = a.length
                , v = d;
            return void 0 !== u && (u = i(u),
                v = c),
                r(m, v, (function(i, r) {
                        var c;
                        switch (n(r, 0)) {
                            case "$":
                                return "$";
                            case "&":
                                return t;
                            case "`":
                                return l(e, 0, s);
                            case "'":
                                return l(e, p);
                            case "<":
                                c = u[l(r, 1, -1)];
                                break;
                            default:
                                var d = +r;
                                if (0 === d)
                                    return i;
                                if (d > h) {
                                    var m = o(d / 10);
                                    return 0 === m ? i : m <= h ? void 0 === a[m - 1] ? n(r, 1) : a[m - 1] + n(r, 1) : i
                                }
                                c = a[d - 1]
                        }
                        return void 0 === c ? "" : c
                    }
                ))
        }
    },
    "0d6d": function(t, e, s) {
        "use strict";
        s("7aa2")
    },
    "0e81": function(t, e, s) {},
    "0ef1": function(t, e, s) {},
    "0f0b": function(t, e, s) {
        "use strict";
        s("7222")
    },
    "0f16": function(t, e, s) {},
    "0f2d": function(t, e, s) {},
    "0f8b": function(t, e, s) {
        "use strict";
        s("a50b")
    },
    "0fb1": function(t, e, s) {},
    "0fcb": function(t, e, s) {
        "use strict";
        s("b233")
    },
    "102f": function(t, e, s) {},
    "103f": function(t, e, s) {
        "use strict";
        s("9df9")
    },
    "10fd": function(t, e, s) {},
    "122e": function(t, e, s) {
        "use strict";
        s("4952")
    },
    "12c6": function(t, e, s) {
        "use strict";
        s("6540")
    },
    "138b": function(t, e, s) {
        "use strict";
        s("5ec0")
    },
    "13d5": function(t, e, s) {
        "use strict";
        var a = s("23e7")
            , i = s("d58f").left
            , o = s("a640")
            , n = s("1212")
            , r = s("9adc")
            , l = !r && n > 79 && n < 83
            , c = l || !o("reduce");
        a({
            target: "Array",
            proto: !0,
            forced: c
        }, {
            reduce: function(t) {
                var e = arguments.length;
                return i(this, t, e, e > 1 ? arguments[1] : void 0)
            }
        })
    },
    "147c": function(t, e, s) {
        "use strict";
        s("b319")
    },
    "14a6": function(t, e, s) {
        "use strict";
        s("65d3")
    },
    "150e": function(t, e, s) {},
    "159e": function(t, e, s) {},
    "15c1": function(t, e, s) {
        "use strict";
        s("d1f6")
    },
    "164c": function(t, e, s) {
        "use strict";
        s("39a5")
    },
    1657: function(t, e, s) {
        "use strict";
        s("31c6")
    },
    1813: function(t, e, s) {},
    "1b2d": function(t, e, s) {
        "use strict";
        s("99db")
    },
    "1b9c": function(t, e, s) {},
    "1be4": function(t, e, s) {
        "use strict";
        var a = s("d066");
        t.exports = a("document", "documentElement")
    },
    "1c34": function(t, e, s) {
        "use strict";
        s("44ef")
    },
    "1cbc": function(t, e, s) {
        "use strict";
        s("fa6d")
    },
    "1cfb": function(t, e, s) {
        "use strict";
        s("8bdb")
    },
    "1d77": function(t, e, s) {
        "use strict";
        s("e6b0")
    },
    "1da3": function(t, e, s) {},
    "1dbc": function(t, e, s) {},
    "217e": function(t, e, s) {
        "use strict";
        s("0f2d")
    },
    2196: function(t, e, s) {},
    "232b": function(t, e, s) {
        "use strict";
        s("a287")
    },
    2488: function(t, e, s) {},
    "251a": function(t, e, s) {
        "use strict";
        s("07e6")
    },
    "26cc": function(t, e, s) {
        "use strict";
        s("ba68")
    },
    2717: function(t, e, s) {
        "use strict";
        s("798f")
    },
    "271a": function(t, e, s) {
        "use strict";
        var a = s("cb2d")
            , i = s("e330")
            , o = s("577e")
            , n = s("d6d6")
            , r = URLSearchParams
            , l = r.prototype
            , c = i(l.getAll)
            , d = i(l.has)
            , u = new r("a=1");
        !u.has("a", 2) && u.has("a", void 0) || a(l, "has", (function(t) {
                var e = arguments.length
                    , s = e < 2 ? void 0 : arguments[1];
                if (e && void 0 === s)
                    return d(this, t);
                var a = c(this, t);
                n(e, 1);
                var i = o(s)
                    , r = 0;
                while (r < a.length)
                    if (a[r++] === i)
                        return !0;
                return !1
            }
        ), {
            enumerable: !0,
            unsafe: !0
        })
    },
    "274a": function(t, e, s) {},
    2775: function(t, e, s) {},
    2809: function(t, e, s) {},
    2868: function(t, e, s) {},
    2909: function(t, e, s) {
        "use strict";
        s("3270")
    },
    "2a0d": function(t, e, s) {},
    "2b33": function(t, e, s) {
        "use strict";
        s("2bbb")
    },
    "2ba7": function(t, e, s) {},
    "2bbb": function(t, e, s) {},
    "2dba": function(t, e, s) {},
    "2f2d": function(t, e, s) {},
    "2fc7": function(t, e, s) {
        "use strict";
        s("efac")
    },
    "2fe1": function(t, e, s) {},
    "30af": function(t, e, s) {},
    3104: function(t, e, s) {
        "use strict";
        s("4f47")
    },
    "31c6": function(t, e, s) {},
    3270: function(t, e, s) {},
    "33d1": function(t, e, s) {
        "use strict";
        var a = s("23e7")
            , i = s("7b0b")
            , o = s("07fa")
            , n = s("5926")
            , r = s("44d2");
        a({
            target: "Array",
            proto: !0
        }, {
            at: function(t) {
                var e = i(this)
                    , s = o(e)
                    , a = n(t)
                    , r = a >= 0 ? a : s + a;
                return r < 0 || r >= s ? void 0 : e[r]
            }
        }),
            r("at")
    },
    "33e6": function(t, e, s) {
        "use strict";
        s("d9d9")
    },
    "350a": function(t, e, s) {},
    3532: function(t, e, s) {},
    3535: function(t, e, s) {
        "use strict";
        s("ebab")
    },
    "35c6": function(t, e, s) {},
    3619: function(t, e, s) {},
    "36b9": function(t, e, s) {
        "use strict";
        s("deb8")
    },
    "375e": function(t, e, s) {
        "use strict";
        s("fa17")
    },
    "37da": function(t, e, s) {
        "use strict";
        s("affd")
    },
    "37e8": function(t, e, s) {
        "use strict";
        var a = s("83ab")
            , i = s("aed9")
            , o = s("9bf2")
            , n = s("825a")
            , r = s("fc6a")
            , l = s("df75");
        e.f = a && !i ? Object.defineProperties : function(t, e) {
            n(t);
            var s, a = r(e), i = l(e), c = i.length, d = 0;
            while (c > d)
                o.f(t, s = i[d++], a[s]);
            return t
        }
    },
    "382b": function(t, e, s) {},
    3941: function(t, e, s) {
        "use strict";
        s("5a95")
    },
    "39a5": function(t, e, s) {},
    "39ad": function(t, e, s) {
        "use strict";
        s("608d")
    },
    "39bb": function(t, e, s) {
        "use strict";
        s("7e56")
    },
    "39e3": function(t, e, s) {
        "use strict";
        s("2dba")
    },
    "3a2f": function(t, e, s) {},
    "3b05": function(t, e, s) {
        "use strict";
        s("2ba7")
    },
    "3d21": function(t, e, s) {},
    "3d6f": function(t, e, s) {
        "use strict";
        s("56e6")
    },
    "3dee": function(t, e, s) {
        "use strict";
        s("a537")
    },
    "3dfd": function(t, e, s) {
        "use strict";
        s.r(e);
        var a = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                class: {
                    mobile: t.isMobile,
                    "old-platform-design": !t.newPlatformDesign,
                    "new-platform-design": t.newPlatformDesign
                },
                attrs: {
                    id: "app"
                },
                on: {
                    click: t.playClick
                }
            }, [t.bannerState && "stage" === t.brand ? e("BaseSwitchToBanner", {
                on: {
                    update: t.changeDesign,
                    close: t.closeBanner
                },
                model: {
                    value: t.newPlatformDesign,
                    callback: function(e) {
                        t.newPlatformDesign = e
                    },
                    expression: "newPlatformDesign"
                }
            }) : t._e(), t.newPlatformDesign ? e("NewDesign") : e("OldDesign")], 1)
        }
            , i = []
            , o = s("2f62")
            , n = s("90d2")
            , r = s("6c33")
            , l = s("a2cc")
            , c = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "new-design",
                class: {
                    mobile: t.isMobile
                },
                style: t.lightTheme ? t.baseDarkTheme : t.baseLightTheme
            }, [e("div", {
                staticClass: "blur-container",
                class: {
                    blur: t.blur
                }
            }, [!t.modals.fullscreen && t.alertMessage ? e("marquee", {
                staticClass: "alert-message-marquee"
            }, [t._v(" " + t._s(t.alertMessage) + " ")]) : t._e(), e("TheHeader"), e("div", {
                staticClass: "main"
            }, [e("SideMenu"), e("SideMenuBurger"), e("HamburgerMenu", {
                class: {
                    hide: !t.isMobile
                }
            }), e("MenuModal"), e("div", {
                staticClass: "bigPane"
            }, [e("SymbolsPanel"), e("Grid"), e("OrdersPane"), e("StatusBar"), e("FooterButtons")], 1)], 1), e("Footer")], 1), ["tradingviewonline"].includes(t.brand) ? e("CustomLoginModals") : e("LoginModal"), e("ClosePositionModal"), e("NoLandscape"), e("ProfitCalculatorModal"), e("AssetsInfoModal"), e("RegisterModal"), e("AccountModal"), e("SymbolsModal"), e("BalanceModal"), e("AccountModal"), e("GridsModal"), e("NoConnectionModal"), e("AutoCloseModal"), e("PendingModal"), e("Notifications"), e("ForgotPasswordModal"), e("NewPasswordModal"), e("ClosePositionModal"), e("CancelPositionModal"), e("DepositSuccessModal"), e("DepositFailModal"), e("WithdrawalCancelModal"), e("Fullscreen"), e("AutoTraderModal"), e("PciDssModal"), e("QrCodeModal"), e("TimePickerModal"), t.alertMessage ? e("AlertMessageModal") : t._e()], 1)
        }
            , d = []
            , u = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "menu-modal",
                class: {
                    hide: !t.modals.menu || !t.modalMenuSplit
                }
            }, [e("MarketWatch", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.market
                }
            }), e("OpenOrders", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.orders
                }
            }), e("OrdersHistory", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.history
                }
            }), e("EconomicCalendar", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.calendar
                }
            }), e("MarketNews", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.news
                }
            })], 1)
        }
            , m = []
            , p = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("BaseWidgetTitle", {
                attrs: {
                    title: t.tokens.widgetOrders.activeOrders
                },
                on: {
                    close: function(e) {
                        return t.hideModal("orders")
                    }
                }
            }), e("div", {
                staticClass: "tabs"
            }, [e("div", {
                staticClass: "tab-item",
                class: {
                    active: "active" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "active"
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.widgetOrders.active))])]), e("div", {
                staticClass: "tab-item",
                class: {
                    active: "pending" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "pending"
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pending))])])]), e("PositionsSelect", {
                staticClass: "select",
                attrs: {
                    options: {
                        "": t.tokens.widgetOrders.allPositions,
                        forex: t.tokens.markets.forex,
                        stocks: t.tokens.markets.stocks,
                        indices: t.tokens.markets.indices,
                        commodities: t.tokens.markets.commodities,
                        crypto: t.tokens.markets.crypto,
                        metals: t.tokens.markets.metals,
                        nft: t.tokens.markets.nft
                    },
                    active: t.marketFilter
                },
                on: {
                    update: function(e) {
                        t.marketFilter = e
                    }
                }
            }), e("div", {
                staticClass: "content scroll"
            }, [e("div", {
                staticClass: "no-orders",
                class: t.computeNoOrdersVisibility
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("import_export")]), e("span", [t._v(t._s(t.tokens.widgetOrders.noPositionsLine1)), e("br"), t._v(t._s(t.tokens.widgetOrders.noPositionsLine2))])]), e("div", {
                staticClass: "col",
                class: {
                    hide: "active" !== t.tabActive
                }
            }, t._l(t.orders, (function(s, a) {
                    return e("div", {
                        key: s.id,
                        staticClass: "order-item",
                        class: {
                            active: t.detailsOrder === s.id,
                            hide: t.marketFilter && (!t.symbols[s.symbol] || t.symbols[s.symbol].market !== t.marketFilter)
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "order-info"
                    }, [e("div", {
                        staticClass: "name"
                    }, [e("div", {
                        staticClass: "row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                        staticClass: "profit-info"
                    }, [e("span", {
                        staticClass: "profit",
                        class: s.profit < 0 ? "red" : "green"
                    }, [t._v(" " + t._s((0 > s.profit ? "-" : s.profit > 0 ? "+" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount ? t.activeAccount.precision : 2)) + " ")]), e("span", {
                        staticClass: "pct",
                        class: s.profit < 0 ? "red" : "green"
                    }, [t._v(" " + t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + (t.symbols[s.symbol] ? Math.abs(t.symbols[s.symbol].quote[s.type % 2 ? "ask" : "bid"] - s.price_open) / s.price_open * 100 : 0).toFixed(2) + "%") + " ")])])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("button", {
                        staticClass: "close-position",
                        on: {
                            click: function(e) {
                                return t.showClosePositionModal(s.id, a)
                            }
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.closePosition) + " ")]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.purchaseTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_open).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))]), e("i", {
                        staticClass: "material-icons edit",
                        on: {
                            click: function(e) {
                                return t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [t._v("edit")])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))]), e("i", {
                        staticClass: "material-icons edit",
                        on: {
                            click: function(e) {
                                return t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [t._v("edit")])])]), e("div", {
                        staticClass: "item type"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.type))]), e("BasePositionDirection", {
                        attrs: {
                            type: s.type
                        }
                    })], 1), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.margin))]), e("span", [t._v(t._s(t.currencySign(t.activeAccount.currency) + s.easy_amount.toFixed(t.activeAccount.precision)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pnl))]), e("span", [t._v(t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount.precision)))])])])]), e("div", {
                        staticClass: "smaller",
                        class: {
                            open: t.detailsOrder === s.id
                        }
                    }, [e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [e("span", {
                        staticClass: "info-state",
                        class: {
                            open: t.detailsOrder === s.id
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.show) + " " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " ")]), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])])])])])])
                }
            )), 0), e("div", {
                staticClass: "col",
                class: {
                    hide: "pending" !== t.tabActive
                }
            }, t._l(t.pendingOrders, (function(s, a) {
                    return e("div", {
                        key: s.id,
                        staticClass: "order-item",
                        class: {
                            active: t.detailsOrder === s.id,
                            hide: t.marketFilter && t.symbols[s.symbol].market !== t.marketFilter
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "order-info"
                    }, [e("div", {
                        staticClass: "name"
                    }, [e("div", {
                        staticClass: "row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: "symbol-" + s.symbol.toUpperCase()
                    }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                        staticClass: "profit-info"
                    }, [e("span", {
                        staticClass: "profit",
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(t._s(t.tokens.orderTypes[s.type]))]), e("span", {
                        staticClass: "pct",
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)))])])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("button", {
                        staticClass: "close-position",
                        on: {
                            click: function(e) {
                                return t.showCancelPositionModal(s.id, a)
                            }
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.cancelOrder) + " ")]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.orderType))]), e("BasePositionDirection", {
                        attrs: {
                            type: s.type
                        }
                    })], 1), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])])])]), e("div", {
                        staticClass: "smaller",
                        class: {
                            open: t.detailsOrder === s.id
                        }
                    }, [e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [e("span", {
                        staticClass: "info-state",
                        class: {
                            open: t.detailsOrder === s.id
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.show) + " " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " ")]), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])])])])])])
                }
            )), 0)])], 1)
        }
            , h = []
            , v = (s("14d9"),
                function() {
                    var t = this
                        , e = t._self._c;
                    return e("div", {
                        staticClass: "title"
                    }, [e("div", {
                        staticClass: "row row-left"
                    }, [e("h4", {
                        staticClass: "title__medium"
                    }, [t._v(" " + t._s(t.title))]), t._t("back")], 2), e("i", {
                        staticClass: "material-icons close",
                        on: {
                            click: function(e) {
                                return t.close()
                            }
                        }
                    }, [t._v(t._s("close"))])])
                }
        )
            , f = []
            , g = {
            name: "BaseWidgetTitle",
            props: {
                title: {
                    type: String
                }
            },
            methods: {
                close() {
                    this.$emit("close")
                }
            }
        }
            , b = g;
        s("9e86");
        function y(t, e, s, a, i, o, n, r) {
            var l, c = "function" === typeof t ? t.options : t;
            if (e && (c.render = e,
                c.staticRenderFns = s,
                c._compiled = !0),
            a && (c.functional = !0),
            o && (c._scopeId = "data-v-" + o),
                n ? (l = function(t) {
                    t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext,
                    t || "undefined" === typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__),
                    i && i.call(this, t),
                    t && t._registeredComponents && t._registeredComponents.add(n)
                }
                    ,
                    c._ssrRegister = l) : i && (l = r ? function() {
                        i.call(this, (c.functional ? this.parent : this).$root.$options.shadowRoot)
                    }
                    : i),
                l)
                if (c.functional) {
                    c._injectStyles = l;
                    var d = c.render;
                    c.render = function(t, e) {
                        return l.call(e),
                            d(t, e)
                    }
                } else {
                    var u = c.beforeCreate;
                    c.beforeCreate = u ? [].concat(u, l) : [l]
                }
            return {
                exports: t,
                options: c
            }
        }
        var _ = y(b, v, f, !1, null, "3f9bc61c", null)
            , C = _.exports
            , w = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "position-direction",
                class: t.type % 2 ? "red" : "green"
            }, [t._v(" " + t._s(t.orderTypeString(t.type)) + " ")])
        }
            , k = []
            , S = {
            name: "BasePositionDirection",
            props: {
                type: {
                    type: [String, Number]
                }
            },
            methods: {
                orderTypeString: l["j"]
            }
        }
            , x = S
            , M = (s("ae34"),
            y(x, w, k, !1, null, "a96be42a", null))
            , A = M.exports
            , D = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "select-wrapper"
            }, [e("PositionsSelectButton", {
                attrs: {
                    options: t.options,
                    value: t.active
                },
                on: {
                    update: e => t.selectIsOpen = e
                },
                scopedSlots: t._u([{
                    key: "title",
                    fn: function() {
                        return [t._v(" " + t._s(t.options[t.active]) + " ")]
                    },
                    proxy: !0
                }])
            }), t.selectIsOpen ? e("BaseMenuList", {
                scopedSlots: t._u([t.selectIsOpen ? {
                    key: "content",
                    fn: function() {
                        return t._l(t.options, (function(s, a) {
                                return e("BaseMenuListItem", {
                                    key: a,
                                    class: {
                                        active: t.active === a
                                    },
                                    attrs: {
                                        tag: "li"
                                    },
                                    nativeOn: {
                                        click: function(e) {
                                            return t.updateSelect(a)
                                        }
                                    },
                                    scopedSlots: t._u([{
                                        key: "content",
                                        fn: function() {
                                            return [t._v(" " + t._s(s) + " ")]
                                        },
                                        proxy: !0
                                    }], null, !0)
                                })
                            }
                        ))
                    },
                    proxy: !0
                } : null], null, !0)
            }) : t._e()], 1)
        }
            , P = []
            , T = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "select",
                class: {
                    selected: t.value
                },
                on: {
                    click: function(e) {
                        return t.toggler()
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("filter_list")]), e("span", {
                staticClass: "title__small"
            }, [t._t("title")], 2)])
        }
            , L = []
            , I = {
            data() {
                return {
                    state: !1
                }
            },
            methods: {
                toggler() {
                    document.addEventListener("click", this.handleClickOutside),
                        this.state = !this.state,
                        this.$emit("update", this.state),
                    this.state || document.removeEventListener("click", this.handleClickOutside)
                },
                handleClickOutside(t) {
                    this.$el.contains(t.target) || (this.state = !1,
                        this.$emit("update", this.state),
                        document.removeEventListener("click", this.handleClickOutside))
                }
            },
            beforeUnmount() {
                document.removeEventListener("click", this.handleClickOutside)
            }
        }
            , F = {
            name: "PositionsSelectButton",
            mixins: [I],
            props: {
                value: {
                    type: String
                }
            }
        }
            , O = F
            , B = (s("dd91"),
            y(O, T, L, !1, null, "6cb072b9", null))
            , N = B.exports
            , $ = function() {
            var t = this
                , e = t._self._c;
            return e("ul", {
                staticClass: "menu-list"
            }, [t._t("content")], 2)
        }
            , V = []
            , E = {
            name: "BaseMenuList"
        }
            , U = E
            , H = (s("232b"),
            y(U, $, V, !1, null, "f3f8ffa2", null))
            , j = H.exports
            , q = function() {
            var t = this
                , e = t._self._c;
            return e(t.tag, {
                tag: "component",
                staticClass: "menu-list-item body__medium"
            }, [t._t("content")], 2)
        }
            , R = []
            , W = {
            name: "BaseMenuListItem",
            props: {
                tag: {
                    type: String,
                    default: "div"
                }
            }
        }
            , z = W
            , G = (s("6e79"),
            y(z, q, R, !1, null, "52c335e1", null))
            , Y = G.exports
            , Z = {
            name: "PositionsSelect",
            components: {
                BaseMenuListItem: Y,
                BaseMenuList: j,
                PositionsSelectButton: N
            },
            props: {
                options: {
                    type: Object
                },
                active: {
                    type: [String, Boolean]
                }
            },
            data() {
                return {
                    selectIsOpen: !1
                }
            },
            methods: {
                updateSelect(t) {
                    this.$emit("update", t)
                }
            }
        }
            , J = Z
            , K = (s("ed0b"),
            y(J, D, P, !1, null, "3a9327ad", null))
            , X = K.exports
            , Q = {
            name: "OpenOrders",
            components: {
                BasePositionDirection: A,
                BaseWidgetTitle: C,
                PositionsSelect: X
            },
            data() {
                return {
                    tabActive: "active",
                    marketFilter: "",
                    detailsOrder: 0
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                showClosePositionModal(t, e) {
                    this.activeAccount.enable ? (this.$store.commit(n["J"], {
                        activeOrderId: t,
                        index: e
                    }),
                        this.$store.commit(n["F"], {
                            closePosition: !0
                        })) : this.$store.commit(n["V"], "TRADING_DISABLED")
                },
                showCancelPositionModal(t, e) {
                    this.activeAccount.enable ? (this.$store.commit(n["J"], {
                        activeOrderId: t,
                        index: e
                    }),
                        this.$store.commit(n["F"], {
                            canselPosition: !0
                        })) : this.$store.commit(n["V"], "TRADING_DISABLED")
                },
                showAutoCloseModal(t, e, s) {
                    let a = t.target.getBoundingClientRect();
                    this.$store.commit(n["I"], {
                        left: a.left + 200,
                        top: a.top - 100,
                        symbolActive: null,
                        orderActive: e,
                        tp: this.activeAccount.orders[s].tp || "",
                        tpType: "=",
                        sl: this.activeAccount.orders[s].sl || "",
                        slType: "=",
                        item: parseInt(s)
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !0
                        })
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "activeAccount", "tokens", "chartActive", "modalMenu", "staticBase"]),
                orders() {
                    let t = [];
                    if (!this.activeAccount.orders)
                        return t;
                    for (let e in this.activeAccount.orders) {
                        let s = this.activeAccount.orders[e];
                        s.type > 1 || (this.symbols[s.symbol] ? s.profit = s.point * (s.type && this.symbols[s.symbol] ? s.price_open - this.symbols[s.symbol].quote.ask : this.symbols[s.symbol].quote.bid - s.price_open) * Math.pow(10, this.symbols[s.symbol].precision) + s.swap + s.commission : s.profit = 0,
                            s.easy_amount = s.easy_amount || s.margin,
                            t.push(s))
                    }
                    return t
                },
                pendingOrders() {
                    let t = [];
                    if (!this.activeAccount.orders)
                        return t;
                    for (let e in this.activeAccount.orders) {
                        let s = this.activeAccount.orders[e];
                        s.type < 2 || (s.profit = 0,
                            s.easy_amount = s.easy_amount || s.margin,
                            t.push(s))
                    }
                    return t
                },
                computeNoOrdersVisibility() {
                    return this.orders.length > 0 || this.pendingOrders.length > 0 ? "hide" : ""
                }
            }
        }
            , tt = Q
            , et = (s("505b"),
            y(tt, p, h, !1, null, "4efea14f", null))
            , st = et.exports
            , at = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("BaseWidgetTitle", {
                attrs: {
                    title: t.tokens.widgetOrders.tradingHistory
                },
                on: {
                    close: function(e) {
                        return t.hideModal("history")
                    }
                }
            }), e("div", {
                ref: "history-scroll",
                staticClass: "content scroll"
            }, [e("div", {
                staticClass: "no-orders",
                class: {
                    hide: t.history.length
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("restore")]), e("span", [t._v(t._s(t.tokens.widgetOrders.noHistoryLine1)), e("br"), t._v(t._s(t.tokens.widgetOrders.noHistoryLine2))])]), e("div", {
                staticClass: "col"
            }, t._l(t.history, (function(s) {
                    var a, i;
                    return e("div", {
                        key: s.id,
                        staticClass: "history-item",
                        class: {
                            active: t.detailsOrder === s.id
                        }
                    }, [e("div", {
                        staticClass: "history-head"
                    }, [e("div", {
                        staticClass: "history-info"
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "time"
                    }, [t._v(t._s(s.timeStr))]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(t._s(t.tokens.months[s.month] + " " + s.day))])])]), e("div", [e("div", {
                        staticClass: "profit",
                        class: s.profit > 0 ? "green" : s.profit < 0 ? "red" : ""
                    }, [t._v(t._s(s.price_close ? (s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : t.tokens.widgetOrders.cancelled.toUpperCase()) + " ")]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(" " + t._s(s && void 0 !== (null === s || void 0 === s ? void 0 : s.volume) && null !== (null === s || void 0 === s ? void 0 : s.volume) ? ((null === s || void 0 === s ? void 0 : s.volume) > 1e3 ? null === s || void 0 === s ? void 0 : s.volume.toFixed(0) : null === s || void 0 === s ? void 0 : s.volume.toFixed(2)) + " " + (null === s || void 0 === s ? void 0 : s.symbol) : "-") + " ")])])]), e("div", {
                        staticClass: "symbol-info"
                    }, [e("div", {
                        staticClass: "row symbol-row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("span", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), e("div", {
                        staticClass: "symbol-container"
                    }, [e("span", [t._v(" " + t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol) + " ")]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].market.charAt(0).toUpperCase() + t.symbols[s.symbol].market.slice(1) : "") + " ")])])]), e("div", {
                        staticClass: "price",
                        class: {
                            hide: !s.price_close
                        }
                    }, [t._v(" " + t._s(t.symbols[s.symbol] && s.price_open ? null === s || void 0 === s || null === (a = s.price_open) || void 0 === a ? void 0 : a.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5,
                        maximumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5
                    }) : "-") + " → " + t._s(null === s || void 0 === s || null === (i = s.price_close) || void 0 === i ? void 0 : i.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5,
                        maximumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5
                    })) + " ")])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.purchaseTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_open).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.ordersPane.closeTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_close).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(" " + t._s(s.price_open ? t.symbols[s.symbol] && t.symbols[s.symbol].precision ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol].precision,
                        maximumFractionDigits: t.symbols[s.symbol].precision
                    }) : s.price_open.toLocaleString() : "-") + " ")])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])])]), e("div", {
                        staticClass: "item type"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.orderType))]), e("BasePositionDirection", {
                        attrs: {
                            type: s.type
                        }
                    })], 1), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.margin))]), e("span", [t._v(t._s(s.easy_amount ? t.currencySign(t.activeAccount.currency) + s.easy_amount.toFixed(t.activeAccount.precision) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pnl))]), e("span", [t._v(t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount.precision)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.commission))]), e("span", [t._v(t._s((s.commission > 0 ? "+" : 0 > s.commission ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.commission).toFixed(t.activeAccount.precision)))])])])]), e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [t._v(" " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])])])
                }
            )), 0)])], 1)
        }
            , it = []
            , ot = {
            name: "OrdersHistory",
            components: {
                BasePositionDirection: A,
                BaseWidgetTitle: C
            },
            mounted() {
                setInterval( () => {
                        this.$refs["history-scroll"] && this.$refs["history-scroll"].scrollTop + this.$refs["history-scroll"].clientHeight === this.$refs["history-scroll"].scrollHeight && this.modalMenu.history && this.activeAccount.history.length > 20 * this.historyPage && this.historyPage++
                    }
                    , 1e3)
            },
            data() {
                return {
                    historyPage: 1,
                    detailsOrder: 0
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "tokens", "chartActive", "activeAccount", "modalMenu", "staticBase"]),
                history() {
                    const t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        , e = [];
                    if (!this.activeAccount.history)
                        return e;
                    const s = 0
                        , a = 20 * this.historyPage
                        , i = this.activeAccount.history.slice(s, a);
                    return i.forEach(s => {
                            const a = new Date(1e3 * s.time_close);
                            s.timeStr = ("0" + a.getHours()).slice(-2) + ":" + ("0" + a.getMinutes()).slice(-2),
                                s.dayStr = t[a.getMonth()] + " " + ("0" + a.getDate()).slice(-2),
                                s.month = t[a.getMonth()],
                                s.day = ("0" + a.getDate()).slice(-2),
                                s.amount = s.easy_amount || s.margin,
                                e.push(s)
                        }
                    ),
                        e
                }
            },
            watch: {
                activeAccount() {
                    this.historyPage = 1,
                        this.$refs["history-scroll"].scrollTo(0, 0)
                }
            }
        }
            , nt = ot
            , rt = (s("65ad"),
            y(nt, at, it, !1, null, "4057f142", null))
            , lt = rt.exports
            , ct = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("BaseWidgetTitle", {
                attrs: {
                    title: t.tokens.widgetMarketWatch.marketWatch
                },
                on: {
                    close: function(e) {
                        return t.hideModal("market")
                    }
                }
            }), e("SymbolsGroup")], 1)
        }
            , dt = []
            , ut = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "symbol-groups"
            }, [e("BaseModalChipsList", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [t._l(t.marketCats, (function(s, a) {
                                return [s.symbols.length || "All" === s.name || "favorites" === s.name ? e("BaseModalChipsListItem", {
                                    key: a,
                                    class: {
                                        active: t.currentCat === s.name.toLowerCase()
                                    },
                                    nativeOn: {
                                        click: function(e) {
                                            return t.changeCat(s.name)
                                        }
                                    },
                                    scopedSlots: t._u([{
                                        key: "content",
                                        fn: function() {
                                            return ["favorites" === s.name ? e("svg", {
                                                attrs: {
                                                    xmlns: "http://www.w3.org/2000/svg",
                                                    width: "14",
                                                    height: "18",
                                                    viewBox: "0 0 14 18",
                                                    fill: "none"
                                                }
                                            }, [e("path", {
                                                attrs: {
                                                    d: "M0 18V2C0 1.45 0.195833 0.979167 0.5875 0.5875C0.979167 0.195833 1.45 0 2 0H12C12.55 0 13.0208 0.195833 13.4125 0.5875C13.8042 0.979167 14 1.45 14 2V18L7 15L0 18Z",
                                                    fill: "#E3E2E9"
                                                }
                                            })]) : e("span", [t._v(t._s(s.name))])]
                                        },
                                        proxy: !0
                                    }], null, !0)
                                }) : t._e()]
                            }
                        ))]
                    },
                    proxy: !0
                }])
            }), e("BaseSearch", {
                attrs: {
                    placeholder: t.tokens.widgetMarketWatch.search
                },
                model: {
                    value: t.search,
                    callback: function(e) {
                        t.search = e
                    },
                    expression: "search"
                }
            }), e("div", {
                staticClass: "content scroll"
            }, [e("div", {
                staticClass: "col"
            }, t._l(t.filteredSymbols, (function(s) {
                    return e("MarketItem", {
                        key: s.symbol,
                        class: {
                            active: t.charts[t.chartActive] && t.charts[t.chartActive].symbol === s.symbol
                        },
                        attrs: {
                            symbol: s
                        },
                        on: {
                            change: t.changeSymbol,
                            add: t.addChart,
                            info: t.showAssetsInfoModal
                        }
                    })
                }
            )), 1)])], 1)
        }
            , mt = []
            , pt = (s("13d5"),
            s("a49b"))
            , ht = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "search-input"
            }, [e("div", {
                staticClass: "box"
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("search")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.searchInput,
                    expression: "searchInput"
                }],
                attrs: {
                    type: "text",
                    placeholder: t.placeholder
                },
                domProps: {
                    value: t.searchInput
                },
                on: {
                    input: [function(e) {
                        e.target.composing || (t.searchInput = e.target.value)
                    }
                        , t.updateSearch]
                }
            })]), t.searchInput ? e("div", {
                staticClass: "icons",
                on: {
                    click: t.clearSearch
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("close")])]) : t._e()])
        }
            , vt = []
            , ft = {
            name: "BaseSearch",
            props: {
                value: {
                    type: String,
                    default: ""
                },
                placeholder: {
                    type: String,
                    default: ""
                }
            },
            data() {
                return {
                    searchInput: this.value
                }
            },
            methods: {
                updateSearch() {
                    this.$emit("input", this.searchInput)
                },
                clearSearch() {
                    this.searchInput = "",
                        this.updateSearch()
                }
            }
        }
            , gt = ft
            , bt = (s("4c42"),
            y(gt, ht, vt, !1, null, "1576574e", null))
            , yt = bt.exports
            , _t = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "market-item",
                on: {
                    click: function(e) {
                        return t.change(t.symbol.symbol)
                    }
                }
            }, [e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "name"
            }, [e("div", {
                staticClass: "row",
                class: t.sessionsState[t.symbol.symbol] ? "" : "close"
            }, [e("div", {
                staticClass: "symbol",
                class: t.assetSymbol(t.symbol.symbol)
            }), e("span", [t._v(t._s(t.symbols[t.symbol.symbol] ? t.symbols[t.symbol.symbol].alias : t.symbol.symbol))])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "price",
                class: t.sessionsState[t.symbol.symbol] ? t.symbol.quote ? t.symbol.quote.dirBid : "" : "close"
            }, [t._v(" " + t._s(t.symbol.quote && t.symbol.quote.bid ? t.symbol.quote.bid.toFixed(t.symbol.precision) : "-") + " ")]), e("div", {
                staticClass: "smaller"
            }, [e("div", {
                staticClass: "pct",
                class: {
                    red: t.symbol.quote && t.symbol.quote.changePct < 0,
                    green: t.symbol.quote && 0 < t.symbol.quote.changePct,
                    hide: !t.sessionsState[t.symbol.symbol]
                }
            }, [t._v(" " + t._s((t.symbol.quote && t.symbol.quote.changePct > 0 ? "+" : "") + (t.symbol.quote && t.symbol.quote.changePct ? t.symbol.quote.changePct : 0).toFixed(2) + "%") + " ")]), e("div", {
                staticClass: "pct close",
                class: {
                    hide: t.sessionsState[t.symbol.symbol]
                }
            }, [t._v(" Closed ")])]), e("i", {
                staticClass: "material-icons add",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.add(t.symbol.symbol)
                    }
                }
            }, [t._v("add")]), e("i", {
                staticClass: "material-icons info",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.info(t.symbol.symbol)
                    }
                }
            }, [t._v("info_outlined")])])])])]), e("svg", {
                staticClass: "favorites",
                class: {
                    active: t.symbolsFavorite.some(e => e.symbol === t.symbol.symbol)
                },
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "14",
                    height: "18",
                    viewBox: "0 0 14 18",
                    fill: "none"
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleFavorite(t.symbol)
                    }
                }
            }, [e("path", {
                attrs: {
                    d: "M0 18V2C0 1.45 0.195833 0.979167 0.5875 0.5875C0.979167 0.195833 1.45 0 2 0H12C12.55 0 13.0208 0.195833 13.4125 0.5875C13.8042 0.979167 14 1.45 14 2V18L7 15L0 18Z",
                    fill: "#E3E2E9"
                }
            })])])
        }
            , Ct = []
            , wt = {
            name: "MarketItem",
            props: {
                symbol: {
                    type: Object,
                    default: () => {}
                }
            },
            methods: {
                add(t) {
                    this.$emit("add", t)
                },
                info(t) {
                    this.$emit("info", t)
                },
                change(t) {
                    this.$emit("change", t)
                },
                assetSymbol(t) {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + t.toUpperCase().replace(".", "-");
                    switch (t) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + t.toUpperCase().replace(".", "-")
                    }
                },
                toggleFavorite(t) {
                    this.$store.commit(n["Fb"], {
                        action: -1 === this.symbolsFavorite.indexOf(t) ? "add" : "remove",
                        symbol: t
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["sessionsState", "symbols", "symbolsFavorite"])
            }
        }
            , kt = wt
            , St = (s("8e89"),
            y(kt, _t, Ct, !1, null, "1d47aa62", null))
            , xt = St.exports
            , Mt = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-chips"
            }, [e("div", {
                staticClass: "state-layer label__large"
            }, [t._t("content")], 2)])
        }
            , At = []
            , Dt = {
            name: "BaseModalChips"
        }
            , Pt = Dt
            , Tt = (s("dbe5"),
            y(Pt, Mt, At, !1, null, "e058cd0a", null))
            , Lt = Tt.exports
            , It = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chips-list"
            }, [t._t("content")], 2)
        }
            , Ft = []
            , Ot = {
            name: "BaseModalChipsList"
        }
            , Bt = Ot
            , Nt = (s("b593"),
            y(Bt, It, Ft, !1, null, "cfd7720a", null))
            , $t = Nt.exports
            , Vt = {
            name: "SymbolsGroup",
            components: {
                BaseModalChipsList: $t,
                BaseModalChipsListItem: Lt,
                MarketItem: xt,
                BaseSearch: yt
            },
            data() {
                return {
                    search: "",
                    collapsed: {
                        forex: "forex" !== pt["cb"],
                        stocks: "stocks" !== pt["cb"],
                        indices: "indices" !== pt["cb"],
                        commodities: "commodities" !== pt["cb"],
                        crypto: "crypto" !== pt["cb"],
                        metals: "metals" !== pt["cb"],
                        nft: "nft" !== pt["cb"]
                    },
                    brand: pt["e"],
                    time: Date.now(),
                    currentCat: "forex"
                }
            },
            methods: {
                changeCat(t) {
                    this.currentCat !== t && (this.currentCat = t.toLowerCase())
                },
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                showAssetsInfoModal(t) {
                    this.$store.commit(n["H"], {
                        symbol: t,
                        chartActive: this.chartActive
                    }),
                        this.$store.commit(n["F"], {
                            assetsInfo: !0
                        })
                },
                changeSymbol(t) {
                    Object(l["h"])() && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                        this.$store.commit(n["Eb"], {
                            symbol: t,
                            id: this.chartActive
                        })
                },
                addChart(t) {
                    this.$store.commit(n["Ib"], {
                        symbol: t,
                        frame: 1
                    })
                },
                shift(t, e) {
                    let s = 0
                        , a = [].concat(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                        , i = [];
                    if (e > 0) {
                        for (let t = 0; t < e; t++)
                            s = a.pop(),
                                i[t] = s;
                        for (let t = 0; t < i.length; t++)
                            a.unshift(i[t])
                    } else if (e < 0) {
                        e = Math.abs(e);
                        for (let t = 0; t < e; t++)
                            s = a.shift(),
                                i[t] = s;
                        for (let t = 0; t < i.length; t++)
                            a.push(i[t])
                    }
                    const o = (t, e) => t.reduce( (t, s, a, i) => a % e ? t : t.concat([i.slice(a, a + e)]), []);
                    let n = [];
                    return n = o(a, 24),
                        n
                },
                generateMarketCats() {
                    let t = {
                        favorites: {
                            name: "favorites",
                            ico: "icon_bookmark",
                            cnt: 0,
                            symbols: []
                        },
                        all: {
                            name: "All",
                            cnt: 0,
                            symbols: []
                        },
                        forex: {
                            name: this.tokens.markets.forex,
                            ico: "euro_symbol",
                            cnt: 0,
                            symbols: []
                        },
                        stocks: {
                            name: this.tokens.markets.stocks,
                            ico: "account_balance",
                            cnt: 0,
                            symbols: []
                        },
                        indices: {
                            name: this.tokens.markets.indices,
                            ico: "pie_chart",
                            cnt: 0,
                            symbols: []
                        },
                        crypto: {
                            name: this.tokens.markets.crypto,
                            ico: "cloud",
                            cnt: 0,
                            symbols: []
                        },
                        commodities: {
                            name: this.tokens.markets.commodities,
                            ico: "local_fire_department",
                            cnt: 0,
                            symbols: []
                        },
                        metals: {
                            name: this.tokens.markets.metals,
                            ico: "view_stream",
                            cnt: 0,
                            symbols: []
                        },
                        nft: {
                            name: this.tokens.markets.nft,
                            ico: "collections",
                            cnt: 0,
                            symbols: []
                        }
                    };
                    for (let e in this.symbols) {
                        let s = this.symbols[e];
                        s.visible && (t[s.market] && (t.all.symbols.push(s),
                            t.all.cnt++,
                            t[s.market].symbols.push(s),
                            t[s.market].cnt++,
                        this.symbolsFavorite.some(t => t.symbol === s.symbol) && (t.favorites.symbols.push(s),
                            t.favorites.cnt++)))
                    }
                    return Object.values(t)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "symbols", "sessions", "sessionsState", "symbolGroups", "chartActive", "charts", "modalMenu", "staticBase", "symbolsFavorite"]),
                marketCats() {
                    return this.generateMarketCats()
                },
                filteredSymbols() {
                    const t = this.marketCats.find(t => t.name.toLowerCase() === this.currentCat);
                    if (!t)
                        return [];
                    if (!this.search)
                        return t.symbols;
                    const e = this.search.toLowerCase();
                    return t.symbols.filter(t => t.symbol.toLowerCase().includes(e) || t.alias.toLowerCase().includes(e))
                }
            }
        }
            , Et = Vt
            , Ut = (s("60e7"),
            y(Et, ut, mt, !1, null, "d1f1a9c4", null))
            , Ht = Ut.exports
            , jt = {
            name: "MarketWatch",
            components: {
                SymbolsGroup: Ht,
                BaseWidgetTitle: C
            },
            computed: {
                ...Object(o["b"])(["tokens", "modalMenu"])
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            }
        }
            , qt = jt
            , Rt = y(qt, ct, dt, !1, null, "c4a6240e", null)
            , Wt = Rt.exports
            , zt = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("BaseWidgetTitle", {
                attrs: {
                    title: t.tokens.widgetEconomicCalendar.economicCalendar
                },
                on: {
                    close: function(e) {
                        return t.hideModal("calendar")
                    }
                }
            }), e("div", {
                staticClass: "content"
            }, [e("div", {
                staticClass: "content"
            }, [t.lightTheme ? e("iframe", {
                attrs: {
                    src: "https://www.tradays.com/en/economic-calendar/widget?mode=2&dateFormat=DMY",
                    width: "100%",
                    height: "99%",
                    id: "widgetPreview"
                }
            }) : e("iframe", {
                attrs: {
                    src: "https://www.tradays.com/en/economic-calendar/widget?mode=2&dateFormat=DMY&theme=1",
                    width: "100%",
                    height: "99%",
                    id: "widgetPreview"
                }
            })])])], 1)
        }
            , Gt = []
            , Yt = {
            name: "EconomicCalendar",
            components: {
                BaseWidgetTitle: C
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modalMenu", "tokens", "lightTheme"])
            }
        }
            , Zt = Yt
            , Jt = (s("f9d2"),
            y(Zt, zt, Gt, !1, null, "ca85a5c0", null))
            , Kt = Jt.exports
            , Xt = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("BaseWidgetTitle", {
                attrs: {
                    title: t.tokens.widgetMarketNews.marketNews
                },
                on: {
                    close: function(e) {
                        return t.hideModal("news")
                    }
                }
            }), e("NewsList")], 1)
        }
            , Qt = []
            , te = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "content scroll"
            }, t._l(t.newsFeed, (function(t) {
                    return e("NewsListItem", {
                        key: t.id,
                        attrs: {
                            news: t
                        }
                    })
                }
            )), 1)
        }
            , ee = []
            , se = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "news"
            }, [e("a", {
                attrs: {
                    href: t.getSource(t.news.url)
                }
            }, [e("div", {
                staticClass: "header"
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "img"
            }, [e("img", {
                attrs: {
                    src: t.news.img
                }
            })]), e("div", {
                staticClass: "news-info"
            }, [e("div", {
                staticClass: "time"
            }, [t._v(t._s(t.timeAgo(1e3 * t.news.time)))]), e("a", {
                staticClass: "source",
                attrs: {
                    href: t.getSource(t.news.url)
                }
            }, [t._v(t._s(t.getSource(t.news.url)))])])]), e("a", {
                attrs: {
                    href: t.news.url,
                    target: "_blank"
                }
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "16",
                    height: "16",
                    viewBox: "0 0 16 16",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M3.33333 14C2.96667 14 2.65278 13.8694 2.39167 13.6083C2.13056 13.3472 2 13.0333 2 12.6667V3.33333C2 2.96667 2.13056 2.65278 2.39167 2.39167C2.65278 2.13056 2.96667 2 3.33333 2H8V3.33333H3.33333V12.6667H12.6667V8H14V12.6667C14 13.0333 13.8694 13.3472 13.6083 13.6083C13.3472 13.8694 13.0333 14 12.6667 14H3.33333ZM6.46667 10.4667L5.53333 9.53333L11.7333 3.33333H9.33333V2H14V6.66667H12.6667V4.26667L6.46667 10.4667Z",
                    fill: "#3F454F"
                }
            })])])]), e("div", {
                staticClass: "body"
            }, [e("h4", {
                staticClass: "body__medium title"
            }, [t._v(t._s(t.news.title))])]), e("div", {
                staticClass: "summary",
                domProps: {
                    innerHTML: t._s(t.news.summary)
                }
            })])])
        }
            , ae = []
            , ie = (s("88a7"),
            s("271a"),
            s("5494"),
            {
                name: "NewsListItem",
                props: {
                    news: {
                        type: Object,
                        default: () => {}
                    }
                },
                methods: {
                    getSource(t) {
                        return new URL(t).hostname
                    },
                    timeAgo(t) {
                        const e = new Date
                            , s = Math.floor((e - new Date(t)) / 1e3);
                        let a = Math.floor(s / 31536e3);
                        return a >= 1 ? a + " year" + (a > 1 ? "s" : "") + " ago" : (a = Math.floor(s / 2592e3),
                            a >= 1 ? a + " month" + (a > 1 ? "s" : "") + " ago" : (a = Math.floor(s / 86400),
                                a >= 1 ? a + " day" + (a > 1 ? "s" : "") + " ago" : (a = Math.floor(s / 3600),
                                    a >= 1 ? a + " hour" + (a > 1 ? "s" : "") + " ago" : (a = Math.floor(s / 60),
                                        a >= 1 ? a + " minute" + (a > 1 ? "s" : "") + " ago" : "Just now"))))
                    }
                }
            })
            , oe = ie
            , ne = (s("6a31"),
            y(oe, se, ae, !1, null, "8443ffa2", null))
            , re = ne.exports
            , le = {
            mounted() {
                setInterval( () => {
                        this.$refs["news-scroll"] && this.$refs["news-scroll"].scrollTop + this.$refs["news-scroll"].clientHeight === this.$refs["news-scroll"].scrollHeight && this.modalMenu.news && this.activeAccount.news.length > 20 * this.newsPage && this.newsPage++
                    }
                    , 1e3)
            },
            name: "NewsList",
            components: {
                NewsListItem: re
            },
            data() {
                return {
                    newsPage: 1
                }
            },
            computed: {
                ...Object(o["b"])(["modalMenu", "tokens", "feed"]),
                newsFeed() {
                    let t = [];
                    for (let e in this.feed.slice(0, 20 * this.newsPage))
                        t.push(this.feed[e]);
                    return t = t.map(t => (t.summary.includes("img") && (t.summary = t.summary.replace("img", 'img style="max-width: 340px; max-height: 230px"')),
                        t)),
                        t
                }
            }
        }
            , ce = le
            , de = (s("f235"),
            y(ce, te, ee, !1, null, "dde91dbc", null))
            , ue = de.exports
            , me = {
            name: "MarketNews",
            components: {
                NewsList: ue,
                BaseWidgetTitle: C
            },
            computed: {
                ...Object(o["b"])(["tokens", "modalMenu"])
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            }
        }
            , pe = me
            , he = y(pe, Xt, Qt, !1, null, "11f39b29", null)
            , ve = he.exports
            , fe = {
            name: "MenuModal",
            components: {
                MarketNews: ve,
                EconomicCalendar: Kt,
                MarketWatch: Wt,
                OrdersHistory: lt,
                OpenOrders: st
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalMenu"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.menu || this.$store.commit(n["M"], {
                            orders: !1,
                            history: !1,
                            market: !1,
                            calendar: !1,
                            news: !1
                        })
                    }
                }
            }
        }
            , ge = fe
            , be = (s("dc93"),
            y(ge, u, m, !1, null, "549557b4", null))
            , ye = be.exports
            , _e = function() {
            var t = this
                , e = t._self._c;
            return e("aside", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.isMobile && t.modals.fullscreen || t.isMobile && t.modals.hamburgerMenu,
                    expression: "(!isMobile && modals.fullscreen) || (isMobile && modals.hamburgerMenu)"
                }],
                class: {
                    mobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        t.activeSelect = !1
                    }
                }
            }, [e("ul", [e("div", {
                staticClass: "top"
            }, [e("div", {
                staticClass: "head",
                class: {
                    mobile: t.isMobile
                }
            }, [e("BaseMonogram"), e("div", {
                staticClass: "user-info label__medium"
            }, [e("span", {
                staticClass: "name"
            }, [t._v(t._s(t.user.fullname))]), t.hideEmail ? t._e() : e("span", {
                staticClass: "email"
            }, [t._v(t._s(t.user.email))])])], 1), e("div", {
                staticClass: "account-info"
            }, [e("div", [e("div", {
                staticClass: "account-balance label__large"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s(t.activeAccount.balance.toFixed(2).toString()))]), e("div", {
                staticClass: "user-id body__extrasmall"
            }, [t._v("# " + t._s(t.user.id))])]), e("BaseButton", {
                attrs: {
                    buttonText: t.tokens.fullScreen.deposit,
                    buttonStyle: "text-tertiary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("deposit")
                    }
                }
            })], 1)]), e("div", {
                staticClass: "scroll-menu"
            }, [e("AsideMenuItem", {
                attrs: {
                    text: t.tokens.fullScreen.dashboard,
                    materialIcon: "dashboard",
                    active: "dashboard" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("dashboard")
                    }
                }
            }), e("AsideMenuItem", {
                attrs: {
                    text: t.tokens.fullScreen.personalInfo,
                    materialIcon: "person",
                    active: "personal" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("personal")
                    }
                }
            }), e("AsideMenuItem", {
                attrs: {
                    text: t.tokens.fullScreen.withdrawal,
                    active: "withdrawal" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("withdrawal")
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("svg", {
                            staticClass: "svg",
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "19",
                                height: "18",
                                viewBox: "0 0 18 17",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M18 17V15H0L5.96046e-08 17H18Z",
                                fill: "#9A9DAB"
                            }
                        }), e("path", {
                            attrs: {
                                d: "M7.67157 0.5L7.72461 2.49758H11.3309L4.5 9.74268L6 11.2427L12.7451 3.91179L12.7451 7.51803L14.7426 7.57107V0.5H7.67157Z",
                                fill: "#9A9DAB"
                            }
                        })])]
                    },
                    proxy: !0
                }])
            }), e("AsideMenuItem", {
                attrs: {
                    text: t.tokens.fullScreen.verification,
                    active: "verification" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("verification")
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "24",
                                viewBox: "0 0 24 24",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M13 15.45V16H5V15.45C5 14.7 5.36667 14.1042 6.1 13.6625C6.83333 13.2208 7.8 13 9 13C10.2 13 11.1667 13.2208 11.9 13.6625C12.6333 14.1042 13 14.7 13 15.45ZM10.4125 11.4125C10.0208 11.8042 9.55 12 9 12C8.45 12 7.97917 11.8042 7.5875 11.4125C7.19583 11.0208 7 10.55 7 10C7 9.45 7.19583 8.97917 7.5875 8.5875C7.97917 8.19583 8.45 8 9 8C9.55 8 10.0208 8.19583 10.4125 8.5875C10.8042 8.97917 11 9.45 11 10C11 10.55 10.8042 11.0208 10.4125 11.4125ZM2.5875 19.4125C2.97917 19.8042 3.45 20 4 20H20C20.55 20 21.0208 19.8042 21.4125 19.4125C21.8042 19.0208 22 18.55 22 18V9L20 11V18H4V6H11L13 4H4C3.45 4 2.97917 4.19583 2.5875 4.5875C2.19583 4.97917 2 5.45 2 6V18C2 18.55 2.19583 19.0208 2.5875 19.4125Z",
                                fill: "#9A9DAB"
                            }
                        }), e("path", {
                            attrs: {
                                d: "M13 7.55L16.55 11.1L22.2 5.45L20.75 4L16.55 8.2L14.45 6.1L13 7.55Z",
                                fill: "#9A9DAB"
                            }
                        })])]
                    },
                    proxy: !0
                }])
            }), e("AsideMenuItem", {
                attrs: {
                    text: t.tokens.fullScreen.accounts,
                    active: "accounts" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("accounts")
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "24",
                                viewBox: "0 0 24 24",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M3.175 18.825C3.95833 19.6083 4.9 20 6 20H11.5C10.5 17.5 10.5 15 12 13.1552L4.15 11.25C4.3 10.8667 4.5375 10.5625 4.8625 10.3375C5.1875 10.1125 5.56667 10 6 10H18C18.5258 10 19.0516 10.0614 19.5559 10.1843C20.4902 10.412 21.3505 10.8505 22 11.5V8C22 6.9 21.6083 5.95833 20.825 5.175C20.0417 4.39167 19.1 4 18 4H6C4.9 4 3.95833 4.39167 3.175 5.175C2.39167 5.95833 2 6.9 2 8V16C2 17.1 2.39167 18.0417 3.175 18.825ZM18 8H6C5.63333 8 5.28333 8.04167 4.95 8.125C4.61667 8.20833 4.3 8.34167 4 8.525V8C4 7.45 4.19583 6.97917 4.5875 6.5875C4.97917 6.19583 5.45 6 6 6H18C18.55 6 19.0208 6.19583 19.4125 6.5875C19.8042 6.97917 20 7.45 20 8V8.525C19.7 8.34167 19.3833 8.20833 19.05 8.125C18.7167 8.04167 18.3667 8 18 8Z",
                                fill: "#9A9DAB"
                            }
                        }), e("path", {
                            attrs: {
                                d: "M15.0179 19.32L13 17.04L13.75 16.2L14.4286 16.96C14.4405 16.4533 14.5327 15.96 14.7054 15.48C14.878 15 15.1369 14.5667 15.4821 14.18C15.8274 13.7933 16.2202 13.5 16.6607 13.3C17.1012 13.1 17.5476 13 18 13C18.3452 13 18.6845 13.0533 19.0179 13.16C19.3512 13.2667 19.6667 13.4333 19.9643 13.66L19.1786 14.54C18.9881 14.4333 18.7917 14.35 18.5893 14.29C18.3869 14.23 18.1845 14.2 17.9821 14.2C17.6726 14.2 17.3631 14.27 17.0536 14.41C16.744 14.55 16.4702 14.7533 16.2321 15.02C15.9821 15.3 15.7976 15.6167 15.6786 15.97C15.5595 16.3233 15.506 16.6867 15.5179 17.06L16.2857 16.2L17.0357 17.04L15.0179 19.32Z",
                                fill: "#9A9DAB"
                            }
                        }), e("path", {
                            attrs: {
                                d: "M16.9821 20.84C16.6488 20.7333 16.3333 20.5667 16.0357 20.34L16.8214 19.46C17.0119 19.5667 17.2083 19.65 17.4107 19.71C17.6131 19.77 17.8155 19.8 18.0179 19.8C18.3274 19.8 18.6369 19.73 18.9464 19.59C19.256 19.45 19.5298 19.2467 19.7679 18.98C20.006 18.7133 20.1875 18.3933 20.3125 18.02C20.4375 17.6467 20.5 17.28 20.5 16.92L19.7143 17.8L18.9643 16.96L20.9821 14.68L23 16.96L22.25 17.8L21.5536 17.04C21.5536 17.5467 21.4702 18.0433 21.3036 18.53C21.1369 19.0167 20.881 19.4533 20.5357 19.84C20.1905 20.2267 19.7946 20.5167 19.3482 20.71C18.9018 20.9033 18.4524 21 18 21C17.6548 21 17.3155 20.9467 16.9821 20.84Z",
                                fill: "#9A9DAB"
                            }
                        })])]
                    },
                    proxy: !0
                }])
            }), e("AsideMenuItem", {
                attrs: {
                    materialIcon: "chat",
                    text: t.tokens.fullScreen.liveChat,
                    active: "support" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("support")
                    }
                }
            }), t.savingExist ? e("AsideMenuItem", {
                attrs: {
                    materialIcon: "savings",
                    text: t.tokens.fullScreen.savings,
                    active: "savings" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("savings")
                    }
                }
            }) : t._e(), e("AsideMenuItem", {
                attrs: {
                    materialIcon: "settings",
                    text: t.tokens.fullScreen.settings,
                    active: "settings" === t.modalFullscreen.page
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePage("settings")
                    }
                }
            })], 1)]), e("AsideMenuItem", {
                attrs: {
                    materialIcon: "logout",
                    text: t.tokens.fullScreen.logOut
                },
                nativeOn: {
                    click: function(e) {
                        return t.logout.apply(null, arguments)
                    }
                }
            })], 1)
        }
            , Ce = []
            , we = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "button-standard",
                class: t.buttonStyle,
                attrs: {
                    disabled: t.disabled
                }
            }, [e("div", {
                staticClass: "state-layer"
            }, [t.buttonText ? e("span", {
                staticClass: "label__large"
            }, [t._v(t._s(t.buttonText))]) : t._e(), t._t("icon")], 2)])
        }
            , ke = []
            , Se = {
            props: {
                buttonText: {
                    type: String
                },
                buttonStyle: {
                    type: String
                },
                disabled: {
                    type: Boolean,
                    default: !1
                }
            },
            name: "BaseButton"
        }
            , xe = Se
            , Me = (s("147c"),
            y(xe, we, ke, !1, null, "6fd5d64a", null))
            , Ae = Me.exports
            , De = function() {
            var t = this
                , e = t._self._c;
            return e("li", {
                staticClass: "aside-menu-item",
                class: {
                    active: t.active,
                    logout: "logout" === t.materialIcon
                }
            }, [e("div", [t.materialIcon ? e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v(t._s(t.materialIcon))]) : t._e(), t._t("icon")], 2), e("span", {
                staticClass: "title__small"
            }, [t._v(t._s(t.text))])])
        }
            , Pe = []
            , Te = {
            name: "AsideMenuItem",
            props: {
                materialIcon: {
                    type: String,
                    default: ""
                },
                text: {
                    type: String,
                    default: ""
                },
                active: {
                    type: Boolean,
                    default: !1
                }
            }
        }
            , Le = Te
            , Ie = (s("4da0"),
            y(Le, De, Pe, !1, null, null, null))
            , Fe = Ie.exports
            , Oe = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "monogram"
            }, [t._v(" A ")])
        }
            , Be = []
            , Ne = {
            name: "BaseMonogram"
        }
            , $e = Ne
            , Ve = (s("0fcb"),
            y($e, Oe, Be, !1, null, "4468a08f", null))
            , Ee = Ve.exports
            , Ue = {
            name: "SideMenu",
            components: {
                BaseButton: Ae,
                AsideMenuItem: Fe,
                BaseMonogram: Ee
            },
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    apiBase: pt["ub"],
                    personalBtns: pt["nb"],
                    activeSelect: !1,
                    brand: pt["e"],
                    aspinDesign: pt["b"],
                    removeEconomicCalendar: pt["tb"],
                    hideTradingBot: pt["T"],
                    hideEmail: pt["N"],
                    whiteAspinTheme: pt["Pb"]
                }
            },
            methods: {
                ...Object(o["c"])(["setLightTheme", "setThemeColors"]),
                currencySign: l["e"],
                switchTheme() {
                    this.setLightTheme(!this.lightTheme),
                        localStorage.setItem("theme", this.lightTheme ? "white" : "black"),
                        localStorage.setItem("tradingview.current_theme.name", this.lightTheme ? "Light" : pt["Lb"]);
                    let t = this.lightTheme ? {
                        ...this.themeColors,
                        "background-dark": "#fff",
                        line: "#fff"
                    } : {
                        ...this.themeColors,
                        "background-dark": pt["Ib"],
                        line: pt["Kb"]
                    };
                    this.setThemeColors(t),
                    document.body.classList.contains("light-theme") && document.body.classList.remove("light-theme"),
                    this.lightTheme && document.body.classList.add("light-theme")
                },
                showMenuModal(t) {
                    this.$store.commit(n["F"], {
                        menu: !0
                    });
                    let e = {
                        orders: !1,
                        history: !1,
                        market: !1,
                        calendar: !1,
                        news: !1
                    };
                    e[t] = !0,
                        this.$store.commit(n["M"], e),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                openAutoTraderModal() {
                    this.$store.commit(n["F"], {
                        autoTrader: !0
                    })
                },
                toggleWidget(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                    e[t] && !this.modals.menu && this.$store.commit(n["F"], {
                        menu: !0,
                        sideMenu: !1
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                closeHamburgerMenu() {
                    setTimeout( () => {
                            this.$store.commit(n["F"], {
                                hamburgerMenu: !1
                            })
                        }
                        , 0)
                },
                changePage(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.closeHamburgerMenu(),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                changeCurrency(t) {
                    localStorage.activeCurrency = t,
                        this.$store.commit(n["c"], t)
                },
                logout() {
                    this.closeHamburgerMenu(),
                        this.$store.dispatch(r["x"])
                },
                goTrade() {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "user", "autoTraderConfig", "modals", "modalMenu", "modalFullscreen", "user", "accounts", "activeAccount", "activeCurrency", "savingExist", "staticBase", "lightTheme", "themeColors"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            }
        }
            , He = Ue
            , je = (s("ff3d"),
            y(He, _e, Ce, !1, null, "dac73012", null))
            , qe = je.exports
            , Re = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "grid-layout-container",
                class: "layout_" + t.gridLayout
            }, t._l(t.visibleCharts, (function(t, s) {
                    return e("div", {
                        key: s,
                        staticClass: "chart-container",
                        class: "chart-" + s
                    }, [e("Chart", {
                        attrs: {
                            chart: t,
                            gridId: s
                        }
                    })], 1)
                }
            )), 0)
        }
            , We = []
            , ze = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chart"
            }, [e("div", {
                staticClass: "chart-col"
            }, [e("div", {
                staticClass: "chart-cont",
                attrs: {
                    id: "chart-" + t.gridId
                }
            })]), e("OrderMenu", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.currentSym,
                    expression: "currentSym"
                }],
                attrs: {
                    chart: t.chart,
                    gridId: t.gridId,
                    visible: t.orderMenu
                }
            }), e("div", {
                staticClass: "no-chart",
                class: {
                    hide: !1 !== t.chart
                },
                on: {
                    click: t.showSymbolsModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add")]), e("span", [t._v(t._s(t.tokens.chart.addNewChart))])])], 1)
        }
            , Ge = []
            , Ye = s("ccfc")
            , Ze = function() {
            var t = this
                , e = t._self._c;
            return t.modals.orderMenuGridWideModal && t.isMobile || !t.isMobile ? e("div", {
                ref: "order-menu",
                staticClass: "order-menu",
                class: {
                    short: t.ordersPane,
                    hidedOnSmallScreen: !t.isMobile
                }
            }, [t.modals.orderMenuGridWideModal ? e("div", {
                staticClass: "order-menu-modal"
            }, [e("div", {
                staticClass: "order-menu-modal-title"
            }, [e("div", {
                staticClass: "title-currency"
            }, [e("div", {
                class: "symbol symbol-" + t.symbol.symbol
            }), e("span", {
                staticClass: "title__large"
            }, [t._v(t._s(t.symbol.symbol))])]), e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.closeModal
                }
            }, [t._v("close")])]), e("BaseModalTabs", {
                attrs: {
                    tabs: ["Buy", "Sell"]
                },
                on: {
                    updateActiveTab: t.updateModalTab
                }
            })], 1) : t._e(), e("div", {
                staticClass: "grid-item"
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "lots" === t.volumeType,
                    expression: "volumeType==='lots'"
                }],
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.orderMenu.volume,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                on: {
                    input: t.updateLotsInput
                },
                model: {
                    value: t.volumeInLots,
                    callback: function(e) {
                        t.volumeInLots = e
                    },
                    expression: "volumeInLots"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.decreaseVolumeInLots.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }], null, !1, 288403378)
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.increaseVolumeInLots.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }], null, !1, 3230556949)
            })], 1), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "units" === t.volumeType,
                    expression: "volumeType==='units'"
                }],
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.orderMenu.volume,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                on: {
                    input: t.updateUnitsInput
                },
                model: {
                    value: t.volumeInUnits,
                    callback: function(e) {
                        t.volumeInUnits = e
                    },
                    expression: "volumeInUnits"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.decreaseVolumeInUnits.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }], null, !1, 288403378)
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.increaseVolumeInUnits.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }], null, !1, 3230556949)
            })], 1), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "currency" === t.volumeType,
                    expression: "volumeType==='currency'"
                }],
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.orderMenu.volume,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                on: {
                    input: t.updateCurrencyInput
                },
                model: {
                    value: t.volumeInCurrency,
                    callback: function(e) {
                        t.volumeInCurrency = e
                    },
                    expression: "volumeInCurrency"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.decreaseVolumeInCurrency.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }], null, !1, 288403378)
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.increaseVolumeInCurrency.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }], null, !1, 3230556949)
            })], 1), e("div", {
                staticClass: "btns body__medium"
            }, t._l(t.volumesTypes, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "btn",
                        class: {
                            active: t.volumeType === s
                        },
                        on: {
                            click: function(e) {
                                t.volumeType = s
                            }
                        }
                    }, [t._v(" " + t._s(t.tokens.orderMenu[s]) + " ")])
                }
            )), 0)]), e("div", {
                staticClass: "grid-item order-vals"
            }, [e("OrderPanelVals", {
                attrs: {
                    chart: t.chart,
                    contractSize: t.contractSize,
                    orderVals: t.orderVals,
                    pendingPrice: t.pendingPrice
                }
            })], 1), e("div", {
                staticClass: "grid-item profit-calculator"
            }, [e("BaseButton", {
                attrs: {
                    buttonText: t.tokens.profitCalculatorModal.profitCalculator,
                    buttonStyle: "text-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.showProfitCalculator.apply(null, arguments)
                    }
                }
            })], 1), e("div", {
                staticClass: "grid-item"
            }, [e("div", {
                staticClass: "tpsl"
            }, [e("div", {
                staticClass: "tpsl-title"
            }, [e("div", {
                staticClass: "tpsl-checkbox",
                on: {
                    click: function(e) {
                        return t.toggleBlock("tpslBlockState")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v(" " + t._s(t.tpslBlockState ? "check_box" : "check_box_outline_blank") + " ")])]), e("span", {
                staticClass: "body__large"
            }, [t._v(t._s(t.tokens.orderMenu.takeProfitStopLoss))])]), t.tpslBlockState ? e("span", {
                staticClass: "tpsl-inner"
            }, [e("AutoCloseBlock", {
                attrs: {
                    data: t.autoCloseData
                }
            })], 1) : t._e()]), e("div", {
                staticClass: "pending"
            }, [e("div", {
                staticClass: "pending-title"
            }, [e("div", {
                staticClass: "pending-checkbox",
                on: {
                    click: function(e) {
                        return t.toggleBlock("pendingBlockState")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v(" " + t._s(t.pendingBlockState ? "check_box" : "check_box_outline_blank") + " ")])]), e("span", {
                staticClass: "body__large"
            }, [t._v(t._s(t.tokens.orderMenu.pending))])]), t.pendingBlockState ? e("span", {
                staticClass: "pending-inner"
            }, [e("PendingBlock", {
                attrs: {
                    data: t.pendingData
                }
            })], 1) : t._e()])]), e("div", {
                staticClass: "grid-item meter"
            }, [e("BaseChartFearGreedIndex", {
                attrs: {
                    data: t.trend
                }
            })], 1), e("div", {
                staticClass: "grid-item buy-sell"
            }, [t.isMobile && 0 == t.activeModalTab || !t.isMobile ? e("BaseTradingButton", {
                attrs: {
                    buttonText: t.sessionsState[t.currentSym] ? t.tokens.orderMenu.buy.toUpperCase() : "Closed",
                    buttonClass: "buy" + (t.sessionsState[t.currentSym] ? "" : " close") + (t.tradeDisabled ? " disabled" : "")
                },
                nativeOn: {
                    click: function(e) {
                        return t.openOrder(0)
                    }
                },
                scopedSlots: t._u([{
                    key: "sum",
                    fn: function() {
                        var s, a, i, o, n, r, l, c;
                        return [e("span", {
                            staticClass: "price"
                        }, [e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (s = t.symbols[t.currentSym]) && void 0 !== s && s.quote && null !== (a = t.symbols[t.currentSym]) && void 0 !== a && a.quote.bid ? t.symbols[t.currentSym] && t.symbols[t.currentSym].quote && null !== (i = t.symbols[t.currentSym]) && void 0 !== i && i.quote.ask ? null === (o = t.symbols[t.currentSym]) || void 0 === o ? void 0 : o.quote.ask.toFixed(t.symbols[t.currentSym].precision).slice(0, -2) : 0 : "") + " ")]), e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (n = t.symbols[t.currentSym]) && void 0 !== n && n.quote && null !== (r = t.symbols[t.currentSym]) && void 0 !== r && r.quote.bid ? t.symbols[t.currentSym] && null !== (l = t.symbols[t.currentSym]) && void 0 !== l && l.quote ? null === (c = t.symbols[t.currentSym]) || void 0 === c ? void 0 : c.quote.ask.toFixed(t.symbols[t.currentSym].precision).slice(-2) : 0 : "") + " ")])])]
                    },
                    proxy: !0
                }], null, !1, 4042353248)
            }) : t._e(), t.isMobile && 1 == t.activeModalTab || !t.isMobile ? e("BaseTradingButton", {
                attrs: {
                    buttonText: t.sessionsState[t.currentSym] ? t.tokens.orderMenu.sell.toUpperCase() : "Closed",
                    buttonClass: "sell" + (t.sessionsState[t.currentSym] ? "" : " close") + (t.tradeDisabled ? " disabled" : "")
                },
                nativeOn: {
                    click: function(e) {
                        return t.openOrder(1)
                    }
                },
                scopedSlots: t._u([{
                    key: "sum",
                    fn: function() {
                        var s, a, i, o, n, r, l, c, d;
                        return [e("span", {
                            staticClass: "price"
                        }, [e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (s = t.symbols[t.currentSym]) && void 0 !== s && s.quote && null !== (a = t.symbols[t.currentSym]) && void 0 !== a && a.quote.bid ? t.symbols[t.currentSym] && null !== (i = t.symbols[t.currentSym]) && void 0 !== i && i.quote && null !== (o = t.symbols[t.currentSym]) && void 0 !== o && o.quote.ask ? null === (n = t.symbols[t.currentSym]) || void 0 === n ? void 0 : n.quote.bid.toFixed(t.symbols[t.currentSym].precision).slice(0, -2) : 0 : "") + " ")]), e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (r = t.symbols[t.currentSym]) && void 0 !== r && r.quote && null !== (l = t.symbols[t.currentSym]) && void 0 !== l && l.quote.bid ? t.symbols[t.currentSym] && null !== (c = t.symbols[t.currentSym]) && void 0 !== c && c.quote ? null === (d = t.symbols[t.currentSym]) || void 0 === d ? void 0 : d.quote.bid.toFixed(t.symbols[t.currentSym].precision).slice(-2) : 0 : "") + " ")])])]
                    },
                    proxy: !0
                }], null, !1, 2693751071)
            }) : t._e()], 1)]) : t._e()
        }
            , Je = []
            , Ke = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "inner"
            }, [e("div", {
                staticClass: "svg-container"
            }, [e("svg", {
                attrs: {
                    width: "100%",
                    height: "100%",
                    xmlns: "http://www.w3.org/2000/svg",
                    "xmlns:svg": "http://www.w3.org/2000/svg"
                }
            }, [e("defs", [e("linearGradient", {
                attrs: {
                    id: "paint0_linear",
                    x1: "0.0",
                    x2: "1.9",
                    y1: "2.1",
                    y2: "1.8"
                }
            }, [e("stop", {
                attrs: {
                    offset: "0.25",
                    "stop-color": "#FF004D"
                }
            }), e("stop", {
                attrs: {
                    offset: "0.75",
                    "stop-color": "#00FFC5"
                }
            })], 1), e("linearGradient", {
                attrs: {
                    id: "paint1_linear",
                    x1: "0.0",
                    x2: "1.9",
                    y1: "2.1",
                    y2: "1.8"
                }
            }, [e("stop", {
                attrs: {
                    offset: "0.25",
                    "stop-color": "#FF004D"
                }
            }), e("stop", {
                attrs: {
                    offset: "0.75",
                    "stop-color": "#00FFC5"
                }
            })], 1)], 1), e("g", {
                staticClass: "layer"
            }, [e("path", {
                attrs: {
                    "clip-rule": "evenodd",
                    d: "m146.65,77.97l7.9,-0.17c-6.19,-71.44 -58.69,-77.98 -76.92,-77.98c-42.8,0 -77.5,34.03 -77.5,76c0,0.84 0.01,1.67 0.04,2.5l8.98,-0.08c-0.01,-0.58 -0.02,-1.16 -0.02,-1.74c0,-37.35 30.64,-67.68 68.5,-67.68c15.91,0 68.13,12.39 69.02,69.15zm8.44,0.35c0,0 0,0 0,0l0,0z",
                    fill: "url(#paint0_linear)",
                    "fill-opacity": "0.5",
                    "fill-rule": "evenodd",
                    id: "svg_1"
                }
            }), e("path", {
                attrs: {
                    d: "m155.5,76c0,0.84 -0.01,1.67 -0.04,2.5l-5.98,0c0,-0.23 0.01,-0.45 0.01,-0.68c0.01,-0.38 0.01,-0.76 0.01,-1.14c0,-39.04 -32.01,-70.68 -71.5,-70.68c-39.49,0 -71.5,31.64 -71.5,70.68c0,0.61 0.01,1.21 0.02,1.82l-5.98,0c-0.03,-0.83 -0.04,-1.66 -0.04,-2.5c0,-41.97 34.7,-76 77.5,-76c42.8,0 77.5,34.03 77.5,76z",
                    fill: "#3F454F",
                    id: "svg_2"
                }
            }), e("path", {
                attrs: {
                    "clip-rule": "evenodd",
                    d: "m78,6c16.59,0 69.75,12.19 71.51,72.67l6.16,0.06c-1.38,-68.66 -59.43,-78.72 -77.66,-78.72c-42.8,0 -77.5,34.03 -77.5,76c0,0.84 0.01,1.67 0.04,2.5l5.98,0c-0.01,-0.61 -0.02,-1.21 -0.02,-1.82c0,-39.04 32.01,-70.68 71.5,-70.68z",
                    fill: "url(#paint1_linear)",
                    "fill-rule": "evenodd",
                    id: "svg_3"
                }
            }), e("circle", {
                attrs: {
                    cx: "78",
                    cy: "78",
                    fill: "#9A9DAB",
                    id: "svg_4",
                    r: "3"
                }
            }), e("path", {
                style: {
                    transform: `rotate(${t.meterData - 126}deg)`
                },
                attrs: {
                    d: "m109.6,34.54l-30.12,44.86l-3.24,-2.35l33.36,-42.51z",
                    fill: "#9A9DAB",
                    id: "arrow"
                }
            })])])]), e("div", {
                staticClass: "main-text body__large"
            }, [t._v(t._s(t.mainText))]), e("div", {
                staticClass: "item-text strong-sell label__medium"
            }, [t._v("Strong sell")]), e("div", {
                staticClass: "item-text sell label__medium"
            }, [t._v("Sell")]), e("div", {
                staticClass: "item-text neutral label__medium"
            }, [t._v("Neutral")]), e("div", {
                staticClass: "item-text buy label__medium"
            }, [t._v("Buy")]), e("div", {
                staticClass: "item-text strong-buy label__medium"
            }, [t._v("Strong buy")])])
        }
            , Xe = []
            , Qe = {
            name: "BaseChartFearGreedIndex",
            props: {
                data: {
                    type: Number,
                    default: 0,
                    required: !0
                }
            },
            computed: {
                meterData() {
                    let t = 1.8 * this.data;
                    return t < 0 ? t = 0 : t > 180 && (t = 180),
                        t
                },
                mainText() {
                    let t;
                    return this.meterData < 31 ? t = "Strong Sell" : this.meterData > 30 && this.meterData < 71 ? t = "Sell" : this.meterData > 70 && this.meterData < 121 ? t = "Neutral" : this.meterData > 120 && this.meterData < 151 ? t = "Buy" : this.meterData <= 180 && (t = "Strong Buy"),
                        t
                }
            }
        }
            , ts = Qe
            , es = (s("abd1"),
            y(ts, Ke, Xe, !1, null, "69cbd2d8", null))
            , ss = es.exports
            , as = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "wrapper"
            }, [t.title ? e("div", {
                staticClass: "title body__medium"
            }, [t._v(" " + t._s(t.title))]) : t._e(), e("div", {
                staticClass: "input-box"
            }, [e("div", {
                staticClass: "box"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.baseInput,
                    expression: "baseInput"
                }],
                staticClass: "body__large",
                class: {
                    "no-valid": t.error
                },
                style: t.$slots.icon ? "padding-left: 45px" : "",
                attrs: {
                    placeholder: t.placeholder,
                    readonly: t.readonly,
                    maxlength: "10"
                },
                domProps: {
                    value: t.baseInput
                },
                on: {
                    input: [function(e) {
                        e.target.composing || (t.baseInput = e.target.value)
                    }
                        , t.updateInputValue]
                }
            }), t.baseInput && !t.readonly ? e("div", {
                staticClass: "icons",
                on: {
                    click: t.clearInputValue
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("close")])]) : t._e(), e("div", {
                staticClass: "slot-wrapper body__large"
            }, [t._t("icon")], 2)])]), t.info ? e("small", [t._v(t._s(t.info))]) : t._e()])
        }
            , is = []
            , os = {
            name: "BaseNumberInput",
            props: {
                value: {
                    type: [String, Number],
                    default: ""
                },
                placeholder: {
                    type: String,
                    default: ""
                },
                title: {
                    type: String,
                    default: ""
                },
                type: {
                    type: String,
                    default: "text"
                },
                error: {
                    type: Boolean,
                    default: !1
                },
                info: {
                    type: String,
                    default: ""
                },
                validateFunction: {
                    type: Function
                },
                readonly: {
                    type: Boolean,
                    default: !1
                }
            },
            data() {
                return {
                    baseInput: this.value
                }
            },
            methods: {
                updateInputValue(t) {
                    this.validateFunction && t && (t.target.value = this.validateFunction(t.target.value),
                        this.baseInput = this.validateFunction(t.target.value)),
                    "number" === this.type && t && (this.baseInput = this.validateNumberInput(t.target.value)),
                        this.$emit("input", this.baseInput)
                },
                validateNumberInput(t) {
                    return t = t.replace(/[^0-9.,]/g, "").replace(/(\..*)\./g, "$1").replace(/(,.*),/g, "$1").replace(/(,.*)\./g, "$1").replace(/(\..*),/g, "$1"),
                    ((t.match(/\./g) || []).length > 1 || (t.match(/,/g) || []).length > 1) && (t = this.validateNumberInput(t)),
                        t
                },
                clearInputValue() {
                    this.baseInput = "",
                        this.updateInputValue()
                }
            },
            watch: {
                value(t) {
                    this.baseInput = t
                }
            }
        }
            , ns = os
            , rs = (s("12c6"),
            y(ns, as, is, !1, null, "1ea54034", null))
            , ls = rs.exports
            , cs = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "trading-button",
                class: t.buttonClass
            }, [e("span", {
                staticClass: "state-layer"
            }, [e("span", {
                staticClass: "label__largetrading"
            }, [t._v(t._s(t.buttonText))]), e("span", {
                staticClass: "price label__largetrading"
            }, [t._t("sum")], 2)])])
        }
            , ds = []
            , us = {
            name: "BaseTradingButton",
            props: {
                showSum: {
                    type: Boolean
                },
                buttonText: {
                    type: String
                },
                buttonClass: {
                    type: String
                }
            }
        }
            , ms = us
            , ps = (s("6201"),
            y(ms, cs, ds, !1, null, "0692458e", null))
            , hs = ps.exports
            , vs = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "tabs",
                on: {
                    click: t.updateActiveTab
                }
            }, t._l(t.tabs, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "item title__medium",
                        class: {
                            active: s === t.tabs[t.activeTab]
                        },
                        attrs: {
                            "data-index": a
                        }
                    }, [t._v(t._s(s))])
                }
            )), 0)
        }
            , fs = []
            , gs = {
            name: "BaseModalTabs",
            props: {
                tabs: {
                    type: Array,
                    default: () => []
                }
            },
            data() {
                return {
                    activeTab: "0"
                }
            },
            methods: {
                updateActiveTab(t) {
                    let e = t.target.getAttribute("data-index");
                    e && (this.activeTab = e,
                        this.$emit("updateActiveTab", e))
                }
            }
        }
            , bs = gs
            , ys = (s("e1ec"),
            y(bs, vs, fs, !1, null, "f878e490", null))
            , _s = ys.exports
            , Cs = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "auto-close"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.autoCloseModal.takeProfit,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                model: {
                    value: t.values.tp,
                    callback: function(e) {
                        t.$set(t.values, "tp", e)
                    },
                    expression: "values.tp"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.tp = t.values.tp ? Math.max(0, parseFloat(t.values.tp) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }])
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.tp = t.values.tp ? (parseFloat(t.values.tp) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            })], 1), e("div", {
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.autoCloseModal.stopLoss,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                model: {
                    value: t.values.sl,
                    callback: function(e) {
                        t.$set(t.values, "sl", e)
                    },
                    expression: "values.sl"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.sl = t.values.sl ? Math.max(0, parseFloat(t.values.sl) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }])
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.sl = t.values.sl ? (parseFloat(t.values.sl) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            })], 1)])
        }
            , ws = []
            , ks = {
            name: "AutoCloseBlock",
            components: {
                BaseNumberInput: ls,
                BaseButton: Ae
            },
            props: {
                data: Object
            },
            data() {
                return {
                    values: {
                        symbolActive: this.data.symbolActive,
                        tp: this.data.tp,
                        sl: this.data.sl
                    }
                }
            },
            methods: {
                updateInput(t) {
                    return t.replace(/,/g, "")
                },
                apply() {
                    this.$store.commit(n["I"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !1
                        })
                },
                currencySign: l["e"],
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalAutoClose", "tokens", "activeAccount", "symbols", "orders"]),
                modalSymbolActive() {
                    var t;
                    if (null === (null === (t = this.values) || void 0 === t ? void 0 : t.symbolActive)) {
                        var e, s;
                        const t = null === (e = this.orders) || void 0 === e || null === (e = e[null === (s = this.values) || void 0 === s ? void 0 : s.item]) || void 0 === e ? void 0 : e.symbol;
                        t && this.$store.commit(n["I"], {
                            symbolActive: this.symbols[t]
                        })
                    }
                    return this.modalAutoClose.symbolActive || {
                        precision: 0,
                        quote: {
                            bid: 0,
                            ask: 0
                        }
                    }
                }
            },
            watch: {
                modalAutoClose: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["I"], t),
                            this.apply()
                    }
                }
            }
        }
            , Ss = ks
            , xs = (s("91d3"),
            y(Ss, Cs, ws, !1, null, "a7a49a42", null))
            , Ms = xs.exports
            , As = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "pending"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.pendingModal.assetPrice,
                    type: "number",
                    placeholder: t.tokens.pendingModal.current,
                    validateFunction: t.updateInput
                },
                model: {
                    value: t.values.price,
                    callback: function(e) {
                        t.$set(t.values, "price", e)
                    },
                    expression: "values.price"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePrice(0)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }])
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePrice(1)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            })], 1), e("div", {
                staticClass: "value-container"
            }, [e("div", {
                staticClass: "block-bottom"
            }, [e("BaseButton", {
                attrs: {
                    buttonText: t.tokens.pendingModal.revert,
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.price = ""
                    }
                }
            }), e("span", {
                staticClass: "info body__small"
            }, [t._v(t._s(t.tokens.pendingModal.automatically))])], 1)])])
        }
            , Ds = []
            , Ps = {
            name: "PendingBlock",
            components: {
                BaseNumberInput: ls,
                BaseButton: Ae
            },
            props: {
                data: {
                    type: Object
                }
            },
            data() {
                return {
                    values: {
                        symbolActive: this.data.symbolActive,
                        price: this.data.price
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalPending", "tokens", "symbols", "symbolsActive"]),
                currentSym() {
                    return {
                        precision: 0,
                        quote: {
                            bid: 0
                        }
                    }
                }
            },
            methods: {
                changePrice(t) {
                    this.values.price || (this.values.price = this.currentSym.quote.bid),
                        t ? this.values.price = Number(this.values.price) + Math.pow(.1, this.currentSym.precision) : (this.values.price -= Math.pow(.1, this.currentSym.precision),
                            this.values.price = Math.max(0, this.values.price)),
                        this.values.price = (this.values.price + Number.EPSILON).toFixed(this.currentSym.precision)
                },
                updateInput(t) {
                    return t.replace(/,/g, "")
                },
                apply() {
                    this.$store.commit(n["N"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            pending: !1
                        })
                },
                isMobile: l["h"]
            },
            watch: {
                modalPending: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["N"], {
                            symbolActive: t.symbolActive,
                            price: t.price
                        }),
                            this.apply()
                    }
                }
            }
        }
            , Ts = Ps
            , Ls = (s("33e6"),
            y(Ts, As, Ds, !1, null, "4000876e", null))
            , Is = Ls.exports
            , Fs = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "order-vals body__small"
            }, [e("div", {
                staticClass: "order-val"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.orderMenu.contractSize) + ":")]), e("span", {
                staticClass: "digit"
            }, [t._v(t._s(t.contractSize.toLocaleString()))])]), e("div", {
                staticClass: "order-val"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.orderMenu.position) + ":")]), e("span", {
                staticClass: "digit"
            }, [t._v(t._s(t.orderVals.position.toLocaleString()))])]), e("div", {
                staticClass: "order-val"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.orderMenu.margin) + ":")]), e("span", {
                staticClass: "digit",
                class: {
                    red: t.orderVals.margin > t.balances.equity - t.balances.margin
                }
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + t._s(t.orderVals.margin.toLocaleString()) + " ")])]), e("div", {
                staticClass: "order-val"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.orderMenu.freeMargin) + ":")]), e("span", {
                staticClass: "digit",
                class: {
                    red: t.orderVals.freeMargin < 0
                }
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + t.orderVals.freeMargin.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "order-val",
                class: {
                    hide: t.pendingPrice
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(" " + t._s(t.tokens.orderMenu.spread) + ": ")]), e("span", {
                staticClass: "digit"
            }, [t._v(t._s(t.spread))])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: 1 == t.showLeverage,
                    expression: "showLeverage == 1"
                }],
                staticClass: "order-val"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(" " + t._s(t.tokens.orderMenu.leverage) + ": ")]), e("span", {
                staticClass: "digit"
            }, [t._v("1:" + t._s(t.computedLeverage))])])])
        }
            , Os = []
            , Bs = {
            name: "OrderPanelVals",
            props: ["chart", "contractSize", "orderVals", "pendingPrice"],
            data() {
                return {
                    showLeverage: pt["yb"]
                }
            },
            computed: {
                ...Object(o["b"])(["activeAccount", "tokens", "symbols"]),
                balances() {
                    let t = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        equity: 0,
                        margin: 0
                    };
                    if (!this.activeAccount.id)
                        return t;
                    t.balance = this.activeAccount.balance,
                        t.credit = this.activeAccount.credit;
                    let e = {};
                    for (let s in this.activeAccount.orders) {
                        let a = this.activeAccount.orders[s];
                        a.easy_amount = a.easy_amount || a.margin,
                            t.orders += a.easy_amount,
                        void 0 === e[a.symbol] && (e[a.symbol] = 0),
                            e[a.symbol] += a.type % 2 ? -a.margin : a.margin,
                        this.symbols[a.symbol] && (t.profit += a.type < 2 ? a.point * (a.type ? a.price_open - this.symbols[a.symbol].quote.ask : this.symbols[a.symbol].quote.bid - a.price_open) * Math.pow(10, this.symbols[a.symbol].precision) : 0)
                    }
                    for (let s in e)
                        t.margin += Math.abs(e[s]);
                    return t.equity = t.balance + t.credit + t.profit,
                        t
                },
                currentSym() {
                    return this.chart.symbol || ""
                },
                spread() {
                    return this.currentSym && this.symbols[this.currentSym] ? Number(this.symbols[this.currentSym].quote.ask - this.symbols[this.currentSym].quote.bid).toFixed(this.symbols[this.currentSym].precision) : 0
                },
                computedLeverage() {
                    return this.symbols[this.currentSym] ? this.symbols[this.currentSym].leverage_default || this.activeAccount.leverage : 1
                }
            },
            methods: {
                currencySign: l["e"]
            }
        }
            , Ns = Bs
            , $s = (s("f60f"),
            y(Ns, Fs, Os, !1, null, "f9d1ec9c", null))
            , Vs = $s.exports
            , Es = {
            name: "OrderMenu",
            components: {
                BaseChartFearGreedIndex: ss,
                OrderPanelVals: Vs,
                BaseNumberInput: ls,
                BaseButton: Ae,
                AutoCloseBlock: Ms,
                PendingBlock: Is,
                BaseTradingButton: hs,
                BaseModalTabs: _s
            },
            props: ["chart", "gridId", "visible"],
            data() {
                var t, e;
                return {
                    tpslBlockState: !1,
                    pendingBlockState: !1,
                    leverage: 100,
                    tp: "",
                    tpType: "=",
                    sl: "",
                    slType: "=",
                    pendingPrice: "",
                    volumesTypes: (null === (t = this.user) || void 0 === t ? void 0 : t.volume_units.split(",")) || pt["Nb"],
                    volumeType: (null === (e = this.user) || void 0 === e ? void 0 : e.volume_units.split(",")[0]) || "lots",
                    customTpSl: pt["E"],
                    volumeInUnits: 1,
                    volumeInLots: 0,
                    volumeInCurrency: 0,
                    lotStepLength: 2,
                    lotStepStr: "",
                    lotStepChecks: [],
                    activeModalTab: 0,
                    isMobile: Object(l["h"])()
                }
            },
            mounted() {
                this.$store.commit(n["G"], {
                    contractSize: this.contractSize
                })
            },
            methods: {
                showProfitCalculator() {
                    this.$store.commit(n["F"], {
                        profitCalculator: !0,
                        account: !1
                    })
                },
                toggleBlock(t) {
                    this[t] = !this[t]
                },
                updateInput(t) {
                    return t.endsWith(".") ? t.replace(/,/g, "") : Number(t.replace(/,/g, ""))
                },
                decreaseVolumeInLots() {
                    this.volumeInLots = Number((this.volumeInLots - this.symbols[this.currentSym].lot_step < 0 ? this.volumeInLots : parseFloat(this.volumeInLots) - this.symbols[this.currentSym].lot_step).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((this.volumeInLots * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                increaseVolumeInLots() {
                    this.volumeInLots = Number((parseFloat(this.volumeInLots) + this.symbols[this.currentSym].lot_step).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((this.volumeInLots * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                decreaseVolumeInUnits() {
                    this.volumeInUnits = this.volumeInUnits <= 1 ? this.volumeInUnits : this.volumeInUnits - 1,
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                increaseVolumeInUnits() {
                    this.volumeInUnits = parseFloat(this.volumeInUnits) + 1,
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                decreaseVolumeInCurrency() {
                    this.volumeInCurrency = this.volumeInCurrency <= 1 ? this.volumeInCurrency : this.volumeInCurrency - 1,
                        this.volumeInUnits = Number((this.volumeInCurrency * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))
                },
                increaseVolumeInCurrency() {
                    this.volumeInCurrency = parseFloat(this.volumeInCurrency) + 1,
                        this.volumeInUnits = Number((this.volumeInCurrency * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))
                },
                updateLotsInput(t) {
                    let e = t;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInLots = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((e * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : this.volumeInLots = e.split(",")[0] + ".") : this.volumeInLots = "0"
                },
                updateUnitsInput(t) {
                    let e = t;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInUnits = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((e / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((e * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : this.volumeInUnits = e.split(",")[0] + ".") : this.volumeInUnits = "0"
                },
                updateCurrencyInput(t) {
                    let e = t;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInCurrency = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((e * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))) : this.volumeInCurrency = e.split(",")[0] + ".") : this.volumeInCurrency = "0"
                },
                openOrder(t) {
                    if (!this.symbols[this.currentSym])
                        return;
                    if (!this.sessionsState[this.currentSym] || !this.symbols[this.currentSym].enable)
                        return void this.$store.commit(n["V"], "MARKET_CLOSED");
                    if (!this.activeAccount.enable)
                        return void this.$store.commit(n["V"], "TRADING_DISABLED");
                    let e = this.pendingPrice || this.symbols[this.currentSym].quote[t ? "bid" : "ask"]
                        , s = 0
                        , a = 0;
                    if (this.tp)
                        switch (this.tpType) {
                            case "%":
                                a = Number(e) + (t ? -1 : 1) * e * this.tp / (100 * this.leverage);
                                break;
                            case "$":
                                a = Number(e) + (t ? -1 : 1) * e * this.tp / (this.leverage * this.volume);
                                break;
                            case "=":
                                a = this.tp;
                                break
                        }
                    if (this.sl)
                        switch (this.slType) {
                            case "%":
                                s = Number(e) + (t ? 1 : -1) * e * this.sl / (100 * this.leverage);
                                break;
                            case "$":
                                s = Number(e) + (t ? 1 : -1) * e * this.sl / (this.leverage * this.volume);
                                break;
                            case "=":
                                s = this.sl;
                                break
                        }
                    if (this.pendingPrice) {
                        let e = 0;
                        e = t ? this.pendingPrice < this.symbols[this.currentSym].quote.bid ? 5 : 3 : this.pendingPrice < this.symbols[this.currentSym].quote.ask ? 2 : 4,
                            t = e
                    }
                    if (this.customTpSl) {
                        if (0 == t) {
                            if (s && this.pendingPrice - s < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid SL");
                            if (a && a - this.pendingPrice < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid TP")
                        }
                        if (1 == t) {
                            if (s && s - this.pendingPrice < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid SL");
                            if (a && this.pendingPrice - a < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid TP")
                        }
                    }
                    let i = {
                        type: t,
                        symbol: this.currentSym,
                        volume: this.orderVals.position,
                        account_id: this.activeAccount.id,
                        sl: s,
                        tp: a,
                        price_open: this.pendingPrice || void 0
                    };
                    this.$store.dispatch(r["j"], i).then( () => {
                            this.tp = "",
                                this.sl = ""
                        }
                    )
                },
                updateModalTab(t) {
                    this.activeModalTab = t
                },
                closeModal() {
                    this.$store.commit(n["F"], {
                        orderMenuGridWideModal: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "sessionsState", "activeAccount", "tokens", "modalAutoClose", "modalPending", "tradeDisabled", "ordersPane", "orders", "user", "conversions", "modals", "chartActive", "charts"]),
                autoCloseData() {
                    return {
                        symbolActive: this.symbols[this.currentSym],
                        tp: this.tp,
                        sl: this.sl
                    }
                },
                pendingData() {
                    return {
                        symbolActive: this.symbols[this.currentSym],
                        price: this.pendingPrice
                    }
                },
                checkLotStepZeros() {
                    if (0 == this.lotStepStr)
                        return;
                    let t = []
                        , e = "0.0"
                        , s = this.lotStepStr.slice(0, -1);
                    for (let a = 0; a < 10; a++) {
                        if (t.push(e),
                        "0" !== s && e === s)
                            break;
                        e += "0"
                    }
                    return t
                },
                trend() {
                    return this.symbols && this.currentSym ? this.symbols[this.currentSym].quote.trend : 50
                },
                curSymObj() {
                    return this.symbols[this.currentSym] || {
                        lot_step: 0
                    }
                },
                orderVals() {
                    let t = {
                        position: 0,
                        margin: 0,
                        freeMargin: 0,
                        leverage: 1
                    };
                    if (!this.symbols[this.currentSym] || !this.activeAccount.id || !this.volumeInLots)
                        return t;
                    t.position = parseFloat(this.volumeInLots) * this.contractSize,
                        t.leverage = this.symbols[this.currentSym].leverage_default || this.activeAccount.leverage;
                    let e = 0
                        , s = {};
                    for (let p in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[p];
                        void 0 === s[t.symbol] && (s[t.symbol] = 0),
                            s[t.symbol] += t.type % 2 ? -t.margin : t.margin,
                            this.symbols[t.symbol]
                    }
                    for (let p in s)
                        e += Math.abs(s[p]);
                    let a = 1
                        , i = this.symbols[this.currentSym].base_currency
                        , o = 1
                        , n = this.activeAccount.currency
                        , r = 1;
                    void 0 !== this.symbols["USD" + i] ? a = this.symbols["USD" + i].quote.bid : void 0 !== this.symbols[i + "USD"] && (a = 1 / this.symbols[i + "USD"].quote.bid),
                        void 0 !== this.symbols["USD" + n] ? o = this.symbols["USD" + n].quote.bid : void 0 !== this.symbols[n + "USD"] && (o = 1 / this.symbols[n + "USD"].quote.bid);
                    let l = o / a
                        , c = t.position / t.leverage;
                    t.margin = parseFloat((c * this.symbols[this.currentSym].quote.bid * l).toFixed(this.activeAccount.precision)) || 0,
                    "BTC" !== n && (r = this.conversions[n],
                        t.margin /= r),
                    "RUB" === n && (r = 1 / this.conversions[n],
                        t.margin = parseFloat((r * this.symbols[this.currentSym].quote.bid / t.leverage).toFixed(this.activeAccount.precision)) || 0);
                    let d = 0;
                    for (let p in this.orders) {
                        let t = this.orders[p];
                        t.type > 1 || !this.symbols[t.symbol] || (d += t.point * (0 === t.type ? this.symbols[t.symbol].quote.bid - t.price_open : t.price_open - this.symbols[t.symbol].quote.ask) * Math.pow(10, this.symbols[t.symbol].precision) + t.swap + t.commission)
                    }
                    let u = this.activeAccount.balance + this.activeAccount.credit + d
                        , m = u - e;
                    return t.freeMargin = m.toLocaleString(void 0, {
                        minimumFractionDigits: this.activeAccount.precision,
                        maximumFractionDigits: this.activeAccount.precision
                    }),
                        t
                },
                currentSym() {
                    return this.chart.symbol || ""
                },
                contractSize() {
                    return void 0 !== this.symbols[this.currentSym] && this.symbols[this.currentSym].lot || 1
                },
                computedConversions() {
                    let t = {
                        base: 1,
                        acc: 1
                    };
                    if (void 0 === this.symbols[this.currentSym])
                        return t;
                    let e = this.activeAccount.currency;
                    return "USD" !== e && (void 0 !== this.symbols[e + "USD"] ? t.acc = this.symbols[e + "USD"].quote.bid : void 0 !== this.symbols["USD" + e] ? t.acc = 1 / this.symbols["USD" + e].quote.bid : t.acc = this.conversions[e]),
                        t
                },
                symbol() {
                    let t = {
                        alias: ""
                    };
                    return this.chartActive && this.charts[this.chartActive] && this.symbols[this.charts[this.chartActive].symbol] || t
                }
            },
            watch: {
                activeAccount(t) {
                    t && (this.leverage = t.leverage)
                },
                sl(t) {
                    this.sl = String(t).split(",").join(".")
                },
                tp(t) {
                    this.tp = String(t).split(",").join(".")
                },
                modalAutoClose: {
                    deep: !0,
                    handler(t) {
                        t.orderActive || (t.event && (this.tp = t.tp,
                            this.sl = t.sl,
                            this.$store.commit(n["I"], {
                                event: 0
                            })),
                            this.tpType = t.tpType,
                            this.slType = t.slType)
                    }
                },
                modalPending: {
                    deep: !0,
                    handler(t) {
                        t.event && (this.pendingPrice = t.price,
                            this.$store.commit(n["N"], {
                                event: 0
                            }))
                    }
                },
                curSymObj: {
                    deep: !0,
                    handler(t, e) {
                        t !== e && t.lot_step && (this.$set(this, "lotStepLength", t.lot_step.toString().length - 2 > 0 ? t.lot_step.toString().length - 2 : 2),
                            this.$set(this, "lotStepStr", t.lot_step.toString()),
                            this.$set(this, "lotStepChecks", this.checkLotStepZeros),
                            this.volumeInLots = t.lot_step || .01,
                            this.volumeInUnits = Number((this.volumeInLots * t.lot).toFixed(3)),
                        void 0 !== t.quote && (this.volumeInCurrency = Number((this.volumeInUnits * t.quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))))
                    }
                },
                user: {
                    deep: !0,
                    handler(t) {
                        "" === t.volume_units ? this.$set(this, "volumesTypes", pt["Nb"]) : this.$set(this, "volumesTypes", this.user.volume_units.split(",")),
                            this.$set(this, "volumeType", "lots")
                    }
                }
            }
        }
            , Us = Es
            , Hs = (s("69d7"),
            y(Us, Ze, Je, !1, null, "2779789d", null))
            , js = Hs.exports
            , qs = s("e7ca")
            , Rs = {
            name: "Chart",
            components: {
                OrderMenu: js
            },
            props: ["chart", "gridId"],
            mounted() {
                setInterval( () => {
                        if (this.tvWidget && this.chart.id && this.ready) {
                            for (let t in l["i"])
                                "tv-" === t.slice(0, 3) && t !== "tv-" + this.gridCharts[0] && t !== "tv-" + this.gridCharts[1] && t !== "tv-" + this.gridCharts[2] && t !== "tv-" + this.gridCharts[3] && l["i"].removeItem(t);
                            try {
                                this.tvWidget.save(t => {
                                        l["i"].setItem("tv-" + this.chart.id, JSON.stringify(t))
                                    }
                                )
                            } catch (t) {
                                this.$set(this, "ready", !1),
                                    console.log(t)
                            }
                        }
                    }
                    , 5e3),
                    document.addEventListener("visibilitychange", () => {
                            document.hidden ? this.inactiveStart = Date.now() : Date.now() - this.inactiveStart > 1e4 && this.tvWidget && this.chart.id && this.ready && this.tvWidget.chart().resetData()
                        }
                    )
            },
            data() {
                return {
                    tvWidget: null,
                    tvSession: "",
                    tvSessionStartByDate: [0, 0, 0, 0, 0, 0, 0, 0],
                    readyCallback: null,
                    lastCandle: {},
                    subs: {},
                    orderMenu: Object(l["h"])(),
                    showOrderActive: !1,
                    ready: !1,
                    inactiveStart: 0,
                    tradingviewTheme: pt["Lb"],
                    widgetLogoShow: pt["Qb"],
                    brand: pt["e"],
                    currentFrame: 1,
                    tradingviewDefaultTimeframe: pt["Jb"]
                }
            },
            methods: {
                showSymbolsModal() {
                    this.$store.commit(n["F"], {
                        symbols: !0
                    }),
                        this.$store.commit(n["P"], {
                            action: "update",
                            id: null,
                            gridId: this.gridId
                        })
                },
                drawChart() {
                    var t;
                    if (!this.currentSym)
                        return;
                    let e = l["i"].getItem("tv-" + this.chart.id)
                        , s = l["i"].getItem("tv-" + this.chart.id + "-interval") || this.tradingviewDefaultTimeframe || "1";
                    try {
                        e = JSON.parse(e)
                    } catch (i) {
                        console.log("No chart data")
                    }
                    this.ready = !1,
                        this.tvWidget = new Ye["widget"]({
                            symbol: this.currentSym,
                            interval: s,
                            fullscreen: !1,
                            autosize: !0,
                            container: "chart-" + this.gridId,
                            saved_data: e || void 0,
                            datafeed: {
                                onReady: t => {
                                    setTimeout( () => {
                                            t({
                                                exchanges: [pt["A"]],
                                                symbols_types: ["Crypto"],
                                                supported_resolutions: pt["g"]
                                            })
                                        }
                                        , 1)
                                }
                                ,
                                searchSymbols: (t, e, s, a) => {
                                    let i = [];
                                    for (let o in this.symbols)
                                        t && this.symbols[o].visible && (this.symbols[o].symbol.toLowerCase().includes(t.toLowerCase()) || this.symbols[o].alias.toLowerCase().includes(t.toLowerCase())) && i.push({
                                            symbol: this.symbols[o].symbol,
                                            full_name: this.symbols[o].alias,
                                            description: this.symbols[o].alias,
                                            type: this.symbols[o].market,
                                            exchange: pt["A"],
                                            ticker: this.symbols[o].symbol
                                        });
                                    a(i)
                                }
                                ,
                                resolveSymbol: (t, e, s) => {
                                    let a = this.symbols[t];
                                    if (this.ready = !1,
                                    void 0 === a)
                                        return void setTimeout( () => {
                                                s()
                                            }
                                            , 1);
                                    this.chart.symbol !== a.symbol && setTimeout( () => {
                                            this.$store.commit(n["Eb"], {
                                                id: this.chart.id,
                                                symbol: a.symbol
                                            })
                                        }
                                        , 1),
                                        this.tvSessionStartByDate = [0, 0, 0, 0, 0, 0, 0, 0];
                                    const i = t => {
                                            let e = [];
                                            for (let s = 0; s < 7; s++)
                                                e = e.concat(t[s]);
                                            return e
                                        }
                                        , o = t => {
                                            let e = [];
                                            for (let s = 0; s < 7; s++)
                                                e.push(t.slice(24 * s, 24 * (s + 1)));
                                            return e
                                        }
                                    ;
                                    let r = this.symbols[t].sessions;
                                    r = i(r),
                                        r = o(r);
                                    const l = (t, e) => {
                                            let s = {
                                                start: String(t).split("."),
                                                stop: String(e + 1).split(".")
                                            };
                                            return ("0" + s.start[0]).slice(-2) + ("0" + (void 0 !== s.start[1] ? Math.round(60 * s.start[1] / Math.pow(10, String(s.start[1]).length)) : 0)).slice(-2) + "-" + ("0" + s.stop[0]).slice(-2) + ("0" + (void 0 !== s.stop[1] ? Math.round(60 * s.stop[1] / Math.pow(10, String(s.stop[1]).length)) : 0)).slice(-2)
                                        }
                                    ;
                                    let c = [];
                                    for (let n = 0; n < 7; n++) {
                                        let t = []
                                            , e = r[n]
                                            , s = 0
                                            , a = 0
                                            , i = !1;
                                        for (let o = 0; o < 24; o++) {
                                            let r = e[o];
                                            0 !== r || i ? 0 === r && i ? (t.push(l(s, a)),
                                                i = !1,
                                                s += 2,
                                                a += 2) : 1 !== r || i ? 1 === r && i ? a++ : i ? i && (a += r,
                                                t.push(l(s, a)),
                                                i = !1) : (i = !0,
                                                s += r,
                                                this.tvSessionStartByDate[n] = Math.round(3600 * s)) : (i = !0,
                                                this.tvSessionStartByDate[n] = Math.round(3600 * s)) : (s++,
                                                a++)
                                        }
                                        i && t.push(l(s, a)),
                                        t.length && c.push(t.join(",") + ":" + (n + 1))
                                    }
                                    this.tvSession = c.join("|");
                                    let d = {
                                        name: a.alias,
                                        ticker: a.symbol,
                                        description: a.alias,
                                        type: a.market,
                                        session: c.join("|"),
                                        exchange: pt["A"],
                                        timezone: "Etc/UTC",
                                        minmov: 1,
                                        pricescale: Math.pow(10, a.precision),
                                        has_intraday: !0,
                                        has_seconds: !1,
                                        has_daily: !0,
                                        has_weekly_and_monthly: !1,
                                        has_empty_bars: !1,
                                        force_session_rebuild: !1,
                                        has_no_volume: !0,
                                        volume_precision: 2,
                                        data_status: "streaming",
                                        expired: !1,
                                        currency_code: a.base_currency
                                    };
                                    setTimeout( () => {
                                            e(d)
                                        }
                                        , 1)
                                }
                                ,
                                getBars: (t, e, s, a) => {
                                    "D" !== e && "1D" !== e || (e = "1440");
                                    let i = 0;
                                    s.firstDataRequest || (i = Math.round((Math.floor(Date.now() / 1e3) - s.to) / (60 * e)));
                                    let o = Math.round((Math.floor(Date.now() / 1e3) - s.from) / (60 * e)) - i;
                                    (s => {
                                            qs["a"].get("/quotes/" + s + "/history", {
                                                frame: 60 * parseInt(e),
                                                count: o,
                                                offset: i,
                                                group: this.symbols[t.ticker].group
                                            }).then(t => {
                                                    if (s !== this.currentSym)
                                                        return;
                                                    let i = [];
                                                    if (!t || !t.length)
                                                        return a(i, {
                                                            noData: !0
                                                        });
                                                    let o = 0
                                                        , n = 0;
                                                    t.forEach(t => {
                                                            let s, a = new Date(1e3 * t[5]), r = this.tvSessionStartByDate[a.getUTCDay()], l = 86400 * Math.floor(t[5] / 86400) + r;
                                                            r ? e < 1440 ? l > t[5] && l < t[5] + 60 * e ? (s = 1e3 * l,
                                                            o !== 86400 * Math.floor(t[5] / 86400) && (o = 86400 * Math.floor(t[5] / 86400),
                                                                n = l - t[5])) : s = 1e3 * (t[5] + n) : s = 1e3 * (86400 * Math.round(t[5] / 86400) + r) : s = 1e3 * t[5],
                                                                i.push({
                                                                    open: t[0],
                                                                    high: t[1],
                                                                    low: t[2],
                                                                    close: t[3],
                                                                    volume: t[4],
                                                                    time: s
                                                                })
                                                        }
                                                    ),
                                                        this.lastCandle = i[i.length - 1],
                                                        a(i),
                                                        this.showOrderActive = !0,
                                                        this.ready = !0,
                                                        l["i"].setItem("tv-" + this.chart.id + "-interval", e)
                                                }
                                            )
                                        }
                                    )(t.ticker)
                                }
                                ,
                                subscribeBars: (t, e, s, a) => {
                                    "D" !== e && "1D" !== e || (e = "1440"),
                                    void 0 === this.subs[t.ticker] && (this.subs[t.ticker] = {}),
                                        this.subs[t.ticker][a] = {
                                            symbol: t.ticker,
                                            frame: 60 * e,
                                            cb: s,
                                            last: null
                                        },
                                        this.currentFrame = e
                                }
                                ,
                                unsubscribeBars: t => {
                                    for (let e in this.subs)
                                        for (let s in this.subs[e])
                                            if (t === s)
                                                return void delete this.subs[e][s]
                                }
                            },
                            library_path: pt["f"] ? "https://p-cdn.co/" + pt["e"] + "/tradingview/" : "/tradingview/",
                            overrides: {
                                "paneProperties.background": this.lightTheme ? "#fff" : this.themeColors["background-dark"],
                                "paneProperties.backgroundType": "solid",
                                "paneProperties.vertGridProperties.color": this.lightTheme ? "#9eb2da" : "#303642",
                                "paneProperties.horzGridProperties.color": this.lightTheme ? "#9eb2da" : "#303642",
                                "scalesProperties.backgroundColor": this.themeColors["background-dark"],
                                "scalesProperties.lineColor": this.themeColors["line"],
                                "scalesProperties.textColor": this.themeColors["font"],
                                editorFontsList: ["-apple-system", "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica Neue", "Arial", "Noto Sans", "sans-serif", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"],
                                "mainSeriesProperties.candleStyle.upColor": "#15A98B",
                                "mainSeriesProperties.candleStyle.downColor": "#F14C59",
                                "mainSeriesProperties.candleStyle.borderUpColor": "#15A98B",
                                "mainSeriesProperties.candleStyle.borderDownColor": "#F14C59",
                                "mainSeriesProperties.candleStyle.wickUpColor": "#15A98B",
                                "mainSeriesProperties.candleStyle.wickDownColor": "#F14C59",
                                "mainSeriesProperties.hollowCandleStyle.upColor": "#15A98B",
                                "mainSeriesProperties.hollowCandleStyle.downColor": "#F14C59",
                                "mainSeriesProperties.hollowCandleStyle.borderUpColor": "#15A98B",
                                "mainSeriesProperties.hollowCandleStyle.borderDownColor": "#F14C59",
                                "mainSeriesProperties.hollowCandleStyle.wickUpColor": "#15A98B",
                                "mainSeriesProperties.hollowCandleStyle.wickDownColor": "#F14C59",
                                "mainSeriesProperties.lineStyle.color": "#15A98B",
                                "mainSeriesProperties.haStyle.upColor": "#15A98B",
                                "mainSeriesProperties.haStyle.downColor": "#F14C59",
                                "mainSeriesProperties.haStyle.borderUpColor": "#15A98B",
                                "mainSeriesProperties.haStyle.borderDownColor": "#F14C59",
                                "mainSeriesProperties.haStyle.wickUpColor": "#15A98B",
                                "mainSeriesProperties.haStyle.wickDownColor": "#F14C59",
                                "mainSeriesProperties.barStyle.upColor": "#15A98B",
                                "mainSeriesProperties.barStyle.downColor": "#F14C59",
                                "mainSeriesProperties.barStyle.barColorsOnPrevClose": !1,
                                "mainSeriesProperties.kagiStyle.upColor": "#15A98B",
                                "mainSeriesProperties.kagiStyle.downColor": "#F14C59",
                                "mainSeriesProperties.pnfStyle.upColor": "#15A98B",
                                "mainSeriesProperties.pnfStyle.downColor": "#F14C59",
                                "mainSeriesProperties.renkoStyle.upColor": "#15A98B",
                                "mainSeriesProperties.renkoStyle.downColor": "#F14C59",
                                "mainSeriesProperties.baselineStyle.baselineColor": "#15A98B"
                            },
                            theme: this.lightTheme ? "Light" : this.tradingviewTheme,
                            toolbar_bg: this.themeColors["background-dark"],
                            loading_screen: {
                                backgroundColor: this.themeColors["background-dark"]
                            },
                            custom_css_url: pt["f"] ? "https://p-cdn.co/" + pt["e"] + "/brands/" + pt["e"] + "/tradingview.css" : "/brands/" + pt["e"] + "/tradingview.css",
                            disabled_features: Object(l["h"])() ? [this.widgetLogoShow ? "" : "widget_logo", "control_bar", "timeframes_toolbar", "legend_widget", "header_compare", "header_fullscreen_button"] : ["header_compare", this.widgetLogoShow ? "" : "widget_logo"],
                            time_frames: [{
                                text: "5y",
                                resolution: "1W",
                                description: "5 Years"
                            }, {
                                text: "1y",
                                resolution: "1W",
                                description: "1 Year"
                            }, {
                                text: "3m",
                                resolution: "60",
                                description: "3 Months"
                            }, {
                                text: "1m",
                                resolution: "30",
                                description: "1 Month"
                            }, {
                                text: "5d",
                                resolution: "5",
                                description: "5 Days"
                            }, {
                                text: "1d",
                                resolution: "1",
                                description: "1 Day"
                            }]
                        });
                    const a = JSON.parse(l["i"].getItem("tradingview.chartproperties"));
                    null !== a && void 0 !== a && null !== (t = a.paneProperties) && void 0 !== t && t.background && (a.paneProperties.background = this.lightTheme ? "#fff" : "#000",
                        l["i"].setItem("tradingview.chartproperties", a))
                },
                checkSession: l["a"],
                toggleOrderMenu() {
                    this.orderMenu = !this.orderMenu
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "activeAccount", "themeColors", "tokens", "gridLayout", "gridCharts", "staticBase", "lightTheme"]),
                currentSym() {
                    return this.chart.symbol || ""
                },
                quote() {
                    return this.chart.symbol && this.symbols[this.chart.symbol] ? this.symbols[this.chart.symbol].quote : {
                        symbol: "",
                        bid: null,
                        ask: null
                    }
                },
                orders() {
                    return this.activeAccount.orders
                }
            },
            watch: {
                themeColors() {
                    for (let t in l["i"])
                        if (t.startsWith("tv-") && !t.endsWith("-interval")) {
                            let e = JSON.parse(l["i"].getItem(t));
                            e.charts[0].chartProperties.paneProperties.background = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.backgroundGradientEndColor = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.backgroundGradientStartColor = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.horzGridProperties.color = this.lightTheme ? "#9eb2da" : "#303642",
                                e.charts[0].chartProperties.paneProperties.vertGridProperties.color = this.lightTheme ? "#9eb2da" : "#303642",
                                e.charts[0].chartProperties.scalesProperties.lineColor = this.lightTheme ? "#fff" : this.themeColors["background-dark"];
                            let s = JSON.stringify(e);
                            l["i"].setItem(t, s)
                        }
                    this.drawChart()
                },
                quote: {
                    deep: !0,
                    handler(t) {
                        if (t && this.ready && void 0 !== this.subs[t.symbol])
                            for (let e in this.subs[t.symbol]) {
                                let s = 1e3 * this.subs[t.symbol][e].frame * Math.floor(Date.now() / (1e3 * this.subs[t.symbol][e].frame));
                                if (Number(e.split("_").pop()) !== Number(this.currentFrame))
                                    continue;
                                let a = new Date
                                    , i = Math.floor(Date.now() / 1e3)
                                    , o = this.subs[t.symbol][e].frame
                                    , n = this.tvSessionStartByDate[a.getUTCDay()]
                                    , r = 86400 * Math.floor(i / 86400) + n;
                                n && r < i && i < r + o && (s = 1e3 * r),
                                    null === this.subs[t.symbol][e].last ? (this.subs[t.symbol][e].last = this.lastCandle,
                                        this.subs[t.symbol][e].last = {
                                            time: s,
                                            open: this.lastCandle.open,
                                            high: Math.max(t.bid, this.lastCandle.high),
                                            low: Math.min(t.bid, this.lastCandle.low),
                                            close: t.bid
                                        },
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last)) : this.subs[t.symbol][e].last.time !== s ? (this.subs[t.symbol][e].last = {
                                        time: s,
                                        open: t.bid,
                                        high: t.bid,
                                        low: t.bid,
                                        close: t.bid
                                    },
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last)) : (this.subs[t.symbol][e].last.high = Math.max(this.subs[t.symbol][e].last.high, t.bid),
                                        this.subs[t.symbol][e].last.low = Math.min(this.subs[t.symbol][e].last.low, t.bid),
                                        this.subs[t.symbol][e].last.close = t.bid,
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last))
                            }
                    }
                },
                currentSym(t, e) {
                    e !== t && this.drawChart()
                },
                gridLayout() {
                    this.orderMenu = !this.orderMenu,
                        setTimeout( () => {
                                this.orderMenu = !this.orderMenu
                            }
                            , 2)
                }
            }
        }
            , Ws = Rs
            , zs = (s("b365"),
            s("002b"),
            y(Ws, ze, Ge, !1, null, "6ca9e1aa", null))
            , Gs = zs.exports
            , Ys = {
            name: "Grid",
            components: {
                Chart: Gs
            },
            computed: {
                ...Object(o["b"])(["blur", "gridCharts", "charts", "gridLayout"]),
                visibleCharts() {
                    let t = [];
                    for (let e in this.gridCharts) {
                        let s = this.gridCharts[e];
                        void 0 !== s && void 0 !== this.charts[s] ? t.push(this.charts[s]) : t.push(!1)
                    }
                    return t
                }
            }
        }
            , Zs = Ys
            , Js = (s("b3ac"),
            y(Zs, Re, We, !1, null, "77e2bc38", null))
            , Ks = Js.exports
            , Xs = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "orders-pane",
                class: {
                    close: !t.ordersPane
                }
            }, [e("div", {
                staticClass: "tabs",
                class: {
                    "border-bottom": !t.ordersPane
                }
            }, [e("div", {
                staticClass: "tab-item body__medium",
                class: {
                    active: "active" === t.tabActive
                },
                on: {
                    click: function(e) {
                        return t.activateTab("active")
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.ordersPane.ordersActive.toUpperCase()))])]), e("div", {
                staticClass: "tab-item body__medium",
                class: {
                    active: "history" === t.tabActive
                },
                on: {
                    click: function(e) {
                        return t.activateTab("history")
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.ordersPane.ordersHistory.toUpperCase()))])])]), e("div", {
                staticClass: "tables-container",
                class: {
                    hide: !t.ordersPane
                },
                attrs: {
                    id: "tables-container"
                }
            }, [e("OrdersTable", {
                class: {
                    hide: "active" !== t.tabActive
                }
            }), e("HistoryTable", {
                class: {
                    hide: "history" !== t.tabActive
                },
                attrs: {
                    active: "history" === t.tabActive
                }
            })], 1), t.ordersPane ? e("i", {
                staticClass: "material-icons expander pointer",
                on: {
                    click: function(e) {
                        return t.closeOrdersPane()
                    }
                }
            }, [t._v("remove")]) : e("i", {
                staticClass: "material-symbols-outlined expander pointer",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.openOrdersPane()
                    }
                }
            }, [t._v("expand_content")])])
        }
            , Qs = []
            , ta = function() {
            var t = this
                , e = t._self._c;
            return e("div", [e("table", {
                staticClass: "orders-table",
                class: {
                    hide: !t.ordersLength
                }
            }, [e("thead", [e("tr", {
                staticClass: "label__small"
            }, [e("th", [e("div", {
                staticClass: "symbol-container"
            }, [t._v(" " + t._s(t.tokens.ordersPane.symbol) + " ")])]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("id")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.id) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("id")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("type")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.type) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("type")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("volume")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.volume) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("volume")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openPrice) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("price_open")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("expiration")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.timedOrder) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("expiration")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openTime) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("time_open")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("sl")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.sl) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("sl")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("tp")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.tp) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("tp")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.price) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("price_open")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("commission")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.commission) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("commission")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("swap")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.swap) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("swap")
            })]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.pnl) + " ")]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.actions) + " ")])])]), e("tbody", t._l(t.orders, (function(s, a) {
                    var i;
                    return e("tr", {
                        key: a,
                        staticClass: "body__small",
                        on: {
                            click: function(e) {
                                return t.setActiveSymbol(s.symbol)
                            }
                        }
                    }, [e("td", [e("span", {
                        staticClass: "symbol",
                        class: "symbol-" + (null === (i = s.symbol) || void 0 === i ? void 0 : i.toUpperCase())
                    }), t._v(" " + t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.id) + " ")]), e("td", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.orderTypeString(s.type)) + " ")]), e("td", [t._v(" " + t._s(s.volume.toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : 0) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.expiration ? new Date(1e3 * s.expiration).toLocaleString() : "-") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_open).toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.sl && t.symbols[s.symbol] ? s.sl.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "-") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.tp && t.symbols[s.symbol] ? s.tp.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "-") + " ")]), e("td", {
                        class: t.symbols[s.symbol] ? -1 === [0, 3, 5].indexOf(s.type) ? t.symbols[s.symbol].quote.dirAsk : t.symbols[s.symbol].quote.dirBid : ""
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? (t.symbols[s.symbol].quote[-1 === [0, 3, 5].indexOf(s.type) ? "ask" : "bid"] || 0).toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.commission.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.swap.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        class: t.getOrderStyle(s)
                    }, [t._v(" " + t._s(t.getOrderPnl(s)) + " ")]), e("td", [e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showTimePickerModal(e, s.id, a, s)
                            }
                        }
                    }, [e("i", {
                        staticClass: "material-symbols-outlined"
                    }, [t._v("schedule")])]), e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [e("i", {
                        staticClass: "material-symbols-outlined"
                    }, [t._v("edit")])]), e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showCloseOrderConfirmation(s.id, a)
                            }
                        }
                    }, [e("i", {
                        staticClass: "material-symbols-outlined"
                    }, [t._v("cancel")])])])])
                }
            )), 0)]), e("div", {
                staticClass: "info",
                class: {
                    hide: t.ordersLength || !t.dataLoaded
                }
            }, [e("h3", {
                staticClass: "title__medium"
            }, [t._v("No Active Orders")]), e("span", {
                staticClass: "body__small"
            }, [t._v("It looks like you don't have any active orders at the moment")])])])
        }
            , ea = []
            , sa = {
            name: "OrdersTable",
            data() {
                return {
                    disableOrderSort: pt["H"],
                    dataLoaded: !1,
                    sortButtonState: {}
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "orders", "symbols", "activeAccount", "user", "chartActive", "staticBase"]),
                ordersLength() {
                    return Object.keys(this.orders).length
                }
            },
            methods: {
                orderTypeString: l["j"],
                timeToString: l["o"],
                currencySign: l["e"],
                setSortButtonState(t) {
                    this.sortButtonState.colName !== t ? (this.sortButtonState.colName = t,
                        this.sortButtonState.directionUp = !1) : this.sortButtonState.directionUp = !this.sortButtonState.directionUp
                },
                getSortButtonClass(t) {
                    return this.sortButtonState.colName !== t ? "" : this.sortButtonState.directionUp ? "up" : "down"
                },
                sortBy(t) {
                    this.disableOrderSort || (this.$store.commit(n["yb"], {
                        sort: t,
                        account: this.activeAccount.id
                    }),
                        this.setSortButtonState(t))
                },
                getOrderStyle(t) {
                    const e = this.symbols[t.symbol];
                    if (!e)
                        return "";
                    const s = t.type ? t.price_open - e.quote.ask : e.quote.bid - t.price_open
                        , a = t.point * s * Math.pow(10, e.precision) + t.swap + t.commission;
                    return a >= 0 ? "green" : "red"
                },
                getOrderPnl(t) {
                    const e = this.symbols[t.symbol];
                    if (t.type >= 2)
                        return "0";
                    if (!e)
                        return "-";
                    const s = t.type ? t.price_open - e.quote.ask : e.quote.bid - t.price_open
                        , a = t.point * s * Math.pow(10, e.precision) + t.swap + t.commission
                        , i = a.toLocaleString(void 0, {
                        minimumFractionDigits: this.activeAccount.precision,
                        maximumFractionDigits: this.activeAccount.precision
                    });
                    return `${Object(l["e"])(this.activeAccount.currency)}${i}`
                },
                setActiveSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                showCloseOrderConfirmation(t, e) {
                    this.activeAccount.enable ? (this.$store.commit(n["J"], {
                        activeOrderId: t,
                        index: e
                    }),
                        this.$store.commit(n["F"], {
                            closePosition: !0
                        })) : this.$store.commit(n["V"], "TRADING_DISABLED")
                },
                showTimePickerModal(t, e, s, a) {
                    let i = t.target.getBoundingClientRect();
                    this.$store.commit(n["Q"], {
                        left: i.left + 100,
                        top: i.top - 50,
                        symbolActive: null,
                        orderActive: e,
                        item: parseInt(s),
                        expiration: a.expiration
                    }),
                        this.$store.commit(n["F"], {
                            timePicker: !0
                        })
                },
                showAutoCloseModal(t, e, s) {
                    let a = t.target.getBoundingClientRect();
                    this.$store.commit(n["I"], {
                        left: a.left,
                        top: a.top - 150,
                        symbolActive: null,
                        orderActive: e,
                        tp: this.activeAccount.orders[s].tp || "",
                        tpType: "=",
                        sl: this.activeAccount.orders[s].sl || "",
                        slType: "=",
                        item: parseInt(s)
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !0
                        })
                }
            },
            watch: {
                orders() {
                    this.dataLoaded || setTimeout( () => {
                            this.dataLoaded = !0
                        }
                        , 1e3)
                }
            }
        }
            , aa = sa
            , ia = (s("6463"),
            y(aa, ta, ea, !1, null, "f7548fa2", null))
            , oa = ia.exports
            , na = function() {
            var t = this
                , e = t._self._c;
            return e("div", [e("table", {
                class: {
                    hide: !t.historyLength
                }
            }, [e("thead", [e("tr", {
                staticClass: "label__small"
            }, [e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("symbol")
                    }
                }
            }, [e("div", {
                staticClass: "symbol-container"
            }, [t._v(" " + t._s(t.tokens.ordersPane.symbol) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("symbol")
            })])]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("id")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.id) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("id")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("type")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.type) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("type")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("volume")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.volume) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("volume")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openPrice) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("price_open")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openTime) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("time_open")
            })]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("price_close")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.closePrice) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("price_close")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_close")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.closeTime) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("time_close")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("commission")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.commission) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("commission")
            })]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("swap")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.swap) + " "), e("div", {
                staticClass: "sort-button material-symbols-outlined",
                class: "" + t.getSortButtonClass("swap")
            })]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.pnl) + " ")])])]), e("tbody", {
                ref: "tables-container"
            }, t._l(t.history, (function(s, a) {
                    return e("tr", {
                        key: a,
                        staticClass: "body__small"
                    }, [e("td", [e("span", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), t._v(" " + t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.id) + " ")]), e("td", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.orderTypeString(s.type)) + " ")]), e("td", [t._v(" " + t._s(s.volume.toLocaleString()) + " ")]), ["stage", "interlendholdings", "mftreasuries"].includes(t.brand) ? e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 5
                    }) : 0) + " ")]) : e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : 0) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_open).toLocaleString()) + " ")]), ["stage", "interlendholdings", "mftreasuries"].includes(t.brand) ? e("td", [t._v(" " + t._s(t.symbols[s.symbol] && s.price_close ? s.price_close.toLocaleString(void 0, {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 5
                    }) : "0") + " ")]) : e("td", [t._v(" " + t._s(t.symbols[s.symbol] && s.price_close ? s.price_close.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : "0") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_close).toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.commission.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.swap.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        class: s.profit > 0 ? "green" : s.profit < 0 ? "red" : ""
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.profit.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")])])
                }
            )), 0)]), e("div", {
                staticClass: "info",
                class: {
                    hide: t.historyLength
                }
            }, [e("h3", {
                staticClass: "title__medium"
            }, [t._v("No Order History")]), e("span", {
                staticClass: "body__small"
            }, [t._v("It seems you don't have any past orders yet.")])])])
        }
            , ra = []
            , la = {
            name: "HistoryTable",
            props: ["active"],
            mounted() {
                setInterval( () => {
                        if (!this.active)
                            return void (this.historyPage = 1);
                        const t = document.getElementById("tables-container")
                            , e = t.scrollTop + t.clientHeight === t.scrollHeight
                            , s = this.activeAccount.history.length > 20 * this.historyPage;
                        e && s && this.historyPage++
                    }
                    , 1e3)
            },
            data() {
                return {
                    historyPage: 1,
                    disableOrderSort: pt["H"],
                    brand: pt["e"],
                    sortButtonState: {}
                }
            },
            methods: {
                orderTypeString: l["j"],
                timeToString: l["o"],
                currencySign: l["e"],
                setSortButtonState(t) {
                    this.sortButtonState.colName !== t ? (this.sortButtonState.colName = t,
                        this.sortButtonState.directionUp = !1) : this.sortButtonState.directionUp = !this.sortButtonState.directionUp
                },
                getSortButtonClass(t) {
                    return this.sortButtonState.colName !== t ? "" : this.sortButtonState.directionUp ? "up" : "down"
                },
                sortBy(t) {
                    this.disableOrderSort || (this.$store.commit(n["xb"], {
                        sort: t,
                        account: this.activeAccount.id
                    }),
                        this.setSortButtonState(t))
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "tokens", "activeAccount", "staticBase"]),
                history() {
                    const t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        , e = [];
                    if (!this.activeAccount.history)
                        return e;
                    const s = 0
                        , a = 20 * this.historyPage
                        , i = this.activeAccount.history.slice(s, a);
                    return i.forEach(s => {
                            const a = new Date(1e3 * s.time_close);
                            s.timeStr = ("0" + a.getHours()).slice(-2) + ":" + ("0" + a.getMinutes()).slice(-2),
                                s.dayStr = t[a.getMonth()] + " " + ("0" + a.getDate()).slice(-2),
                                s.month = t[a.getMonth()],
                                s.day = ("0" + a.getDate()).slice(-2),
                                s.amount = s.easy_amount || s.margin,
                                e.push(s)
                        }
                    ),
                        e
                },
                historyLength() {
                    return Object.keys(this.history).length
                }
            },
            watch: {
                activeAccount() {
                    this.historyPage = 1,
                        document.getElementById("tables-container").scrollTo(0, 0)
                }
            }
        }
            , ca = la
            , da = (s("073c"),
            y(ca, na, ra, !1, null, "995d0acc", null))
            , ua = da.exports
            , ma = {
            name: "OrdersPane",
            data() {
                return {
                    tabActive: "active"
                }
            },
            components: {
                HistoryTable: ua,
                OrdersTable: oa
            },
            methods: {
                closeOrdersPane() {
                    this.$store.commit(n["bb"], !1)
                },
                openOrdersPane() {
                    this.$store.commit(n["bb"], !0)
                },
                activateTab(t) {
                    this.tabActive = t,
                        "history" === t ? this.$store.commit(n["A"], !0) : this.$store.commit(n["A"], !1)
                }
            },
            computed: {
                ...Object(o["b"])(["ordersPane", "tokens"])
            }
        }
            , pa = ma
            , ha = (s("63a3"),
            y(pa, Xs, Qs, !1, null, "3560cf34", null))
            , va = ha.exports
            , fa = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "status-bar"
            }, [e("div", {
                staticClass: "row"
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.balance) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance > 0 ? t.activeAccount.balance : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row"
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.credit) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.credit > 0 ? t.activeAccount.credit : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "more-info"
            }, [e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.equity) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance + t.activeAccount.credit + t.pnl).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.margin) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.margin.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.marginLevel) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.activeAccount.balance + t.activeAccount.credit + t.pnl !== 0 && t.margin ? (100 * (t.activeAccount.balance + t.activeAccount.credit + t.pnl) / t.margin).toFixed(2) + "%" : "-"))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile()
                }
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.freeMargin) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(0 !== t.margin ? t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance + t.activeAccount.credit + t.pnl - t.margin).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) : "-"))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile()
                }
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.pnl) + ":")]), e("span", {
                staticClass: "content",
                class: t.pnl < 0 ? "red" : t.pnl > 0 ? "green" : ""
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.pnl.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.ordersPane && t.historyTableIsActive,
                    expression: "ordersPane && historyTableIsActive"
                }],
                staticClass: "right"
            }, [e("span", {
                staticClass: "title body__small"
            }, [t._v(t._s(t.tokens.statusBar.profitTotal) + ":")]), e("span", {
                staticClass: "content",
                class: t.profitTotal < 0 ? "red" : t.profitTotal > 0 ? "green" : ""
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.profitTotal.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])])])
        }
            , ga = []
            , ba = {
            name: "StatusBar",
            data() {
                return {
                    profitTotal: 0,
                    statusBarItemsShowMobile: pt["Db"]
                }
            },
            methods: {
                currencySign: l["e"],
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["orders", "symbols", "activeAccount", "tokens", "ordersPane", "historyTableIsActive", "conversions"]),
                pnl() {
                    let t = 0;
                    for (let e in this.orders) {
                        let s = this.orders[e];
                        s.type > 1 || !this.symbols[s.symbol] || (t += s.point * (0 === s.type ? this.symbols[s.symbol].quote.bid - s.price_open : s.price_open - this.symbols[s.symbol].quote.ask) * Math.pow(10, this.symbols[s.symbol].precision) + s.swap + s.commission)
                    }
                    return t
                },
                margin() {
                    let t = 0
                        , e = {};
                    for (let s in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[s];
                        void 0 === e[t.symbol] && (e[t.symbol] = 0),
                            e[t.symbol] += t.type % 2 ? -t.margin : t.margin,
                            this.symbols[t.symbol]
                    }
                    for (let s in e)
                        t += Math.abs(e[s]) * (1 / this.conversions[this.activeAccount.currency]);
                    return t
                }
            },
            watch: {
                activeAccount: {
                    deep: !0,
                    handler(t) {
                        t.profitTotal ? this.profitTotal = t.profitTotal : this.profitTotal = 0
                    }
                }
            }
        }
            , ya = ba
            , _a = (s("0f0b"),
            y(ya, fa, ga, !1, null, "0403f7f0", null))
            , Ca = _a.exports
            , wa = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: t.loggedIn || t.modals.register || t.modals.newPassword || t.modals.forgotPassword,
                    newDesign: t.newDesign,
                    "aspin-modal-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "modal",
                class: {
                    hide: t.modals.otp
                }
            }, [e("div", {
                staticClass: "modal-box"
            }, [t.aspinDesign ? e("a", {
                staticClass: "aspin-logo",
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    href: t.logoRedirectOff ? "#" : t.website,
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.logo.url
                },
                style: {
                    height: t.logo.height,
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.logoComputed
                }
            }), e("span", {
                class: {
                    hide: t.logo.url
                }
            }, [e("span", {
                staticClass: "brand"
            }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform))])]) : t._e(), t.aspinDesign ? e("div", {
                staticClass: "tabs"
            }, [e("a", {
                class: {
                    "is-active": !t.loggedIn
                },
                attrs: {
                    href: "/"
                }
            }, [t._v("Login")]), t.showRegisterModal ? t._e() : e("a", {
                class: {
                    "is-active": t.modals.register
                },
                attrs: {
                    href: "/register"
                }
            }, [t._v("Register")])]) : t._e(), t.aspinDesign ? t._e() : e("div", {
                staticClass: "title"
            }, [t.newDesign ? e("i", {
                staticClass: "material-icons"
            }, [t._v("person_outline")]) : t._e(), e("span", [t._v(t._s(t.tokens.loginModal.loginToTradeRoom.toUpperCase()))]), t.newDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("lock")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.loginModal.email))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "form-control",
                attrs: {
                    name: "email",
                    autocomplete: "off",
                    tabindex: "1",
                    placeholder: t.tokens.loginModal.enterEmail
                },
                domProps: {
                    value: t.email
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/phone.png",
                    alt: ""
                }
            })]) : t._e()]), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.loginModal.twoFactor))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.otp,
                    expression: "otp"
                }],
                staticClass: "form-control pass",
                attrs: {
                    name: "twoFactorAuth",
                    autocomplete: "off",
                    tabindex: "3",
                    placeholder: t.tokens.loginModal.twoFactorAuth
                },
                domProps: {
                    value: t.otp
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.otp = e.target.value)
                    }
                }
            })]), t.hideForgotPassword || t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("span", {
                staticClass: "forgot pointer",
                on: {
                    click: t.showForgot
                }
            }, [t._v(t._s(t.tokens.forgotPasswordModal.forgotPassword))])])]), e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.loginModal.password))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.passwordVisible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password",
                staticClass: "form-control pass",
                attrs: {
                    name: "password",
                    autocomplete: "off",
                    tabindex: "2",
                    placeholder: t.tokens.loginModal.yourPassword,
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password) ? t._i(t.password, null) > -1 : t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.password
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password = s.concat([o])) : n > -1 && (t.password = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password = i
                    }
                }
            }) : "radio" === (t.passwordVisible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password",
                staticClass: "form-control pass",
                attrs: {
                    name: "password",
                    autocomplete: "off",
                    tabindex: "2",
                    placeholder: t.tokens.loginModal.yourPassword,
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    change: function(e) {
                        t.password = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password",
                staticClass: "form-control pass",
                attrs: {
                    name: "password",
                    autocomplete: "off",
                    tabindex: "2",
                    placeholder: t.tokens.loginModal.yourPassword,
                    type: t.passwordVisible ? "text" : "password"
                },
                domProps: {
                    value: t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.password = e.target.value)
                    }
                }
            }), t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    },
                    mousedown: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    }
                }
            }, [t._v(t._s(t.passwordVisible ? "visibility" : "visibility_off"))])]), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("i", {
                staticClass: "material-icons",
                staticStyle: {
                    color: "#fff"
                },
                on: {
                    touchstart: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    },
                    mousedown: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    }
                }
            }, [t._v(t._s(t.passwordVisible ? "visibility" : "visibility_off"))])]) : t._e()]), e("div", {
                staticClass: "form-row",
                class: {
                    last: t.newDesign
                }
            }, [e("label", [t._v(" ")]), e("div", {
                staticClass: "button green-button",
                staticStyle: {
                    "margin-top": "0"
                },
                on: {
                    click: t.login
                }
            }, [t._v(" " + t._s(t.tokens.loginModal.signIn.toUpperCase()) + " ")])]), !t.hideForgotPassword && t.newDesign ? e("div", {
                staticClass: "form-row footer"
            }, ["fxprotrading" !== t.brand ? e("p", [t._v(" " + t._s(t.tokens.forgotPasswordModal.forgotPassword) + " "), e("span", {
                on: {
                    click: t.showForgot
                }
            }, [t._v(t._s(t.tokens.loginModal.restore))])]) : t._e(), t.showRegisterModal || t.showRegisterText ? t._e() : e("p", [t._v(" " + t._s(t.tokens.loginModal.dontHaveAccount) + " "), e("a", {
                attrs: {
                    href: "/register"
                }
            }, [t._v(t._s(t.tokens.fullScreenReferrals.registered))])])]) : t._e(), t.apps ? e("div", {
                staticClass: "apps"
            }, t._l(t.appsData, (function(s, a) {
                    return e("a", {
                        key: a,
                        attrs: {
                            href: s.path
                        }
                    }, [e("img", {
                        attrs: {
                            src: t.staticBase + "misc/" + s.icon
                        }
                    })])
                }
            )), 0) : t._e()])])])]), t.newDesign ? e("TwoFactorAuthenticationModal", {
                class: {
                    hide: !t.modals.otp
                },
                attrs: {
                    email: this.email,
                    password: this.password
                }
            }) : t._e()], 1)
        }
            , ka = []
            , Sa = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-otp",
                class: {
                    hide: !t.modals.otp
                }
            }, [e("div", {
                staticClass: "modal"
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.loginModal.twoFactorAuth.toUpperCase()))])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("label", [t._v(t._s(t.tokens.fullScreenSettings.twoFactorCode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.otp,
                    expression: "otp"
                }],
                staticClass: "form-control",
                domProps: {
                    value: t.otp
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.login.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.otp = e.target.value)
                    }
                }
            }), e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.login
                }
            }, [t._v(" " + t._s(t.tokens.forgotPasswordModal.submit.toUpperCase()) + " ")]), e("div", {
                staticClass: "form-login"
            }, [e("p", [t._v(t._s(t.tokens.loginModal.goTo)), e("span", {
                on: {
                    click: function(e) {
                        t.modals.otp = !1
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.login))])])])])])])])])
        }
            , xa = []
            , Ma = {
            name: "TwoFactorAuthenticationModal",
            props: ["email", "password"],
            data() {
                return {
                    otp: ""
                }
            },
            methods: {
                login() {
                    this.$store.dispatch(r["w"], {
                        email: this.email.trim(),
                        password: this.password.trim(),
                        otp: this.otp
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals"])
            }
        }
            , Aa = Ma
            , Da = (s("63ff"),
            y(Aa, Sa, xa, !1, null, "1d7b88c6", null))
            , Pa = Da.exports
            , Ta = {
            name: "LoginModal",
            components: {
                TwoFactorAuthenticationModal: Pa
            },
            data() {
                return {
                    newDesign: pt["kb"],
                    hideForgotPassword: pt["P"],
                    email: "",
                    password: "",
                    passwordVisible: !1,
                    otp: "",
                    passwordFieldType: "password",
                    showRegisterModal: pt["zb"],
                    showRegisterText: pt["Ab"],
                    apps: pt["a"],
                    brand: pt["e"],
                    aspinDesign: pt["b"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    logo: pt["ab"],
                    hideLogo: pt["Q"],
                    staticBase: pt["Cb"],
                    logoRedirectOff: pt["bb"]
                }
            },
            methods: {
                showPass: l["n"],
                hidePass: l["g"],
                login() {
                    this.newDesign ? this.$store.dispatch(r["J"], {
                        email: this.email.trim(),
                        password: this.password.trim(),
                        otp: this.otp
                    }) : this.$store.dispatch(r["w"], {
                        email: this.email.trim(),
                        password: this.password.trim(),
                        otp: this.otp
                    })
                },
                showForgot() {
                    this.$store.commit(n["F"], {
                        forgotPassword: !0
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["loggedIn", "modals", "tokens"]),
                appsData() {
                    let t = []
                        , e = ["AnyDesk-logo", "TeamViewer-logo", "aeroadmin"]
                        , s = ["https://anydesk.com/download", "https://teamviewer.com/download", "https://www.aeroadmin.com"]
                        , a = ""
                        , i = "";
                    for (const o in this.apps)
                        i = e[o] + ".png",
                            a = "" + s[o],
                            t.push({
                                icon: i,
                                path: a
                            });
                    return t
                },
                logoComputed() {
                    return "Light" === this.tradingViewTheme ? this.logo.url.replace(/white/, "black") : this.logo.url
                }
            },
            watch: {
                loggedIn(t) {
                    t && (this.email = "",
                        this.password = "",
                        this.otp = "")
                }
            }
        }
            , La = Ta
            , Ia = (s("fc69"),
            y(La, wa, ka, !1, null, "080735d6", null))
            , Fa = Ia.exports
            , Oa = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "side-menu",
                class: {
                    hide: t.isMobile
                }
            }, [e("div", {
                staticClass: "menu"
            }, [e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.market,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("market")
                    }
                }
            }, [t._m(0), e("span", [t._v(t._s(t.tokens.sideMenu.marketWatch.toUpperCase()))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.market,
                    minus: t.modalMenu.market && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("market")
                    }
                }
            }, [t._v(" " + t._s(t.modalMenu.market ? "close" : "add") + " ")])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.orders,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("orders")
                    }
                }
            }, [t._m(1), e("span", [t._v(t._s(t.tokens.sideMenu.activeOrders.toUpperCase()))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.orders,
                    minus: t.modalMenu.orders && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("orders")
                    }
                }
            }, [t._v(t._s(t.modalMenu.orders ? "close" : "add") + " ")])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.history,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("history")
                    }
                }
            }, [t._m(2), e("span", [t._v(t._s(t.tokens.sideMenu.tradingHistory.toUpperCase()))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.history,
                    minus: t.modalMenu.history && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("history")
                    }
                }
            }, [t._v(" " + t._s(t.modalMenu.history ? "close" : "add") + " ")])]), t.removeEconomicCalendar ? t._e() : e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.calendar,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("calendar")
                    }
                }
            }, [t._m(3), e("span", [t._v(t._s(t.tokens.sideMenu.economicCalendar.toUpperCase()))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.calendar,
                    minus: t.modalMenu.calendar && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("calendar")
                    }
                }
            }, [t._v(" " + t._s(t.modalMenu.calendar ? "close" : "add") + " ")])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.news,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("news")
                    }
                }
            }, [t._m(4), e("span", [t._v(t._s(t.tokens.sideMenu.marketNews.toUpperCase()))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.news,
                    minus: t.modalMenu.news && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("news")
                    }
                }
            }, [t._v(" " + t._s(t.modalMenu.news ? "close" : "add") + " ")])])])])
        }
            , Ba = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "icon"
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("lists")])])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "icon"
                }, [e("i", {
                    staticClass: "material-symbols-outlined"
                }, [t._v(" orders ")])])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "icon"
                }, [e("i", {
                    staticClass: "material-symbols-outlined"
                }, [t._v("history")])])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "icon"
                }, [e("i", {
                    staticClass: "material-symbols-outlined"
                }, [t._v("calendar_today")])])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "icon"
                }, [e("i", {
                    staticClass: "material-symbols-outlined"
                }, [t._v("full_coverage")])])
            }
        ]
            , Na = {
            name: "SideMenu",
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    removeEconomicCalendar: pt["tb"]
                }
            },
            methods: {
                showMenuModal(t) {
                    this.$store.commit(n["F"], {
                        menu: !0
                    });
                    let e = {
                        orders: !1,
                        history: !1,
                        market: !1,
                        calendar: !1,
                        news: !1
                    };
                    e[t] = !0,
                        this.$store.commit(n["M"], e)
                },
                toggleWidget(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                    e[t] && !this.modals.menu && this.$store.commit(n["F"], {
                        menu: !0
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals", "modalMenu"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            }
        }
            , $a = Na
            , Va = (s("5304"),
            y($a, Oa, Ba, !1, null, "663e3ad2", null))
            , Ea = Va.exports
            , Ua = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.isMobile && !t.modals.fullscreen && t.modals.sideMenuBurger,
                    expression: "(isMobile && !modals.fullscreen && modals.sideMenuBurger)"
                }],
                staticClass: "side-menu-burger",
                class: {
                    mobile: t.isMobile
                }
            }, [e("div", {
                staticClass: "scroll-menu"
            }, [e("div", {
                staticClass: "menu-item",
                class: {
                    active: t.modalMenu.market
                },
                on: {
                    click: function(e) {
                        return t.openWidget("market")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("lists")]), e("span", {
                staticClass: "label__largeprominent"
            }, [t._v(t._s(t.tokens.sideMenu.marketWatch))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn"
            }, [t._v("add")])]), e("div", {
                staticClass: "menu-item",
                class: {
                    active: t.modalMenu.orders
                },
                on: {
                    click: function(e) {
                        return t.openWidget("orders")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("orders")]), e("span", {
                staticClass: "label__largeprominent"
            }, [t._v(t._s(t.tokens.sideMenu.activeOrders))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn"
            }, [t._v("add")])]), e("div", {
                staticClass: "menu-item",
                class: {
                    active: t.modalMenu.history
                },
                on: {
                    click: function(e) {
                        return t.openWidget("history")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("history")]), e("span", {
                staticClass: "label__largeprominent"
            }, [t._v(t._s(t.tokens.sideMenu.tradingHistory))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn"
            }, [t._v("add")])]), e("div", {
                staticClass: "menu-item",
                class: {
                    active: t.modalMenu.calendar
                },
                on: {
                    click: function(e) {
                        return t.openWidget("calendar")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("calendar_today")]), e("span", {
                staticClass: "label__largeprominent"
            }, [t._v(t._s(t.tokens.sideMenu.economicCalendar))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn"
            }, [t._v("add")])]), e("div", {
                staticClass: "menu-item",
                class: {
                    active: t.modalMenu.news
                },
                on: {
                    click: function(e) {
                        return t.openWidget("news")
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("full_coverage")]), e("span", {
                staticClass: "label__largeprominent"
            }, [t._v(t._s(t.tokens.sideMenu.marketNews))]), e("i", {
                staticClass: "material-symbols-outlined toggle-btn"
            }, [t._v("add")])])])])
        }
            , Ha = []
            , ja = {
            name: "SideMenuBurger",
            data() {
                return {
                    isMobile: Object(l["h"])()
                }
            },
            methods: {
                openWidget(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    for (let a in e)
                        e[a] = !1;
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && setTimeout( () => {
                            this.$store.commit(n["F"], {
                                menuModal: !0,
                                sideMenuBurger: !1
                            })
                        }
                        , 0),
                    e[t] && !this.modals.menu && this.$store.commit(n["F"], {
                        menu: !0
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals", "modalMenu"])
            }
        }
            , qa = ja
            , Ra = (s("138b"),
            y(qa, Ua, Ha, !1, null, "2b63a404", null))
            , Wa = Ra.exports
            , za = function() {
            var t = this
                , e = t._self._c;
            return e("header", {
                staticClass: "header"
            }, [e("div", {
                staticClass: "row left-row"
            }, [e("BaseToggleIconButton", {
                staticClass: "burger",
                attrs: {
                    "button-style": "secondary"
                },
                on: {
                    update: t.showMenu
                },
                scopedSlots: t._u([{
                    key: "init-icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "25",
                                viewBox: "0 0 24 25",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                d: "M3 18.5V16.5H21V18.5H3ZM3 13.5V11.5H21V13.5H3ZM3 8.5V6.5H21V8.5H3Z",
                                fill: "#BFC6DC"
                            }
                        })])]
                    },
                    proxy: !0
                }, {
                    key: "active-icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "25",
                                viewBox: "0 0 24 25",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                d: "M3 18.5V16.5H21V18.5H3ZM3 13.5V11.5H21V13.5H3ZM3 8.5V6.5H21V8.5H3Z",
                                fill: "#AFC6FF"
                            }
                        })])]
                    },
                    proxy: !0
                }])
            }), e("BaseLogo", {
                staticClass: "header-logo",
                attrs: {
                    src: t.logoComputed,
                    height: t.logo.height
                },
                scopedSlots: t._u([t.logoComputed ? null : {
                    key: "logo-placeholder",
                    fn: function() {
                        return [e("span", {
                            staticClass: "brand"
                        }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform) + " ")]
                    },
                    proxy: !0
                }], null, !0)
            })], 1), e("div", {
                staticClass: "row right-row"
            }, [e("BaseAutotraderButton", {
                staticClass: "autotrader"
            }), e("div", {
                staticClass: "account-box"
            }, [e("BaseAccountType", {
                attrs: {
                    accountType: t.activeAccount.group
                }
            }), e("BaseActiveAccountButton", {
                attrs: {
                    balance: t.activeAccount.balance.toFixed(2).toString(),
                    symbol: t.activeAccount.currency
                },
                nativeOn: {
                    click: function(e) {
                        return t.openBalanceModal.apply(null, arguments)
                    }
                }
            }), e("BaseDepositButton")], 1), e("div", {
                staticClass: "profile"
            }, [e("BaseSettingIcon", {
                staticClass: "settings"
            }), e("BaseMonogram", {
                nativeOn: {
                    click: function(e) {
                        return t.showCabinet("dashboard")
                    }
                }
            })], 1)], 1)])
        }
            , Ga = []
            , Ya = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "account-type",
                class: t.getAccountCLass(t.accountType)
            }, [t._v(" " + t._s(t.accountType) + " account ")])
        }
            , Za = []
            , Ja = {
            name: "BaseAccountType",
            props: {
                accountType: {
                    type: String
                }
            },
            methods: {
                getAccountCLass(t) {
                    switch (t.toLowerCase()) {
                        case "vip":
                            return "vip";
                        default:
                            return t
                    }
                }
            }
        }
            , Ka = Ja
            , Xa = (s("7883"),
            y(Ka, Ya, Za, !1, null, "bf96222c", null))
            , Qa = Xa.exports
            , ti = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "logo"
            }, [e("a", {
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    href: t.logoRedirectOff ? "#" : t.website,
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.src
                },
                style: {
                    height: "16px",
                    width: "100",
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.src
                },
                on: {
                    error: t.errorHandler
                }
            }), t._t("logo-placeholder")], 2)])
        }
            , ei = []
            , si = {
            name: "BaseLogo",
            props: {
                src: {
                    type: String
                },
                height: {
                    type: String
                }
            },
            data() {
                return {
                    logoRedirectOff: pt["bb"],
                    website: pt["Ob"],
                    hideLogo: pt["Q"]
                }
            },
            methods: {
                errorHandler() {
                    this.logo.url = ""
                }
            }
        }
            , ai = si
            , ii = (s("122e"),
            y(ai, ti, ei, !1, null, "70196908", null))
            , oi = ii.exports
            , ni = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "autotrader-button"
            }, [e("span", {
                staticClass: "state-layer"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M15.5 13.5C13.9722 13.5 12.6736 12.9653 11.6042 11.8958C10.5347 10.8264 10 9.52778 10 8C10 6.47222 10.5347 5.17361 11.6042 4.10417C12.6736 3.03472 13.9722 2.5 15.5 2.5C17.0278 2.5 18.3264 3.03472 19.3958 4.10417C20.4653 5.17361 21 6.47222 21 8C21 9.52778 20.4653 10.8264 19.3958 11.8958C18.3264 12.9653 17.0278 13.5 15.5 13.5ZM13.6208 10.75H12.5208L14.9042 4.33333H16.05L18.4792 10.75H17.3792L16.7833 9.1H14.2167L13.6208 10.75ZM14.5375 8.18333L15.4542 5.525H15.5458L16.4625 8.18333H14.5375Z",
                    fill: "#BFC6DC"
                }
            }), e("path", {
                attrs: {
                    d: "M15 15.4367C15.3243 15.4789 15.6576 15.5 16 15.5C16.1762 15.5 16.35 15.4944 16.5214 15.4832L16.55 19.5H15V21.5H13V19.5H11.5V13.8816C11.9685 14.28 12.4685 14.6048 13 14.8561V17.5H15V15.4367Z",
                    fill: "#BFC6DC"
                }
            }), e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M7 21.5V16.5H9V9.5H7V5.5H5V9.5H3V16.5H5V21.5H7ZM7 14.5H5V11.5H7V14.5Z",
                    fill: "#BFC6DC"
                }
            })])])])
        }
            , ri = []
            , li = {
            name: "BaseAutotraderButton"
        }
            , ci = li
            , di = (s("49fc"),
            y(ci, ni, ri, !1, null, "b4e30560", null))
            , ui = di.exports
            , mi = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "deposit-button"
            }, [e("div", {
                staticClass: "state-layer"
            }, [e("span", {
                staticClass: "label"
            }, [t._v("Deposit")]), e("svg", {
                staticClass: "icon",
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 18 17",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M11.5711 11.2427L11.518 9.2451H7.91179L14.7426 2L13.2426 0.5L6.49758 7.83089L6.49758 4.22465L4.5 4.17161V11.2427H11.5711Z",
                    fill: "#003930"
                }
            }), e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M18 17V15H0L5.96047e-08 17H18Z",
                    fill: "#003930"
                }
            })])])])
        }
            , pi = []
            , hi = {
            name: "BaseDepositButton"
        }
            , vi = hi
            , fi = (s("09e8"),
            y(vi, mi, pi, !1, null, "bff5f006", null))
            , gi = fi.exports
            , bi = function() {
            var t = this
                , e = t._self._c;
            return e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "22",
                    height: "21",
                    viewBox: "0 0 22 21",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M8.2502 20.5L7.8502 17.3C7.63353 17.2167 7.42936 17.1167 7.2377 17C7.04603 16.8833 6.85853 16.7583 6.6752 16.625L3.7002 17.875L0.950195 13.125L3.5252 11.175C3.50853 11.0583 3.5002 10.9458 3.5002 10.8375V10.1625C3.5002 10.0542 3.50853 9.94167 3.5252 9.825L0.950195 7.875L3.7002 3.125L6.6752 4.375C6.85853 4.24167 7.0502 4.11667 7.2502 4C7.4502 3.88333 7.6502 3.78333 7.8502 3.7L8.2502 0.5H13.7502L14.1502 3.7C14.3669 3.78333 14.571 3.88333 14.7627 4C14.9544 4.11667 15.1419 4.24167 15.3252 4.375L18.3002 3.125L21.0502 7.875L18.4752 9.825C18.4919 9.94167 18.5002 10.0542 18.5002 10.1625V10.8375C18.5002 10.9458 18.4835 11.0583 18.4502 11.175L21.0252 13.125L18.2752 17.875L15.3252 16.625C15.1419 16.7583 14.9502 16.8833 14.7502 17C14.5502 17.1167 14.3502 17.2167 14.1502 17.3L13.7502 20.5H8.2502ZM10.0002 18.5H11.9752L12.3252 15.85C12.8419 15.7167 13.321 15.5208 13.7627 15.2625C14.2044 15.0042 14.6085 14.6917 14.9752 14.325L17.4502 15.35L18.4252 13.65L16.2752 12.025C16.3585 11.7917 16.4169 11.5458 16.4502 11.2875C16.4835 11.0292 16.5002 10.7667 16.5002 10.5C16.5002 10.2333 16.4835 9.97083 16.4502 9.7125C16.4169 9.45417 16.3585 9.20833 16.2752 8.975L18.4252 7.35L17.4502 5.65L14.9752 6.7C14.6085 6.31667 14.2044 5.99583 13.7627 5.7375C13.321 5.47917 12.8419 5.28333 12.3252 5.15L12.0002 2.5H10.0252L9.6752 5.15C9.15853 5.28333 8.67936 5.47917 8.2377 5.7375C7.79603 5.99583 7.39186 6.30833 7.0252 6.675L4.5502 5.65L3.5752 7.35L5.7252 8.95C5.64186 9.2 5.58353 9.45 5.5502 9.7C5.51686 9.95 5.5002 10.2167 5.5002 10.5C5.5002 10.7667 5.51686 11.025 5.5502 11.275C5.58353 11.525 5.64186 11.775 5.7252 12.025L3.5752 13.65L4.5502 15.35L7.0252 14.3C7.39186 14.6833 7.79603 15.0042 8.2377 15.2625C8.67936 15.5208 9.15853 15.7167 9.6752 15.85L10.0002 18.5ZM11.0502 14C12.0169 14 12.8419 13.6583 13.5252 12.975C14.2085 12.2917 14.5502 11.4667 14.5502 10.5C14.5502 9.53333 14.2085 8.70833 13.5252 8.025C12.8419 7.34167 12.0169 7 11.0502 7C10.0669 7 9.2377 7.34167 8.5627 8.025C7.8877 8.70833 7.5502 9.53333 7.5502 10.5C7.5502 11.4667 7.8877 12.2917 8.5627 12.975C9.2377 13.6583 10.0669 14 11.0502 14Z"
                }
            })])
        }
            , yi = []
            , _i = {
            name: "BaseSettingIcon"
        }
            , Ci = _i
            , wi = (s("51c4"),
            y(Ci, bi, yi, !1, null, "3cce4a18", null))
            , ki = wi.exports
            , Si = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "active-account"
            }, [e("span", {
                staticClass: "state-layer"
            }, [e("span", {
                staticClass: "balance label__large"
            }, [t._v(t._s(t.currencySign(t.symbol)) + t._s(t.balance))]), e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M6 20C4.9 20 3.95833 19.6083 3.175 18.825C2.39167 18.0417 2 17.1 2 16V8C2 6.9 2.39167 5.95833 3.175 5.175C3.95833 4.39167 4.9 4 6 4H18C19.1 4 20.0417 4.39167 20.825 5.175C21.6083 5.95833 22 6.9 22 8V16C22 17.1 21.6083 18.0417 20.825 18.825C20.0417 19.6083 19.1 20 18 20H6ZM6 8H18C18.3667 8 18.7167 8.04167 19.05 8.125C19.3833 8.20833 19.7 8.34167 20 8.525V8C20 7.45 19.8042 6.97917 19.4125 6.5875C19.0208 6.19583 18.55 6 18 6H6C5.45 6 4.97917 6.19583 4.5875 6.5875C4.19583 6.97917 4 7.45 4 8V8.525C4.3 8.34167 4.61667 8.20833 4.95 8.125C5.28333 8.04167 5.63333 8 6 8ZM4.15 11.25L15.275 13.95C15.425 13.9833 15.575 13.9833 15.725 13.95C15.875 13.9167 16.0167 13.85 16.15 13.75L19.625 10.85C19.4417 10.6 19.2083 10.3958 18.925 10.2375C18.6417 10.0792 18.3333 10 18 10H6C5.56667 10 5.1875 10.1125 4.8625 10.3375C4.5375 10.5625 4.3 10.8667 4.15 11.25Z",
                    fill: "#93D5C6"
                }
            })])])])
        }
            , xi = []
            , Mi = {
            name: "BaseActiveAccountButton",
            methods: {
                currencySign: l["e"]
            },
            props: {
                symbol: {
                    type: String
                },
                balance: {
                    type: String
                }
            }
        }
            , Ai = Mi
            , Di = (s("cad4"),
            y(Ai, Si, xi, !1, null, "25700104", null))
            , Pi = Di.exports
            , Ti = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "toggle-icon-button",
                class: [t.buttonStyle, {
                    active: t.state
                }],
                on: {
                    click: function(e) {
                        return t.toggler()
                    }
                }
            }, [e("span", {
                staticClass: "state-layer"
            }, [t.state ? t._t("active-icon") : t._t("init-icon")], 2)])
        }
            , Li = []
            , Ii = {
            name: "BaseToggleIconButton",
            props: {
                buttonStyle: {
                    type: String
                }
            },
            mixins: [I]
        }
            , Fi = Ii
            , Oi = (s("92f6"),
            y(Fi, Ti, Li, !1, null, "e19024de", null))
            , Bi = Oi.exports
            , Ni = {
            name: "TheHeader",
            components: {
                BaseToggleIconButton: Bi,
                BaseActiveAccountButton: Pi,
                BaseMonogram: Ee,
                BaseSettingIcon: ki,
                BaseDepositButton: gi,
                BaseAutotraderButton: ui,
                BaseLogo: oi,
                BaseAccountType: Qa
            },
            data() {
                return {
                    tradingViewTheme: pt["Lb"],
                    whiteAspinTheme: pt["Pb"],
                    logo: pt["ab"]
                }
            },
            methods: {
                showMenu() {
                    let t = this.modals.sideMenuBurger;
                    this.$store.commit(n["F"], {
                        sideMenuBurger: !t
                    })
                },
                openBalanceModal() {
                    this.$store.commit(n["F"], {
                        balance: !0
                    })
                },
                showCabinet(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["staticBaseDomain", "lightTheme", "tokens", "accounts", "activeAccount", "modals"]),
                logoComputed() {
                    let t = this.logo.url;
                    if ("co" !== this.staticBaseDomain) {
                        const e = t.split("/");
                        e[2] = e[2].replace("co", this.staticBaseDomain),
                            t = e.join("/")
                    }
                    return this.whiteAspinTheme ? this.lightTheme ? t.replace(/white/, "black") : t : "Light" === this.tradingViewTheme ? t.replace(/white/, "black") : t
                }
            }
        }
            , $i = Ni
            , Vi = (s("635f"),
            y($i, za, Ga, !1, null, "0a41aade", null))
            , Ei = Vi.exports;
        s("fc43");
        const Ui = {
            "--Custom-GreenContainer": "#0A3835",
            "--Custom-GreenFixed": "#15A98B",
            "--Custom-OnGreenContainer": "#00BC96",
            "--Custom-OnGreenFixed": "#CDFFF5",
            "--Custom-OnRedContainer": "#FF7385",
            "--Custom-OnRedFixed": "#FFEFEF",
            "--Custom-RedContainer": "#421D29",
            "--Custom-RedFixed": "#F14C59",
            "--Monohrome-Black": "#000000",
            "--Monohrome-White": "#FFFFFF",
            "--Statelayers-background-opacity08": "rgba(18,19,24,0.08)",
            "--Statelayers-background-opacity12": "rgba(18,19,24,0.12)",
            "--Statelayers-background-opacity16": "rgba(18,19,24,0.16)",
            "--Statelayers-error-opacity08": "rgba(255,180,171,0.08)",
            "--Statelayers-error-opacity12": "rgba(255,180,171,0.12)",
            "--Statelayers-error-opacity16": "rgba(255,180,171,0.16)",
            "--Statelayers-errorcontainer-opacity08": "rgba(147,0,10,0.08)",
            "--Statelayers-errorcontainer-opacity12": "rgba(147,0,10,0.12)",
            "--Statelayers-errorcontainer-opacity16": "rgba(147,0,10,0.16)",
            "--Statelayers-greencontainer-opacity08": "rgba(10,56,53,0.08)",
            "--Statelayers-greencontainer-opacity12": "rgba(10,56,53,0.12)",
            "--Statelayers-greencontainer-opacity16": "rgba(10,56,53,0.16)",
            "--Statelayers-greenfixed-opacity08": "rgba(21,169,139,0.08)",
            "--Statelayers-greenfixed-opacity12": "rgba(21,169,139,0.12)",
            "--Statelayers-greenfixed-opacity16": "rgba(21,169,139,0.16)",
            "--Statelayers-inverseonsurface-opacity08": "rgba(47,48,54,0.08)",
            "--Statelayers-inverseonsurface-opacity12": "rgba(47,48,54,0.12)",
            "--Statelayers-inverseonsurface-opacity16": "rgba(47,48,54,0.16)",
            "--Statelayers-inverseprimary-opacity08": "rgba(70,93,145,0.08)",
            "--Statelayers-inverseprimary-opacity12": "rgba(70,93,145,0.12)",
            "--Statelayers-inverseprimary-opacity16": "rgba(70,93,145,0.16)",
            "--Statelayers-inversesurface-opacity08": "rgba(227,226,233,0.08)",
            "--Statelayers-inversesurface-opacity12": "rgba(227,226,233,0.12)",
            "--Statelayers-inversesurface-opacity16": "rgba(227,226,233,0.16)",
            "--Statelayers-onbackground-opacity08": "rgba(226,226,233,0.08)",
            "--Statelayers-onbackground-opacity12": "rgba(226,226,233,0.12)",
            "--Statelayers-onbackground-opacity16": "rgba(226,226,233,0.16)",
            "--Statelayers-onerror-opacity08": "rgba(105,0,5,0.08)",
            "--Statelayers-onerror-opacity12": "rgba(105,0,5,0.12)",
            "--Statelayers-onerror-opacity16": "rgba(105,0,5,0.16)",
            "--Statelayers-onerrorcontainer-opacity08": "rgba(255,218,214,0.08)",
            "--Statelayers-onerrorcontainer-opacity12": "rgba(255,218,214,0.12)",
            "--Statelayers-onerrorcontainer-opacity16": "rgba(255,218,214,0.16)",
            "--Statelayers-ongreencontainer-opacity08": "rgba(0,188,150,0.08)",
            "--Statelayers-ongreencontainer-opacity12": "rgba(0,188,150,0.12)",
            "--Statelayers-ongreencontainer-opacity16": "rgba(0,188,150,0.16)",
            "--Statelayers-ongreenfixed-opacity08": "rgba(205,255,245,0.08)",
            "--Statelayers-ongreenfixed-opacity12": "rgba(205,255,245,0.12)",
            "--Statelayers-ongreenfixed-opacity16": "rgba(205,255,245,0.16)",
            "--Statelayers-onprimary-opacity08": "rgba(20,47,96,0.08)",
            "--Statelayers-onprimary-opacity12": "rgba(20,47,96,0.12)",
            "--Statelayers-onprimary-opacity16": "rgba(20,47,96,0.16)",
            "--Statelayers-onprimarycontainer-opacity08": "rgba(217,226,255,0.08)",
            "--Statelayers-onprimarycontainer-opacity12": "rgba(217,226,255,0.12)",
            "--Statelayers-onprimarycontainer-opacity16": "rgba(217,226,255,0.16)",
            "--Statelayers-onprimaryfixed-opacity08": "rgba(0,25,68,0.08)",
            "--Statelayers-onprimaryfixed-opacity12": "rgba(0,25,68,0.12)",
            "--Statelayers-onprimaryfixed-opacity16": "rgba(0,25,68,0.16)",
            "--Statelayers-onprimaryfixedvariant-opacity08": "rgba(45,69,120,0.08)",
            "--Statelayers-onprimaryfixedvariant-opacity12": "rgba(45,69,120,0.12)",
            "--Statelayers-onprimaryfixedvariant-opacity16": "rgba(45,69,120,0.16)",
            "--Statelayers-onredcontainer-opacity08": "rgba(255,115,133,0.08)",
            "--Statelayers-onredcontainer-opacity12": "rgba(255,115,133,0.12)",
            "--Statelayers-onredcontainer-opacity16": "rgba(255,115,133,0.16)",
            "--Statelayers-onredfixed-opacity08": "rgba(255,239,239,0.08)",
            "--Statelayers-onredfixed-opacity12": "rgba(255,239,239,0.12)",
            "--Statelayers-onredfixed-opacity16": "rgba(255,239,239,0.16)",
            "--Statelayers-onsecondary-opacity08": "rgba(41,48,66,0.08)",
            "--Statelayers-onsecondary-opacity12": "rgba(41,48,66,0.12)",
            "--Statelayers-onsecondary-opacity16": "rgba(41,48,66,0.16)",
            "--Statelayers-onsecondarycontainer-opacity08": "rgba(219,226,249,0.08)",
            "--Statelayers-onsecondarycontainer-opacity12": "rgba(219,226,249,0.12)",
            "--Statelayers-onsecondarycontainer-opacity16": "rgba(219,226,249,0.16)",
            "--Statelayers-onsecondaryfixed-opacity08": "rgba(20,27,44,0.08)",
            "--Statelayers-onsecondaryfixed-opacity12": "rgba(20,27,44,0.12)",
            "--Statelayers-onsecondaryfixed-opacity16": "rgba(20,27,44,0.16)",
            "--Statelayers-onsecondaryfixedvariant-opacity08": "rgba(64,70,89,0.08)",
            "--Statelayers-onsecondaryfixedvariant-opacity12": "rgba(64,70,89,0.12)",
            "--Statelayers-onsecondaryfixedvariant-opacity16": "rgba(64,70,89,0.16)",
            "--Statelayers-onsurface-opacity08": "rgba(227,226,233,0.08)",
            "--Statelayers-onsurface-opacity12": "rgba(227,226,233,0.12)",
            "--Statelayers-onsurface-opacity16": "rgba(227,226,233,0.16)",
            "--Statelayers-onsurfacevariant-opacity08": "rgba(154,157,171,0.08)",
            "--Statelayers-onsurfacevariant-opacity12": "rgba(154,157,171,0.12)",
            "--Statelayers-onsurfacevariant-opacity16": "rgba(154,157,171,0.16)",
            "--Statelayers-ontertiary-opacity08": "rgba(0,57,48,0.08)",
            "--Statelayers-ontertiary-opacity12": "rgba(0,57,48,0.12)",
            "--Statelayers-ontertiary-opacity16": "rgba(0,57,48,0.16)",
            "--Statelayers-ontertiarycontainer-opacity08": "rgba(174,242,224,0.08)",
            "--Statelayers-ontertiarycontainer-opacity12": "rgba(174,242,224,0.12)",
            "--Statelayers-ontertiarycontainer-opacity16": "rgba(174,242,224,0.16)",
            "--Statelayers-ontertiaryfixed-opacity08": "rgba(0,33,16,0.08)",
            "--Statelayers-ontertiaryfixed-opacity12": "rgba(0,33,16,0.12)",
            "--Statelayers-ontertiaryfixed-opacity16": "rgba(0,33,16,0.16)",
            "--Statelayers-ontertiaryfixedvariant-opacity08": "rgba(9,81,49,0.08)",
            "--Statelayers-ontertiaryfixedvariant-opacity12": "rgba(9,81,49,0.12)",
            "--Statelayers-ontertiaryfixedvariant-opacity16": "rgba(9,81,49,0.16)",
            "--Statelayers-outline-opacity08": "rgba(126,127,143,0.08)",
            "--Statelayers-outline-opacity12": "rgba(126,127,143,0.12)",
            "--Statelayers-outline-opacity16": "rgba(126,127,143,0.16)",
            "--Statelayers-outlinevariant-opacity08": "rgba(63,69,79,0.08)",
            "--Statelayers-outlinevariant-opacity12": "rgba(63,69,79,0.12)",
            "--Statelayers-outlinevariant-opacity16": "rgba(63,69,79,0.16)",
            "--Statelayers-primary-opacity08": "rgba(175,198,255,0.08)",
            "--Statelayers-primary-opacity12": "rgba(175,198,255,0.12)",
            "--Statelayers-primary-opacity16": "rgba(175,198,255,0.16)",
            "--Statelayers-primarycontainer-opacity08": "rgba(45,69,120,0.08)",
            "--Statelayers-primarycontainer-opacity12": "rgba(45,69,120,0.12)",
            "--Statelayers-primarycontainer-opacity16": "rgba(45,69,120,0.16)",
            "--Statelayers-primaryfixed-opacity08": "rgba(217,226,255,0.08)",
            "--Statelayers-primaryfixed-opacity12": "rgba(217,226,255,0.12)",
            "--Statelayers-primaryfixed-opacity16": "rgba(217,226,255,0.16)",
            "--Statelayers-primaryfixeddim-opacity08": "rgba(175,198,255,0.08)",
            "--Statelayers-primaryfixeddim-opacity12": "rgba(175,198,255,0.12)",
            "--Statelayers-primaryfixeddim-opacity16": "rgba(175,198,255,0.16)",
            "--Statelayers-redcontainer-opacity08": "rgba(66,29,41,0.08)",
            "--Statelayers-redcontainer-opacity12": "rgba(66,29,41,0.12)",
            "--Statelayers-redcontainer-opacity16": "rgba(66,29,41,0.16)",
            "--Statelayers-redfixed-opacity08": "rgba(241,76,89,0.08)",
            "--Statelayers-redfixed-opacity12": "rgba(241,76,89,0.12)",
            "--Statelayers-redfixed-opacity16": "rgba(241,76,89,0.16)",
            "--Statelayers-scrim-opacity08": "rgba(0,0,0,0.08)",
            "--Statelayers-scrim-opacity12": "rgba(0,0,0,0.12)",
            "--Statelayers-scrim-opacity16": "rgba(0,0,0,0.16)",
            "--Statelayers-secondary-opacity08": "rgba(191,198,220,0.08)",
            "--Statelayers-secondary-opacity12": "rgba(191,198,220,0.12)",
            "--Statelayers-secondary-opacity16": "rgba(191,198,220,0.16)",
            "--Statelayers-secondarycontainer-opacity08": "rgba(64,70,89,0.08)",
            "--Statelayers-secondarycontainer-opacity12": "rgba(64,70,89,0.12)",
            "--Statelayers-secondarycontainer-opacity16": "rgba(64,70,89,0.16)",
            "--Statelayers-secondaryfixed-opacity08": "rgba(219,226,249,0.08)",
            "--Statelayers-secondaryfixed-opacity12": "rgba(219,226,249,0.12)",
            "--Statelayers-secondaryfixed-opacity16": "rgba(219,226,249,0.16)",
            "--Statelayers-secondaryfixeddim-opacity08": "rgba(191,198,220,0.08)",
            "--Statelayers-secondaryfixeddim-opacity12": "rgba(191,198,220,0.12)",
            "--Statelayers-secondaryfixeddim-opacity16": "rgba(191,198,220,0.16)",
            "--Statelayers-shadow-opacity08": "rgba(0,0,0,0.08)",
            "--Statelayers-shadow-opacity12": "rgba(0,0,0,0.12)",
            "--Statelayers-shadow-opacity16": "rgba(0,0,0,0.16)",
            "--Statelayers-surface-opacity08": "rgba(22,27,36,0.08)",
            "--Statelayers-surface-opacity12": "rgba(22,27,36,0.12)",
            "--Statelayers-surface-opacity16": "rgba(22,27,36,0.16)",
            "--Statelayers-surface1-opacity08": "rgba(28,34,43,0.08)",
            "--Statelayers-surface1-opacity12": "rgba(28,34,43,0.12)",
            "--Statelayers-surface1-opacity16": "rgba(28,34,43,0.16)",
            "--Statelayers-surface2-opacity08": "rgba(33,39,48,0.08)",
            "--Statelayers-surface2-opacity12": "rgba(33,39,48,0.12)",
            "--Statelayers-surface2-opacity16": "rgba(33,39,48,0.16)",
            "--Statelayers-surface3-opacity08": "rgba(37,43,54,0.08)",
            "--Statelayers-surface3-opacity12": "rgba(37,43,54,0.12)",
            "--Statelayers-surface3-opacity16": "rgba(37,43,54,0.16)",
            "--Statelayers-surface4-opacity08": "rgba(41,48,60,0.08)",
            "--Statelayers-surface4-opacity12": "rgba(41,48,60,0.12)",
            "--Statelayers-surface4-opacity16": "rgba(41,48,60,0.16)",
            "--Statelayers-surface5-opacity08": "rgba(44,51,64,0.08)",
            "--Statelayers-surface5-opacity12": "rgba(44,51,64,0.12)",
            "--Statelayers-surface5-opacity16": "rgba(44,51,64,0.16)",
            "--Statelayers-surfacebright-opacity08": "rgba(56,57,63,0.08)",
            "--Statelayers-surfacebright-opacity12": "rgba(56,57,63,0.12)",
            "--Statelayers-surfacebright-opacity16": "rgba(56,57,63,0.16)",
            "--Statelayers-surfacedim-opacity08": "rgba(18,19,24,0.08)",
            "--Statelayers-surfacedim-opacity12": "rgba(18,19,24,0.12)",
            "--Statelayers-surfacedim-opacity16": "rgba(18,19,24,0.16)",
            "--Statelayers-surfacetint-opacity08": "rgba(175,198,255,0.08)",
            "--Statelayers-surfacetint-opacity12": "rgba(175,198,255,0.12)",
            "--Statelayers-surfacetint-opacity16": "rgba(175,198,255,0.16)",
            "--Statelayers-surfacevariant-opacity08": "rgba(69,70,79,0.08)",
            "--Statelayers-surfacevariant-opacity12": "rgba(69,70,79,0.12)",
            "--Statelayers-surfacevariant-opacity16": "rgba(69,70,79,0.16)",
            "--Statelayers-tertiary-opacity08": "rgba(147,213,198,0.08)",
            "--Statelayers-tertiary-opacity12": "rgba(147,213,198,0.12)",
            "--Statelayers-tertiary-opacity16": "rgba(147,213,198,0.16)",
            "--Statelayers-tertiarycontainer-opacity08": "rgba(9,81,62,0.08)",
            "--Statelayers-tertiarycontainer-opacity12": "rgba(9,81,62,0.12)",
            "--Statelayers-tertiarycontainer-opacity16": "rgba(9,81,62,0.16)",
            "--Statelayers-tertiaryfixed-opacity08": "rgba(174,242,197,0.08)",
            "--Statelayers-tertiaryfixed-opacity12": "rgba(174,242,197,0.12)",
            "--Statelayers-tertiaryfixed-opacity16": "rgba(174,242,197,0.16)",
            "--Statelayers-tertiaryfixeddim-opacity08": "rgba(147,213,170,0.08)",
            "--Statelayers-tertiaryfixeddim-opacity12": "rgba(147,213,170,0.12)",
            "--Statelayers-tertiaryfixeddim-opacity16": "rgba(147,213,170,0.16)",
            "--System-Background": "#121318",
            "--System-Error": "#FFB4AB",
            "--System-ErrorContainer": "#93000A",
            "--System-InverseOnSurface": "#2F3036",
            "--System-InversePrimary": "#465D91",
            "--System-InverseSurface": "#E3E2E9",
            "--System-OnBackground": "#E2E2E9",
            "--System-OnError": "#690005",
            "--System-OnErrorContainer": "#FFDAD6",
            "--System-OnPrimary": "#142F60",
            "--System-OnPrimaryContainer": "#D9E2FF",
            "--System-OnPrimaryFixed": "#001944",
            "--System-OnPrimaryFixedVariant": "#2D4578",
            "--System-OnSecondary": "#293042",
            "--System-OnSecondaryContainer": "#DBE2F9",
            "--System-OnSecondaryFixed": "#141B2C",
            "--System-OnSecondaryFixedVariant": "#404659",
            "--System-OnSurface": "#E3E2E9",
            "--System-OnSurfaceVariant": "#9A9DAB",
            "--System-OnTertiary": "#003930",
            "--System-OnTertiaryContainer": "#AEF2E0",
            "--System-OnTertiaryFixed": "#002110",
            "--System-OnTertiaryFixedVariant": "#095131",
            "--System-Outline": "#7E7F8F",
            "--System-OutlineVariant": "#3F454F",
            "--System-Primary": "#AFC6FF",
            "--System-PrimaryContainer": "#2D4578",
            "--System-PrimaryFixed": "#D9E2FF",
            "--System-PrimaryFixedDim": "#AFC6FF",
            "--System-Scrim": "#000000",
            "--System-Secondary": "#BFC6DC",
            "--System-SecondaryContainer": "#404659",
            "--System-SecondaryFixed": "#DBE2F9",
            "--System-SecondaryFixedDim": "#BFC6DC",
            "--System-Shadow": "#000000",
            "--System-Surface": "#161B24",
            "--System-Surface1": "#1C222B",
            "--System-Surface2": "#212730",
            "--System-Surface3": "#252B36",
            "--System-Surface4": "#29303C",
            "--System-Surface5": "#2C3340",
            "--System-SurfaceBright": "#38393F",
            "--System-SurfaceDim": "#121318",
            "--System-SurfaceTint": "#AFC6FF",
            "--System-SurfaceVariant": "#45464F",
            "--System-Tertiary": "#93D5C6",
            "--System-TertiaryContainer": "#09513E",
            "--System-TertiaryFixed": "#AEF2C5",
            "--System-TertiaryFixedDim": "#93D5AA"
        }
            , Hi = () => {
            switch (pt["F"]) {
                default:
                    return Ui
            }
        }
            , ji = Hi()
            , qi = {
            "--Custom-GreenContainer": "#67B199",
            "--Custom-GreenFixed": "#15A98B",
            "--Custom-OnGreenContainer": "#003028",
            "--Custom-OnGreenFixed": "#85D5C5",
            "--Custom-OnRedContainer": "#550B15",
            "--Custom-OnRedFixed": "#FFEFEF",
            "--Custom-RedContainer": "#E68F9C",
            "--Custom-RedFixed": "#F14C59",
            "--Monohrome-Black": "#000000",
            "--Monohrome-White": "#FFFFFF",
            "--Statelayers-background-opacity08": "rgba(250,248,255,0.08)",
            "--Statelayers-background-opacity12": "rgba(250,248,255,0.12)",
            "--Statelayers-background-opacity16": "rgba(250,248,255,0.16)",
            "--Statelayers-error-opacity08": "rgba(186,26,26,0.08)",
            "--Statelayers-error-opacity12": "rgba(186,26,26,0.12)",
            "--Statelayers-error-opacity16": "rgba(186,26,26,0.16)",
            "--Statelayers-errorcontainer-opacity08": "rgba(255,218,214,0.08)",
            "--Statelayers-errorcontainer-opacity12": "rgba(255,218,214,0.12)",
            "--Statelayers-errorcontainer-opacity16": "rgba(255,218,214,0.16)",
            "--Statelayers-greencontainer-opacity08": "rgba(103,177,153,0.08)",
            "--Statelayers-greencontainer-opacity12": "rgba(103,177,153,0.12)",
            "--Statelayers-greencontainer-opacity16": "rgba(103,177,153,0.16)",
            "--Statelayers-greenfixed-opacity08": "rgba(21,169,139,0.08)",
            "--Statelayers-greenfixed-opacity12": "rgba(21,169,139,0.12)",
            "--Statelayers-greenfixed-opacity16": "rgba(21,169,139,0.16)",
            "--Statelayers-inverseonsurface-opacity08": "rgba(241,240,247,0.08)",
            "--Statelayers-inverseonsurface-opacity12": "rgba(241,240,247,0.12)",
            "--Statelayers-inverseonsurface-opacity16": "rgba(241,240,247,0.16)",
            "--Statelayers-inverseprimary-opacity08": "rgba(175,198,255,0.08)",
            "--Statelayers-inverseprimary-opacity12": "rgba(175,198,255,0.12)",
            "--Statelayers-inverseprimary-opacity16": "rgba(175,198,255,0.16)",
            "--Statelayers-inversesurface-opacity08": "rgba(47,48,54,0.08)",
            "--Statelayers-inversesurface-opacity12": "rgba(47,48,54,0.12)",
            "--Statelayers-inversesurface-opacity16": "rgba(47,48,54,0.16)",
            "--Statelayers-onbackground-opacity08": "rgba(26,27,32,0.08)",
            "--Statelayers-onbackground-opacity12": "rgba(26,27,32,0.12)",
            "--Statelayers-onbackground-opacity16": "rgba(26,27,32,0.16)",
            "--Statelayers-onerror-opacity08": "rgba(255,255,255,0.08)",
            "--Statelayers-onerror-opacity12": "rgba(255,255,255,0.12)",
            "--Statelayers-onerror-opacity16": "rgba(255,255,255,0.16)",
            "--Statelayers-onerrorcontainer-opacity08": "rgba(65,0,2,0.08)",
            "--Statelayers-onerrorcontainer-opacity12": "rgba(65,0,2,0.12)",
            "--Statelayers-onerrorcontainer-opacity16": "rgba(65,0,2,0.16)",
            "--Statelayers-ongreencontainer-opacity08": "rgba(0,48,40,0.08)",
            "--Statelayers-ongreencontainer-opacity12": "rgba(0,48,40,0.12)",
            "--Statelayers-ongreencontainer-opacity16": "rgba(0,48,40,0.16)",
            "--Statelayers-ongreenfixed-opacity08": "rgba(205,255,245,0.08)",
            "--Statelayers-ongreenfixed-opacity12": "rgba(205,255,245,0.12)",
            "--Statelayers-ongreenfixed-opacity16": "rgba(205,255,245,0.16)",
            "--Statelayers-onprimary-opacity08": "rgba(255,255,255,0.08)",
            "--Statelayers-onprimary-opacity12": "rgba(255,255,255,0.12)",
            "--Statelayers-onprimary-opacity16": "rgba(255,255,255,0.16)",
            "--Statelayers-onprimarycontainer-opacity08": "rgba(0,25,68,0.08)",
            "--Statelayers-onprimarycontainer-opacity12": "rgba(0,25,68,0.12)",
            "--Statelayers-onprimarycontainer-opacity16": "rgba(0,25,68,0.16)",
            "--Statelayers-onprimaryfixed-opacity08": "rgba(0,25,68,0.08)",
            "--Statelayers-onprimaryfixed-opacity12": "rgba(0,25,68,0.12)",
            "--Statelayers-onprimaryfixed-opacity16": "rgba(0,25,68,0.16)",
            "--Statelayers-onprimaryfixedvariant-opacity08": "rgba(45,69,120,0.08)",
            "--Statelayers-onprimaryfixedvariant-opacity12": "rgba(45,69,120,0.12)",
            "--Statelayers-onprimaryfixedvariant-opacity16": "rgba(45,69,120,0.16)",
            "--Statelayers-onredcontainer-opacity08": "rgba(85,11,21,0.08)",
            "--Statelayers-onredcontainer-opacity12": "rgba(85,11,21,0.12)",
            "--Statelayers-onredcontainer-opacity16": "rgba(85,11,21,0.16)",
            "--Statelayers-onredfixed-opacity08": "rgba(255,239,239,0.08)",
            "--Statelayers-onredfixed-opacity12": "rgba(255,239,239,0.12)",
            "--Statelayers-onredfixed-opacity16": "rgba(255,239,239,0.16)",
            "--Statelayers-onsecondary-opacity08": "rgba(173,176,182,0.08)",
            "--Statelayers-onsecondary-opacity12": "rgba(173,176,182,0.12)",
            "--Statelayers-onsecondary-opacity16": "rgba(173,176,182,0.16)",
            "--Statelayers-onsecondarycontainer-opacity08": "rgba(20,27,44,0.08)",
            "--Statelayers-onsecondarycontainer-opacity12": "rgba(20,27,44,0.12)",
            "--Statelayers-onsecondarycontainer-opacity16": "rgba(20,27,44,0.16)",
            "--Statelayers-onsecondaryfixed-opacity08": "rgba(20,27,44,0.08)",
            "--Statelayers-onsecondaryfixed-opacity12": "rgba(20,27,44,0.12)",
            "--Statelayers-onsecondaryfixed-opacity16": "rgba(20,27,44,0.16)",
            "--Statelayers-onsecondaryfixedvariant-opacity08": "rgba(64,70,89,0.08)",
            "--Statelayers-onsecondaryfixedvariant-opacity12": "rgba(64,70,89,0.12)",
            "--Statelayers-onsecondaryfixedvariant-opacity16": "rgba(64,70,89,0.16)",
            "--Statelayers-onsurface-opacity08": "rgba(26,27,33,0.08)",
            "--Statelayers-onsurface-opacity12": "rgba(26,27,33,0.12)",
            "--Statelayers-onsurface-opacity16": "rgba(26,27,33,0.16)",
            "--Statelayers-onsurfacevariant-opacity08": "rgba(93,98,109,0.08)",
            "--Statelayers-onsurfacevariant-opacity12": "rgba(93,98,109,0.12)",
            "--Statelayers-onsurfacevariant-opacity16": "rgba(93,98,109,0.16)",
            "--Statelayers-ontertiary-opacity08": "rgba(255,255,255,0.08)",
            "--Statelayers-ontertiary-opacity12": "rgba(255,255,255,0.12)",
            "--Statelayers-ontertiary-opacity16": "rgba(255,255,255,0.16)",
            "--Statelayers-ontertiarycontainer-opacity08": "rgba(0,33,24,0.08)",
            "--Statelayers-ontertiarycontainer-opacity12": "rgba(0,33,24,0.12)",
            "--Statelayers-ontertiarycontainer-opacity16": "rgba(0,33,24,0.16)",
            "--Statelayers-ontertiaryfixed-opacity08": "rgba(0,33,16,0.08)",
            "--Statelayers-ontertiaryfixed-opacity12": "rgba(0,33,16,0.12)",
            "--Statelayers-ontertiaryfixed-opacity16": "rgba(0,33,16,0.16)",
            "--Statelayers-ontertiaryfixedvariant-opacity08": "rgba(9,81,49,0.08)",
            "--Statelayers-ontertiaryfixedvariant-opacity12": "rgba(9,81,49,0.12)",
            "--Statelayers-ontertiaryfixedvariant-opacity16": "rgba(9,81,49,0.16)",
            "--Statelayers-outline-opacity08": "rgba(117,119,128,0.08)",
            "--Statelayers-outline-opacity12": "rgba(117,119,128,0.12)",
            "--Statelayers-outline-opacity16": "rgba(117,119,128,0.16)",
            "--Statelayers-outlinevariant-opacity08": "rgba(179,186,199,0.08)",
            "--Statelayers-outlinevariant-opacity12": "rgba(179,186,199,0.12)",
            "--Statelayers-outlinevariant-opacity16": "rgba(179,186,199,0.16)",
            "--Statelayers-primary-opacity08": "rgba(64,86,198,0.08)",
            "--Statelayers-primary-opacity12": "rgba(64,86,198,0.12)",
            "--Statelayers-primary-opacity16": "rgba(64,86,198,0.16)",
            "--Statelayers-primarycontainer-opacity08": "rgba(204,216,255,0.08)",
            "--Statelayers-primarycontainer-opacity12": "rgba(204,216,255,0.12)",
            "--Statelayers-primarycontainer-opacity16": "rgba(204,216,255,0.16)",
            "--Statelayers-primaryfixed-opacity08": "rgba(217,226,255,0.08)",
            "--Statelayers-primaryfixed-opacity12": "rgba(217,226,255,0.12)",
            "--Statelayers-primaryfixed-opacity16": "rgba(217,226,255,0.16)",
            "--Statelayers-primaryfixeddim-opacity08": "rgba(175,198,255,0.08)",
            "--Statelayers-primaryfixeddim-opacity12": "rgba(175,198,255,0.12)",
            "--Statelayers-primaryfixeddim-opacity16": "rgba(175,198,255,0.16)",
            "--Statelayers-redcontainer-opacity08": "rgba(230,143,156,0.08)",
            "--Statelayers-redcontainer-opacity12": "rgba(230,143,156,0.12)",
            "--Statelayers-redcontainer-opacity16": "rgba(230,143,156,0.16)",
            "--Statelayers-redfixed-opacity08": "rgba(241,76,89,0.08)",
            "--Statelayers-redfixed-opacity12": "rgba(241,76,89,0.12)",
            "--Statelayers-redfixed-opacity16": "rgba(241,76,89,0.16)",
            "--Statelayers-scrim-opacity08": "rgba(0,0,0,0.08)",
            "--Statelayers-scrim-opacity12": "rgba(0,0,0,0.12)",
            "--Statelayers-scrim-opacity16": "rgba(0,0,0,0.16)",
            "--Statelayers-secondary-opacity08": "rgba(86,95,120,0.08)",
            "--Statelayers-secondary-opacity12": "rgba(86,95,120,0.12)",
            "--Statelayers-secondary-opacity16": "rgba(86,95,120,0.16)",
            "--Statelayers-secondarycontainer-opacity08": "rgba(204,212,240,0.08)",
            "--Statelayers-secondarycontainer-opacity12": "rgba(204,212,240,0.12)",
            "--Statelayers-secondarycontainer-opacity16": "rgba(204,212,240,0.16)",
            "--Statelayers-secondaryfixed-opacity08": "rgba(219,226,249,0.08)",
            "--Statelayers-secondaryfixed-opacity12": "rgba(219,226,249,0.12)",
            "--Statelayers-secondaryfixed-opacity16": "rgba(219,226,249,0.16)",
            "--Statelayers-secondaryfixeddim-opacity08": "rgba(191,198,220,0.08)",
            "--Statelayers-secondaryfixeddim-opacity12": "rgba(191,198,220,0.12)",
            "--Statelayers-secondaryfixeddim-opacity16": "rgba(191,198,220,0.16)",
            "--Statelayers-shadow-opacity08": "rgba(0,0,0,0.08)",
            "--Statelayers-shadow-opacity12": "rgba(0,0,0,0.12)",
            "--Statelayers-shadow-opacity16": "rgba(0,0,0,0.16)",
            "--Statelayers-surface-opacity08": "rgba(232,238,250,0.08)",
            "--Statelayers-surface-opacity12": "rgba(232,238,250,0.12)",
            "--Statelayers-surface-opacity16": "rgba(232,238,250,0.16)",
            "--Statelayers-surface1-opacity08": "rgba(223,231,245,0.08)",
            "--Statelayers-surface1-opacity12": "rgba(223,231,245,0.12)",
            "--Statelayers-surface1-opacity16": "rgba(223,231,245,0.16)",
            "--Statelayers-surface2-opacity08": "rgba(218,227,245,0.08)",
            "--Statelayers-surface2-opacity12": "rgba(218,227,245,0.12)",
            "--Statelayers-surface2-opacity16": "rgba(218,227,245,0.16)",
            "--Statelayers-surface3-opacity08": "rgba(213,222,240,0.08)",
            "--Statelayers-surface3-opacity12": "rgba(213,222,240,0.12)",
            "--Statelayers-surface3-opacity16": "rgba(213,222,240,0.16)",
            "--Statelayers-surface4-opacity08": "rgba(206,217,237,0.08)",
            "--Statelayers-surface4-opacity12": "rgba(206,217,237,0.12)",
            "--Statelayers-surface4-opacity16": "rgba(206,217,237,0.16)",
            "--Statelayers-surface5-opacity08": "rgba(202,213,235,0.08)",
            "--Statelayers-surface5-opacity12": "rgba(202,213,235,0.12)",
            "--Statelayers-surface5-opacity16": "rgba(202,213,235,0.16)",
            "--Statelayers-surfacebright-opacity08": "rgba(250,248,255,0.08)",
            "--Statelayers-surfacebright-opacity12": "rgba(250,248,255,0.12)",
            "--Statelayers-surfacebright-opacity16": "rgba(250,248,255,0.16)",
            "--Statelayers-surfacedim-opacity08": "rgba(218,217,224,0.08)",
            "--Statelayers-surfacedim-opacity12": "rgba(218,217,224,0.12)",
            "--Statelayers-surfacedim-opacity16": "rgba(218,217,224,0.16)",
            "--Statelayers-surfacetint-opacity08": "rgba(52,91,179,0.08)",
            "--Statelayers-surfacetint-opacity12": "rgba(52,91,179,0.12)",
            "--Statelayers-surfacetint-opacity16": "rgba(52,91,179,0.16)",
            "--Statelayers-surfacevariant-opacity08": "rgba(225,226,236,0.08)",
            "--Statelayers-surfacevariant-opacity12": "rgba(225,226,236,0.12)",
            "--Statelayers-surfacevariant-opacity16": "rgba(225,226,236,0.16)",
            "--Statelayers-tertiary-opacity08": "rgba(42,106,100,0.08)",
            "--Statelayers-tertiary-opacity12": "rgba(42,106,100,0.12)",
            "--Statelayers-tertiary-opacity16": "rgba(42,106,100,0.16)",
            "--Statelayers-tertiarycontainer-opacity08": "rgba(151,223,204,0.08)",
            "--Statelayers-tertiarycontainer-opacity12": "rgba(151,223,204,0.12)",
            "--Statelayers-tertiarycontainer-opacity16": "rgba(151,223,204,0.16)",
            "--Statelayers-tertiaryfixed-opacity08": "rgba(174,242,197,0.08)",
            "--Statelayers-tertiaryfixed-opacity12": "rgba(174,242,197,0.12)",
            "--Statelayers-tertiaryfixed-opacity16": "rgba(174,242,197,0.16)",
            "--Statelayers-tertiaryfixeddim-opacity08": "rgba(147,213,170,0.08)",
            "--Statelayers-tertiaryfixeddim-opacity12": "rgba(147,213,170,0.12)",
            "--Statelayers-tertiaryfixeddim-opacity16": "rgba(147,213,170,0.16)",
            "--System-Background": "#FAF8FF",
            "--System-Error": "#BA1A1A",
            "--System-ErrorContainer": "#FFDAD6",
            "--System-InverseOnSurface": "#F1F0F7",
            "--System-InversePrimary": "#AFC6FF",
            "--System-InverseSurface": "#2F3036",
            "--System-OnBackground": "#1A1B20",
            "--System-OnError": "#FFFFFF",
            "--System-OnErrorContainer": "#410002",
            "--System-OnPrimary": "#FFFFFF",
            "--System-OnPrimaryContainer": "#001944",
            "--System-OnPrimaryFixed": "#001944",
            "--System-OnPrimaryFixedVariant": "#2D4578",
            "--System-OnSecondary": "#ADB0B6",
            "--System-OnSecondaryContainer": "#141B2C",
            "--System-OnSecondaryFixed": "#141B2C",
            "--System-OnSecondaryFixedVariant": "#404659",
            "--System-OnSurface": "#1A1B21",
            "--System-OnSurfaceVariant": "#5D626D",
            "--System-OnTertiary": "#FFFFFF",
            "--System-OnTertiaryContainer": "#002118",
            "--System-OnTertiaryFixed": "#002110",
            "--System-OnTertiaryFixedVariant": "#095131",
            "--System-Outline": "#757780",
            "--System-OutlineVariant": "#B3BAC7",
            "--System-Primary": "#4056C6",
            "--System-PrimaryContainer": "#CCD8FF",
            "--System-PrimaryFixed": "#D9E2FF",
            "--System-PrimaryFixedDim": "#AFC6FF",
            "--System-Scrim": "#000000",
            "--System-Secondary": "#565F78",
            "--System-SecondaryContainer": "#CCD4F0",
            "--System-SecondaryFixed": "#DBE2F9",
            "--System-SecondaryFixedDim": "#BFC6DC",
            "--System-Shadow": "#000000",
            "--System-Surface": "#E8EEFA",
            "--System-Surface1": "#DFE7F5",
            "--System-Surface2": "#DAE3F5",
            "--System-Surface3": "#D5DEF0",
            "--System-Surface4": "#CED9ED",
            "--System-Surface5": "#CAD5EB",
            "--System-SurfaceBright": "#FAF8FF",
            "--System-SurfaceDim": "#DAD9E0",
            "--System-SurfaceTint": "#4056C6",
            "--System-SurfaceVariant": "#E1E2EC",
            "--System-Tertiary": "#2A6A64",
            "--System-TertiaryContainer": "#97DFCC",
            "--System-TertiaryFixed": "#AEF2C5",
            "--System-TertiaryFixedDim": "#93D5AA"
        }
            , Ri = () => {
            switch (pt["Z"]) {
                default:
                    return qi
            }
        }
            , Wi = Ri();
        var zi = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.closePosition
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal ElevationDark__3",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", {
                staticClass: "title__large"
            }, [t._v(t._s(t.tokens.closePositionModal.closeOrder))])]), e("span", {
                staticClass: "warning body__medium"
            }, [t._v(" " + t._s(t.tokens.closePositionModal.areYouSure) + " #" + t._s(t.modalClosePosition.activeOrderId) + "? ")]), t.activeOrder.symbol ? e("div", {
                staticClass: "symbol-content"
            }, [e("div", {
                staticClass: "symbol-info"
            }, [e("span", {
                staticClass: "symbol",
                class: "" + ("symbol-" + t.activeOrder.symbol.toUpperCase().replace(".", "-"))
            }), e("span", {
                staticClass: "body__large alias"
            }, [t._v(" " + t._s(t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].alias : "") + " ")])]), e("div", {
                staticClass: "price-info"
            }, [e("span", {
                staticClass: "body__large profit"
            }, [t._v(" " + t._s(t.activeOrder.profit.toLocaleString(void 0, {
                minimumFractionDigits: t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].precision : 3,
                maximumFractionDigits: t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].precision : 3
            })) + " ")]), e("BasePositionDirection", {
                attrs: {
                    type: t.activeOrder.type
                }
            })], 1)]) : t._e(), e("div", {
                staticClass: "row actions"
            }, [e("BaseButton", {
                attrs: {
                    "button-style": "text-primary",
                    "button-text": "Cancel"
                },
                nativeOn: {
                    click: function(e) {
                        return t.hideModal()
                    }
                }
            }), e("BaseButton", {
                attrs: {
                    "button-style": "filled-primary",
                    "button-text": "Confirm"
                },
                nativeOn: {
                    click: function(e) {
                        return t.closePosition(t.modalClosePosition.activeOrderId, t.modalClosePosition.index)
                    }
                }
            })], 1)])])
        }
            , Gi = []
            , Yi = {
            name: "ClosePositionModal",
            components: {
                BasePositionDirection: A,
                BaseButton: Ae
            },
            methods: {
                hideModal() {
                    this.closeOrderLoader || this.$store.commit(n["F"], {
                        closePosition: !1
                    })
                },
                closePosition(t, e) {
                    this.$store.dispatch(r["h"], {
                        id: t,
                        index: e,
                        account_id: this.activeAccount.id
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "activeAccount", "tokens", "symbols", "modalClosePosition", "closeOrderLoader"]),
                activeOrder() {
                    let t = Object.values(this.activeAccount.orders).find(t => t.id === this.modalClosePosition.activeOrderId);
                    return t || {
                        alias: "",
                        type: 0,
                        volume: 0
                    }
                }
            }
        }
            , Zi = Yi
            , Ji = (s("9270"),
            y(Zi, zi, Gi, !1, null, "c07ac04e", null))
            , Ki = Ji.exports
            , Xi = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.autoClose
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title title__large"
            }, [t._v(t._s(t.tokens.autoCloseModal.takeProfitStopLoss))]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.autoCloseModal.takeProfit,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                model: {
                    value: t.values.tp,
                    callback: function(e) {
                        t.$set(t.values, "tp", e)
                    },
                    expression: "values.tp"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.tp = t.values.tp ? Math.max(0, parseFloat(t.values.tp) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }])
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.tp = t.values.tp ? (parseFloat(t.values.tp) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            })], 1)]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.autoCloseModal.stopLoss,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                model: {
                    value: t.values.sl,
                    callback: function(e) {
                        t.$set(t.values, "sl", e)
                    },
                    expression: "values.sl"
                }
            }), e("BaseButton", {
                staticClass: "minus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.sl = t.values.sl ? (parseFloat(t.values.sl) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("remove")])]
                    },
                    proxy: !0
                }])
            }), e("BaseButton", {
                staticClass: "plus",
                attrs: {
                    buttonStyle: "outlined-primary"
                },
                nativeOn: {
                    click: function(e) {
                        t.values.sl = t.values.sl ? Math.max(0, parseFloat(t.values.sl) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            })], 1)]), e("div", {
                staticClass: "buttons"
            }, [e("BaseButton", {
                attrs: {
                    buttonText: "Cancel",
                    buttonStyle: "text-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.hideModal.apply(null, arguments)
                    }
                }
            }), t.values.orderActive ? e("BaseButton", {
                attrs: {
                    buttonText: t.tokens.autoCloseModal.updateOrder,
                    buttonStyle: "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.updateOrder.apply(null, arguments)
                    }
                }
            }) : e("BaseButton", {
                attrs: {
                    buttonText: "Apply",
                    buttonStyle: "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.apply.apply(null, arguments)
                    }
                }
            })], 1)])])
        }
            , Qi = []
            , to = {
            name: "AutoCloseModal",
            components: {
                BaseNumberInput: ls,
                BaseButton: Ae
            },
            data() {
                return {
                    values: {
                        left: 0,
                        top: 0,
                        symbolActive: null,
                        orderActive: null,
                        tp: 0,
                        tpType: "=",
                        sl: 0,
                        slType: "=",
                        item: 0
                    }
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        autoClose: !1
                    })
                },
                updateInput(t) {
                    return t.replace(/,/g, "")
                },
                updateOrder() {
                    const t = Object.keys(this.activeAccount.orders)
                        , e = t.find(t => this.activeAccount.orders[t].id === this.values.orderActive);
                    if (void 0 === this.activeAccount.orders[e])
                        return void this.$store.commit(n["F"], {
                            autoClose: !1
                        });
                    let s = this.activeAccount.orders[e].price_open
                        , a = this.activeAccount.orders[e].type
                        , i = this.activeAccount.orders[e].easy_leverage || this.activeAccount.leverage
                        , o = this.activeAccount.orders[e].easy_amount
                        , l = 0
                        , c = 0;
                    switch (this.values.tpType) {
                        case "%":
                            c = Number(s) + (a % 2 ? -1 : 1) * s * this.values.tp / (100 * i);
                            break;
                        case "$":
                            c = Number(s) + (a % 2 ? -1 : 1) * s * this.values.tp / (100 * i * o);
                            break;
                        case "=":
                            c = String(this.values.tp),
                                c = c.includes(",") ? c.replace(/,/, ".") : c,
                                c = parseFloat(c);
                            break
                    }
                    switch (this.values.slType) {
                        case "%":
                            l = Number(s) + (a ? 1 : -1) * s * this.values.sl / (100 * this.leverage);
                            break;
                        case "$":
                            l = Number(s) + (a ? 1 : -1) * s * this.values.sl / (this.leverage * this.amount);
                            break;
                        case "=":
                            l = this.values.sl;
                            break
                    }
                    0 != this.values.tp && "" !== this.values.tp || (c = 0),
                    0 != this.values.sl && "" !== this.values.sl || (l = 0),
                        this.$store.dispatch(r["i"], {
                            id: this.values.orderActive,
                            account_id: this.activeAccount.id,
                            sl: l,
                            tp: c
                        }),
                        this.$store.commit(n["F"], {
                            autoClose: !1
                        })
                },
                setMode() {},
                apply() {
                    this.$store.commit(n["I"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !1
                        })
                },
                currencySign: l["e"],
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalAutoClose", "tokens", "activeAccount", "symbols", "orders"]),
                position() {
                    if (!this.modals.autoClose)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 360,
                        height: 345
                    };
                    return t.width >= 600 && this.isMobile() ? {
                        left: this.modalAutoClose.posX,
                        top: this.modalAutoClose.posY - 87
                    } : t.width < 600 && this.isMobile() ? {
                        left: t.width - e.width,
                        top: this.modalAutoClose.top - 188.5
                    } : {
                        left: this.modalAutoClose.left - e.width - 10,
                        top: Math.min(this.modalAutoClose.top, t.height - e.height)
                    }
                },
                modalSymbolActive() {
                    var t;
                    if (null === (null === (t = this.values) || void 0 === t ? void 0 : t.symbolActive)) {
                        var e, s;
                        const t = null === (e = this.orders) || void 0 === e || null === (e = e[null === (s = this.values) || void 0 === s ? void 0 : s.item]) || void 0 === e ? void 0 : e.symbol;
                        t && this.$store.commit(n["I"], {
                            symbolActive: this.symbols[t]
                        })
                    }
                    return this.modalAutoClose.symbolActive || {
                        precision: 0,
                        quote: {
                            bid: 0,
                            ask: 0
                        }
                    }
                }
            },
            watch: {
                modalAutoClose: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["I"], t)
                    }
                }
            }
        }
            , eo = to
            , so = (s("39e3"),
            y(eo, Xi, Qi, !1, null, "81cc593e", null))
            , ao = so.exports
            , io = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.balance
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "modal-title"
            }, [e("BalanceModalTitle", {
                attrs: {
                    title: "Active account"
                },
                on: {
                    close: t.hideModal
                },
                scopedSlots: t._u([{
                    key: "right",
                    fn: function() {
                        return [e("div", {
                            staticClass: "account-link label__small"
                        }, [e("a", {
                            attrs: {
                                href: "#!"
                            }
                        }, [t._v(t._s(t.activeAccount.demo ? t.tokens.balanceModal.practice : t.tokens.balanceModal.real) + " " + t._s(t.tokens.balanceModal.account) + " #" + t._s(t.activeAccount.id) + " "), e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("open_in_new")])])]), e("BaseButton", {
                            staticClass: "title-button",
                            attrs: {
                                "button-style": "filled-primary",
                                "button-text": "Save"
                            },
                            nativeOn: {
                                click: function(e) {
                                    return t.hideModal.apply(null, arguments)
                                }
                            }
                        })]
                    },
                    proxy: !0
                }])
            })], 1), e("div", {
                staticClass: "modal-body"
            }, [e("AccountList")], 1)])])
        }
            , oo = []
            , no = function() {
            var t = this
                , e = t._self._c;
            return e("div", t._l(t.accounts, (function(s) {
                    return e("AccountListItem", {
                        key: s.id,
                        attrs: {
                            account: s
                        },
                        nativeOn: {
                            click: function(e) {
                                return t.changeAccount(s.id)
                            }
                        }
                    })
                }
            )), 1)
        }
            , ro = []
            , lo = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "acc-row-container"
            }, [e("div", {
                staticClass: "acc-row real label__medium",
                class: {
                    active: t.activeAccount.id === t.account.id,
                    real: !t.account.demo,
                    demo: t.account.demo,
                    "disable-bottom-border-radius": t.activeAccount.id === t.account.id
                }
            }, [e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "sign"
            }, [t._v(t._s(t.currencySign(t.account.currency)))]), e("div", {
                staticClass: "col"
            }, [e("span", [t._v(" " + t._s(t.account.account_name && "MAIN" != t.account.account_name ? t.account.account_name : "main" === t.account.group ? "STANDARD" : t.account.group.toUpperCase()) + " " + t._s(t.tokens.balanceModal.account) + " ")]), e("span", [t._v("CFD #" + t._s(t.account.id))])]), e("div", {
                staticClass: "balance"
            }, [t._v(t._s(t.currencySign(t.account.currency)) + t._s(t.account.balance.toLocaleString(void 0, {
                minimumFractionDigits: t.account.precision,
                maximumFractionDigits: t.account.precision
            })))])]), e("BaseRadioButton", {
                attrs: {
                    state: t.activeAccount.id === t.account.id,
                    hoverDisable: !0
                }
            })], 1), t.account.id === t.activeAccount.id ? e("AccountListItemInfo") : t._e()], 1)
        }
            , co = []
            , uo = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "radio-button",
                class: {
                    active: t.state,
                    "hover-disable": t.hoverDisable
                },
                on: {
                    click: function(e) {
                        return t.setRadio()
                    }
                }
            }, [e("div", {
                staticClass: "radio-box"
            })])
        }
            , mo = []
            , po = {
            name: "BaseRadioButton",
            props: {
                state: {
                    type: Boolean,
                    default: !1
                },
                hoverDisable: {
                    type: Boolean,
                    default: !1
                }
            },
            methods: {
                setRadio() {
                    this.$emit("update", this.state)
                }
            }
        }
            , ho = po
            , vo = (s("0f8b"),
            y(ho, uo, mo, !1, null, "fa530d6c", null))
            , fo = vo.exports
            , go = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "card-inner"
            }, [e("div", {
                staticClass: "info"
            }, [e("div", {
                staticClass: "list body__medium"
            }, [e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.balance))]), e("div", {
                staticClass: "val-large"
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s((t.balances.balance > 0 ? t.balances.balance : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.credit))]), e("div", {
                staticClass: "val"
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s((t.balances.credit > 0 ? t.balances.credit : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.invested))]), e("div", {
                staticClass: "val"
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s((t.balances.orders * (1 / t.conversions[t.activeAccount.currency])).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.balances.profit >= 0 ? t.tokens.balanceModal.profit : t.tokens.balanceModal.loss))]), e("div", {
                staticClass: "val",
                class: t.balances.profit > 0 ? "green" : t.balances.profit < 0 ? "red" : ""
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s(t.balances.profit.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.equity))]), e("div", {
                staticClass: "val-large"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s(t.balances.equity_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.margin))]), e("div", {
                staticClass: "val"
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + t.balances.margin.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.marginLevel))]), e("div", {
                staticClass: "val-large"
            }, [t._v(" " + t._s(0 !== t.balances.margin ? t.balances.margin_level_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) + "%" : "-") + " ")])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.marginFree))]), e("div", {
                staticClass: "val-large"
            }, [t._v(" " + t._s(0 !== t.balances.margin ? t.currencySign(t.activeAccount.currency) + t.balances.free_margin_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) : "-") + " ")])])]), e("div", {
                staticClass: "item-link"
            }, [e("div", {
                staticClass: "account-link label__small"
            }, [e("a", {
                attrs: {
                    href: "#!"
                }
            }, [t._v(" " + t._s(t.activeAccount.demo ? t.tokens.balanceModal.practice : t.tokens.balanceModal.real) + " " + t._s(t.tokens.balanceModal.account) + " #" + t._s(t.activeAccount.id) + " "), e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("open_in_new")])])])])])])
        }
            , bo = []
            , yo = {
            name: "AccountListItemInfo",
            methods: {
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["activeAccount", "symbols", "tokens", "conversions"]),
                balances() {
                    let t = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        margin: 0,
                        margin_level_apprx: 0,
                        free_margin_apprx: 0,
                        equity_apprx: 0
                    };
                    if (!this.activeAccount.id)
                        return t;
                    t.balance = this.activeAccount.balance,
                        t.credit = this.activeAccount.credit;
                    let e = {};
                    for (let s in this.activeAccount.orders) {
                        let a = this.activeAccount.orders[s];
                        a.easy_amount = a.easy_amount || a.margin,
                            t.orders += a.easy_amount,
                        void 0 === e[a.symbol] && (e[a.symbol] = 0),
                            e[a.symbol] += a.type % 2 ? -a.margin : a.margin,
                        this.symbols[a.symbol] && (t.profit += a.type < 2 ? a.point * (a.type ? a.price_open - this.symbols[a.symbol].quote.ask : this.symbols[a.symbol].quote.bid - a.price_open) * Math.pow(10, this.symbols[a.symbol].precision) + a.swap + a.commission : 0)
                    }
                    for (let s in e)
                        t.margin += Math.abs(e[s]) * (1 / this.conversions[this.activeAccount.currency]);
                    return t.equity = t.balance + t.credit + t.profit,
                        t.margin_level_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit !== 0 && t.margin ? (t.equity / t.margin * 100).toFixed(2) : "",
                        t.free_margin_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit - t.margin,
                        t.equity_apprx = t.equity,
                        t
                }
            }
        }
            , _o = yo
            , Co = (s("e6f5"),
            y(_o, go, bo, !1, null, "240dee1e", null))
            , wo = Co.exports
            , ko = {
            name: "AccountListItem",
            components: {
                BaseRadioButton: fo,
                AccountListItemInfo: wo
            },
            props: {
                account: {
                    type: Object,
                    default: () => {}
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "activeAccount"])
            },
            methods: {
                currencySign: l["e"]
            }
        }
            , So = ko
            , xo = (s("9dfa"),
            y(So, lo, co, !1, null, "252873c6", null))
            , Mo = xo.exports
            , Ao = {
            components: {
                AccountListItem: Mo
            },
            methods: {
                changeAccount(t) {
                    this.$store.commit(n["b"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["activeAccount", "accounts"])
            }
        }
            , Do = Ao
            , Po = y(Do, no, ro, !1, null, null, null)
            , To = Po.exports
            , Lo = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "title"
            }, [e("div", {
                staticClass: "row row-left"
            }, [e("h4", {
                staticClass: "title__medium"
            }, [t._v(" " + t._s(t.title))])]), e("div", {
                staticClass: "slot-wrapper"
            }, [t._t("right")], 2)])
        }
            , Io = []
            , Fo = {
            name: "BalanceModalTitle",
            props: {
                title: {
                    type: String,
                    default: ""
                }
            },
            methods: {
                close() {
                    this.$emit("close")
                }
            }
        }
            , Oo = Fo
            , Bo = (s("b35d"),
            y(Oo, Lo, Io, !1, null, "395d04cc", null))
            , No = Bo.exports
            , $o = {
            name: "BalanceModal",
            components: {
                AccountList: To,
                BalanceModalTitle: No,
                BaseButton: Ae
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        balance: !1
                    })
                },
                resetDemo() {
                    this.$store.dispatch(r["l"])
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "activeAccount", "tokens"])
            }
        }
            , Vo = $o
            , Eo = (s("dc8d"),
            y(Vo, io, oo, !1, null, "726910ac", null))
            , Uo = Eo.exports
            , Ho = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.grids
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.gridsModal.chartGrids))])]), e("div", {
                staticClass: "content"
            }, [e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart1))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid",
                class: {
                    active: "1-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("1-1")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart2))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid",
                class: {
                    active: "2-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("2-1")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "2-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("2-2")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), e("div", {
                staticClass: "row item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart3))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid col",
                class: {
                    active: "3-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-1")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), t._m(0)]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "3-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-2")
                    }
                }
            }, [t._m(1), e("div", {
                staticClass: "row item"
            })]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-3" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-3")
                    }
                }
            }, [t._m(2), e("div", {
                staticClass: "col item"
            })]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-4" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-4")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), t._m(3)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-5" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-5")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart4))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-1")
                    }
                }
            }, [t._m(4), t._m(5)]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-2")
                    }
                }
            }, [t._m(6), e("div", {
                staticClass: "row item"
            })]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-3" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-3")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), t._m(7)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "4-4" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-4")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), t._m(8)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "4-5" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-5")
                    }
                }
            }, [t._m(9), e("div", {
                staticClass: "col item"
            })])])])])])])
        }
            , jo = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
        ]
            , qo = {
            name: "GridsModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        grids: !1
                    })
                },
                changeGrid(t) {
                    this.$store.commit(n["z"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "gridLayout", "tokens"])
            }
        }
            , Ro = qo
            , Wo = (s("aa42"),
            y(Ro, Ho, jo, !1, null, "bcdcce8c", null))
            , zo = Wo.exports
            , Go = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.register,
                    newDesign: t.newDesign,
                    "aspin-modal-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "modal"
            }, [e("form", {
                staticClass: "modal-box"
            }, [t.aspinDesign ? e("a", {
                staticClass: "aspin-logo",
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    href: t.logoRedirectOff ? "#" : t.website,
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.logo.url
                },
                style: {
                    height: t.logo.height,
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.logoComputed
                }
            }), e("span", {
                class: {
                    hide: t.logo.url
                }
            }, [e("span", {
                staticClass: "brand"
            }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform))])]) : t._e(), t.aspinDesign ? e("div", {
                staticClass: "tabs"
            }, [e("a", {
                class: {
                    "is-active": t.modals.login
                },
                attrs: {
                    href: "/"
                }
            }, [t._v("Login")]), e("a", {
                class: {
                    "is-active": t.modals.register
                },
                attrs: {
                    href: "/register"
                }
            }, [t._v("Register")])]) : t._e(), t.aspinDesign ? t._e() : e("div", {
                staticClass: "title"
            }, [t.newDesign ? e("i", {
                staticClass: "material-icons"
            }, [t._v("edit")]) : t._e(), e("span", [t._v(t._s(t.tokens.registerModal.createNewAccount.toUpperCase()))]), t.newDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("lock")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.email))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? "Email Address" : ""),
                    tabindex: "1",
                    name: "login"
                },
                domProps: {
                    value: t.email
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/email.png",
                    alt: ""
                }
            })]) : t._e()]), t.newDesign ? e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.loginModal.fullName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.fullname,
                    expression: "fullname"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? "Full Name" : ""),
                    tabindex: "2"
                },
                domProps: {
                    value: t.fullname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.fullname = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/name.png",
                    alt: ""
                }
            })]) : t._e()]) : t._e(), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.firstName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.firstname,
                    expression: "firstname"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "3"
                },
                domProps: {
                    value: t.firstname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.firstname = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row input",
                class: {
                    "form-icon": t.newDesign
                }
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.country))]), t.newDesign ? e("i", {
                staticClass: "material-icons select"
            }, [t._v("arrow_drop_down")]) : t._e(), e("div", {
                staticClass: "search-item"
            }, [e("button", {
                staticClass: "search-country",
                on: {
                    click: function(e) {
                        e.preventDefault(),
                            t.countrySearchList = !t.countrySearchList
                    }
                }
            }, [t._v(" " + t._s(t.country ? t.country : t.tokens.registerModal.country) + " ")]), t.countrySearchList ? e("div", {
                staticClass: "country-list"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.searchedCountry,
                    expression: "searchedCountry"
                }],
                staticClass: "search-list newDesign",
                attrs: {
                    placeholder: "Search..."
                },
                domProps: {
                    value: t.searchedCountry
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.searchedCountry = e.target.value)
                    }
                }
            }), e("div", {
                staticClass: "country-items"
            }, t._l(t.countries, (function(s, a) {
                    return e("p", {
                        key: a,
                        class: {
                            active: s == t.country
                        },
                        on: {
                            click: function(e) {
                                return t.chooseCountry(s)
                            }
                        }
                    }, [t._v(" " + t._s(s) + " ")])
                }
            )), 0)]) : t._e()])]), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row"
            }, [e("label", [t._v(t._s(t.tokens.loginModal.promo))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.manager_id) ? t._i(t.manager_id, null) > -1 : t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.manager_id
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.manager_id = s.concat([o])) : n > -1 && (t.manager_id = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.manager_id = i
                    }
                }
            }) : "radio" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.manager_id, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.manager_id = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: t.password1Visible ? "text" : "password"
                },
                domProps: {
                    value: t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.manager_id = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    },
                    mousedown: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    }
                }
            }, [t._v(t._s(t.passwordVisible ? "visibility" : "visibility_off"))])])])]), e("div", {
                staticClass: "col"
            }, [t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.phone))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.phone,
                    expression: "phone"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "2"
                },
                domProps: {
                    value: t.phone
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.phone = e.target.value)
                    }
                }
            })]), t.newDesign && !t.aspinDesign ? e("label", [t._v(t._s(t.tokens.registerModal.phone))]) : t._e(), t.newDesign ? e("div", {
                staticClass: "form-row form-icon input"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.phone,
                    expression: "phone"
                }],
                staticClass: "form-control phone",
                attrs: {
                    tabindex: "4"
                },
                domProps: {
                    value: t.phone
                },
                on: {
                    keyup: [t.filPhoneNumber, function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    }
                    ],
                    input: function(e) {
                        e.target.composing || (t.phone = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/phone.png",
                    alt: ""
                }
            })]) : t._e(), t.aspinDesign ? t._e() : e("span", {
                staticClass: "flag small-flag phone-flag",
                class: "flag-" + t.flag
            })]) : t._e(), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.lastName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.lastname,
                    expression: "lastname"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "4"
                },
                domProps: {
                    value: t.lastname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.lastname = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.password))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password) ? t._i(t.password, null) > -1 : t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.password
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password = s.concat([o])) : n > -1 && (t.password = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password = i
                    }
                }
            }) : "radio" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.password = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: t.password1Visible ? "text" : "password"
                },
                domProps: {
                    value: t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.password = e.target.value)
                    }
                }
            }), t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password1Visible = !t.password1Visible
                    },
                    mousedown: function(e) {
                        t.password1Visible = !t.password1Visible
                    }
                }
            }, [t._v(t._s(t.password1Visible ? "visibility" : "visibility_off"))])]), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("i", {
                staticClass: "material-icons",
                staticStyle: {
                    color: "#fff"
                },
                on: {
                    touchstart: function(e) {
                        t.password1Visible = !t.password1Visible
                    },
                    mousedown: function(e) {
                        t.password1Visible = !t.password1Visible
                    }
                }
            }, [t._v(t._s(t.password1Visible ? "visibility" : "visibility_off"))])]) : t._e()]), t.aspinDesign ? e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.password))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password2Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password2) ? t._i(t.password2, null) > -1 : t.password2
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.password2
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password2 = s.concat([o])) : n > -1 && (t.password2 = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password2 = i
                    }
                }
            }) : "radio" === (t.password2Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password2, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.password2 = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: t.password2Visible ? "text" : "password"
                },
                domProps: {
                    value: t.password2
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.password2 = e.target.value)
                    }
                }
            }), t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password2Visible = !t.password2Visible
                    },
                    mousedown: function(e) {
                        t.password2Visible = !t.password2Visible
                    }
                }
            }, [t._v(t._s(t.password2Visible ? "visibility" : "visibility_off"))])]), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("i", {
                staticClass: "material-icons",
                staticStyle: {
                    color: "#fff"
                },
                on: {
                    touchstart: function(e) {
                        t.password2Visible = !t.password2Visible
                    },
                    mousedown: function(e) {
                        t.password2Visible = !t.password2Visible
                    }
                }
            }, [t._v(t._s(t.password2Visible ? "visibility" : "visibility_off"))])]) : t._e()]) : t._e(), t.aspinDesign ? e("label", {
                staticClass: "currency"
            }, [t._v(t._s(t.tokens.registerModal.currency))]) : t._e(), e("div", {
                staticClass: "form-row input",
                class: {
                    "form-icon": t.newDesign
                }
            }, [t.newDesign ? e("i", {
                staticClass: "material-icons select"
            }, [t._v("arrow_drop_down")]) : t._e(), t.newDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `currencies/${t.currencyChosen}.png`
                }
            }) : t._e(), t.aspinDesign ? t._e() : e("label", {
                staticClass: "currency"
            }, [t._v(t._s(t.tokens.registerModal.currency))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.currencyChosen,
                    expression: "currencyChosen"
                }],
                staticClass: "form-control",
                class: {
                    "form-image": t.newDesign
                },
                attrs: {
                    tabindex: "7"
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.currencyChosen = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.currencies, (function(s, a) {
                    return e("option", {
                        key: a,
                        domProps: {
                            value: s
                        }
                    }, [t._v(t._s(s) + " ")])
                }
            )), 0)]), t.existPromo ? e("div", {
                staticClass: "form-row input"
            }, [t.existPromo || t.aspinDesign ? t._e() : e("label", {
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !0
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.havePromo))]), t.existPromo && !t.aspinDesign ? e("label", [t._v(t._s(t.tokens.loginModal.promo))]) : t._e(), e("div", {
                staticClass: "show-hide-password"
            }, [t.existPromo ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "promo",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    tabindex: "7",
                    placeholder: "" + t.tokens.loginModal.promo
                },
                domProps: {
                    value: t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.manager_id = e.target.value)
                    }
                }
            }) : t._e()]), e("label", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.existPromo,
                    expression: "existPromo"
                }],
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !1
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.hide))])]) : t._e()])]), e("div", {
                staticClass: "form-row",
                class: {
                    textCenter: t.newDesign
                }
            }, [e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.register
                }
            }, [t._v(" " + t._s(t.tokens.registerModal.createAccount.toUpperCase()) + " ")]), t.newDesign ? e("div", {
                staticClass: "form-login"
            }, [e("p", [t._v(t._s(t.tokens.loginModal.haveAccount)), e("a", {
                attrs: {
                    href: "/"
                }
            }, [t._v(t._s(t.tokens.loginModal.login))])])]) : t._e(), e("label", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.existPromo || t.aspinDesign,
                    expression: "!existPromo || aspinDesign"
                }],
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !0
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.havePromo))]), t.privacyAndPolicyLink ? e("div", {
                staticClass: "form-login"
            }, [e("p", [e("a", {
                attrs: {
                    href: t.privacyAndPolicyLink
                }
            }, [t._v(t._s(t.tokens.registerModal.privacyAndPolicy))])])]) : t._e(), t.customerAgreementLink ? e("div", {
                staticClass: "form-login customer-agreement"
            }, [e("p", [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.customerAgreementLinkCheckbox,
                    expression: "customerAgreementLinkCheckbox"
                }],
                attrs: {
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.customerAgreementLinkCheckbox) ? t._i(t.customerAgreementLinkCheckbox, null) > -1 : t.customerAgreementLinkCheckbox
                },
                on: {
                    change: function(e) {
                        var s = t.customerAgreementLinkCheckbox
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.customerAgreementLinkCheckbox = s.concat([o])) : n > -1 && (t.customerAgreementLinkCheckbox = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.customerAgreementLinkCheckbox = i
                    }
                }
            }), e("a", {
                attrs: {
                    href: t.customerAgreementLink,
                    download: "",
                    target: "_blank"
                }
            }, [t._v(t._s(t.tokens.registerModal.customerAgreement))])])]) : t._e()])])])])
        }
            , Yo = []
            , Zo = {
            name: "RegisterModal",
            mounted() {
                this.newDesign && (this.$set(this, "phone", "+44"),
                    this.$set(this, "flag", "gb"))
            },
            data() {
                return {
                    newDesign: pt["kb"],
                    firstname: "",
                    lastname: "",
                    fullname: "",
                    country: "",
                    email: "",
                    password: "",
                    passwordVisible: !1,
                    password2: "",
                    password2Visible: !1,
                    password1Visible: !1,
                    manager_id: "",
                    existPromo: !1,
                    role: pt["wb"],
                    currencyChosen: "USD",
                    phone: "",
                    flag: "",
                    countrySearchList: !1,
                    searchedCountry: "",
                    aspinDesign: pt["b"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    logo: pt["ab"],
                    logoRedirectOff: pt["bb"],
                    hideLogo: pt["Q"],
                    privacyAndPolicyLink: pt["pb"],
                    customerAgreementLink: pt["B"],
                    customerAgreementLinkCheckbox: !1
                }
            },
            methods: {
                showPass: l["n"],
                hidePass: l["g"],
                filPhoneNumber() {
                    "" === this.phone && this.newDesign && (this.phone += "+")
                },
                chooseCountry(t) {
                    this.country = t,
                        this.setPhone(t),
                        this.countrySearchList = !1
                },
                setPhone(t) {
                    if (this.newDesign) {
                        let e = Object(l["d"])(t);
                        e && (this.$set(this, "phone", e[1]),
                            this.$set(this, "flag", e[2].toLowerCase()))
                    }
                },
                convertFullName(t) {
                    let e = t.split(" ");
                    this.lastname = e.pop(),
                        this.firstname = e.join(" ")
                },
                register() {
                    if (!this.customerAgreementLinkCheckbox && this.customerAgreementLink)
                        return void this.$store.commit(n["V"], "Please confirm customer agreement");
                    if (!this.email)
                        return void this.$store.commit(n["V"], "INVALID_EMAIL");
                    if (!this.phone)
                        return void this.$store.commit(n["V"], "INVALID_PHONE");
                    this.newDesign && this.convertFullName(this.fullname);
                    let t = parseInt(this.manager_id);
                    (isNaN(t) || t <= 0) && (t = 0),
                    t && (this.role = 1),
                        this.$store.dispatch(r["N"], {
                            firstname: this.firstname,
                            lastname: this.lastname,
                            country: this.country,
                            phone: this.phone,
                            email: this.email.trim(),
                            currency: this.currencyChosen,
                            password: this.password.trim(),
                            manager_id: t,
                            role: this.role
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "currencies", "staticBase"]),
                countries() {
                    return Object.values(Object(l["b"])()).filter(t => t.toLowerCase().indexOf(this.searchedCountry.toLowerCase()) > -1)
                },
                logoComputed() {
                    return "Light" === this.tradingViewTheme ? this.logo.url.replace(/white/, "black") : this.logo.url
                }
            }
        }
            , Jo = Zo
            , Ko = (s("eb30"),
            y(Jo, Go, Yo, !1, null, "5c0049b1", null))
            , Xo = Ko.exports
            , Qo = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "toasts-container"
            }, t._l(t.displayNotifications, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "toast"
                    }, [e("div", {
                        staticClass: "icon"
                    }, ["order" === s.type || "order_open" === s.type ? e("span", {
                        staticClass: "symbol",
                        class: "symbol-" + s.data.symbol.toUpperCase()
                    }) : t._e(), e("i", {
                        staticClass: "material-icons",
                        class: s.classes
                    }, [t._v(t._s(s.icon))])]), e("div", {
                        staticClass: "content",
                        class: {
                            support: "support" === s.type
                        },
                        on: {
                            click: function(e) {
                                "support" === s.type && t.showCabinetPage("support")
                            }
                        }
                    }, [e("div", {
                        staticClass: "title"
                    }, [t._v(t._s(s.title))]), e("div", {
                        staticClass: "text",
                        class: s.textClass
                    }, [e("span", {
                        staticClass: "profit",
                        class: {
                            hide: "order" !== s.type && "transaction" !== s.type
                        }
                    }, [t._v(t._s(s.profitText))]), e("span", [t._v(t._s(s.text))])])]), e("i", {
                        staticClass: "material-icons close",
                        on: {
                            click: function(e) {
                                return t.hideNotification(s.id)
                            }
                        }
                    }, [t._v("close")])])
                }
            )), 0)
        }
            , tn = []
            , en = {
            name: "Notifications",
            methods: {
                showCabinetPage(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                hideNotification(t) {
                    this.$store.commit(n["Y"], t)
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["notifications", "symbols", "activeAccount", "tokens", "staticBase"]),
                displayNotifications() {
                    let t = JSON.parse(JSON.stringify(this.notifications));
                    for (let e in t)
                        switch (t[e].type) {
                            case "order":
                                t[e].title = this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].alias : "",
                                    t[e].textClass = t[e].data.profit > 0 ? "green" : t[e].data.profit < 0 ? "red" : "",
                                    t[e].profitText = (t[e].data.profit > 0 ? "+" : 0 > t[e].data.profit ? "-" : "") + Object(l["e"])(this.activeAccount.currency) + Math.abs(t[e].data.profit).toFixed(this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].precision : 2),
                                    t[e].text = (t[e].data.profit > 0 ? "+" : 0 > t[e].data.profit ? "-" : "") + (100 * Math.abs(t[e].data.price_close - t[e].data.price_open) / t[e].data.price_open).toFixed(2) + "%",
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        hide: !0
                                    };
                                break;
                            case "order_open":
                                t[e].title = this.tokens.orderTypes[t[e].data.type] + " " + (this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].alias : ""),
                                    t[e].textClass = t[e].data.type % 2 ? "red" : "green",
                                    t[e].profitText = "",
                                    t[e].text = Number(t[e].data.volume.toFixed(4)) + " " + t[e].data.symbol + " @ " + t[e].data.price_open.toFixed(this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].precision : 2),
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        hide: !0
                                    };
                                break;
                            case "success":
                                t[e].title = this.tokens.notifications.success,
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].text = this.tokens.errors[t[e].text] || t[e].text,
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        green: !0
                                    };
                                break;
                            case "error":
                                t[e].title = this.tokens.notifications.error,
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].text = this.tokens.errors[t[e].text] || t[e].text,
                                    t[e].icon = "report_problem",
                                    t[e].classes = {
                                        brand: !0
                                    };
                                break;
                            case "support":
                                t[e].title = "",
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].icon = "mail",
                                    t[e].classes = {
                                        green: !0
                                    };
                                break;
                            case "transaction":
                                t[e].title = this.tokens.notifications[1 === t[e].data.type ? "deposit" : "withdrawal"] + " #" + t[e].data.id,
                                    t[e].text = this.tokens.notifications[(1 === t[e].data.type ? "deposit" : "withdrawal") + (1 === t[e].data.status ? "Approved" : "Declined")],
                                    t[e].textClass = "",
                                    t[e].profitText = 1 === t[e].data.status ? (t[e].data.amount > 0 ? "+" : "-") + Object(l["e"])(t[e].data.currency) + Math.abs(t[e].data.amount).toLocaleString(void 0, {
                                        minimumFractionDigits: this.activeAccount.precision,
                                        maximumFractionDigits: this.activeAccount.precision
                                    }) : "",
                                    t[e].icon = 1 === t[e].data.status ? "check_circle" : "cancel",
                                    t[e].classes = {
                                        green: 1 === t[e].data.status,
                                        red: 2 === t[e].data.status
                                    };
                                break
                        }
                    return t
                }
            }
        }
            , sn = en
            , an = (s("1cbc"),
            y(sn, Qo, tn, !1, null, "430c4a90", null))
            , on = an.exports
            , nn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "cabinet-modal",
                class: {
                    hide: !t.modals.assetsInfo
                }
            }, [t.modals.assetsInfo ? e("div", [e("div", {
                staticClass: "background"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + `backgrounds/${t.symbols[t.modalAssetsInfo.symbol].symbol.toUpperCase()}.jpg`,
                    alt: ""
                }
            })]), e("div", {
                staticClass: "title"
            }, [e("div", {
                staticClass: "close",
                on: {
                    click: t.hideModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close")])]), e("div", {
                staticClass: "name"
            }, [t._v(t._s(t.tokens.assetInfoModal.assetInfo))])]), e("div", {
                staticClass: "container"
            }, [e("div", {
                staticClass: "divider nomobile"
            }), e("div", {
                staticClass: "menu"
            }, [e("div", {
                staticClass: "box"
            }, [e("div", {
                staticClass: "info-brand"
            }, [e("span", {
                staticClass: "symbol",
                class: t.assetSymbol()
            }), e("div", [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].alias))])]), e("div", {
                staticClass: "state"
            }, [e("div", {
                staticClass: "open-trade"
            }, [t._v(t._s(t.sessionState))])])]), e("div", {
                staticClass: "back"
            }, [e("div", {
                staticClass: "item",
                class: {
                    active: "trading" === t.page
                },
                on: {
                    click: function(e) {
                        t.page = "trading"
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.tradingConditions))]), e("div", [e("div", {
                staticClass: "item",
                class: {
                    active: "information" === t.page
                },
                on: {
                    click: function(e) {
                        t.page = "information"
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.information))])])])]), e("div", {
                staticClass: "content"
            }, [t.sessionStateBool ? e("div", [e("div", {
                staticClass: "trade"
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.bid))]), e("div", {
                staticClass: "values"
            }, [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].quote.bid.toFixed(t.symbols[t.modalAssetsInfo.symbol].precision)) + " ")])]), e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.ask))]), e("div", {
                staticClass: "values"
            }, [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].quote.ask.toFixed(t.symbols[t.modalAssetsInfo.symbol].precision)) + " ")])]), e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.sessionChange))]), e("div", {
                staticClass: "cur",
                class: t.symbols[t.modalAssetsInfo.symbol].quote ? t.symbols[t.modalAssetsInfo.symbol].quote.changePct < 0 ? "red" : 0 < t.symbols[t.modalAssetsInfo.symbol].quote.changePct ? "green" : "" : ""
            }, [t._v(" " + t._s((t.symbols[t.modalAssetsInfo.symbol].quote && t.symbols[t.modalAssetsInfo.symbol].quote.changePct > 0 ? "+" : "") + (t.symbols[t.modalAssetsInfo.symbol].quote && t.symbols[t.modalAssetsInfo.symbol].quote.changePct ? t.symbols[t.modalAssetsInfo.symbol].quote.changePct : 0).toFixed(2) + "%") + " ")])])]), e("div", {
                staticClass: "btns-wrapper"
            }, [e("div", {
                staticClass: "btns"
            }, [e("i", {
                staticClass: "material-icons fav",
                class: {
                    active: -1 !== t.symbolsFavorite.indexOf(t.modalAssetsInfo.symbol)
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleFavorite(t.modalAssetsInfo.symbol)
                    }
                }
            }, [t._v("star")]), e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.changeSymbol(t.modalAssetsInfo.symbol)
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.tradeNow.toUpperCase()))])])])])]) : t._e(), e("div", [e("Information", {
                staticClass: "cabinet-item",
                class: {
                    hide: "information" !== t.page
                },
                attrs: {
                    chart: t.charts,
                    symbolActive: t.modalAssetsInfo.symbol
                }
            })], 1), e("TradingConditions", {
                staticClass: "cabinet-item",
                class: {
                    hide: "trading" !== t.page
                },
                attrs: {
                    symbolActive: t.modalAssetsInfo.symbol
                }
            })], 1), e("div", {
                staticClass: "divider nomobile"
            })])]) : t._e()])
        }
            , rn = []
            , ln = (s("33d1"),
                s("ea98"),
                function() {
                    var t = this
                        , e = t._self._c;
                    return e("div", {
                        staticClass: "inner"
                    }, [e("div", {
                        staticClass: "hold"
                    }, [e("div", {
                        staticClass: "left"
                    }), e("div", {
                        staticClass: "grid-item meter"
                    }, [e("div", {
                        staticClass: "sell"
                    }, [e("div", {
                        staticClass: "word"
                    }, [t._v(t._s(t.tokens.assetInfoModal.sell))]), e("div", {
                        staticClass: "percent"
                    }, [t._v(t._s((100 - t.trend).toFixed(1) + "%"))])]), e("div", {
                        staticClass: "line"
                    }, [e("div", {
                        staticClass: "green",
                        style: `width: ${t.trend}%`
                    }), e("div", {
                        staticClass: "red"
                    })]), e("div", {
                        staticClass: "buy"
                    }, [e("div", {
                        staticClass: "word"
                    }, [t._v(t._s(t.tokens.assetInfoModal.buy))]), e("div", {
                        staticClass: "percent"
                    }, [t._v(t._s(t.trend.toFixed(1) + "%"))])])])]), e("div", {
                        staticClass: "stat"
                    }, [e("div", {
                        staticClass: "left"
                    }, [e("div", {
                        staticClass: "box",
                        class: {
                            active: "60 min" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("60 min", 0)
                            }
                        }
                    }, [e("div", {
                        staticClass: "change"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.oneHourChange))]), e("div", {
                        staticClass: "candle",
                        class: t.changePrice[0] < 0 ? "red" : t.changePrice[0] > 0 ? "green" : ""
                    }, [t._v(" " + t._s(t.changePrice[0] + "%") + " ")])]), e("div", {
                        staticClass: "info"
                    }, [e("div", {
                        staticClass: "title"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.low))]), e("div", [t._v(t._s(t.tokens.assetInfoModal.high))])]), e("div", {
                        staticClass: "line"
                    }, [e("div", {
                        style: `left: ${t.change[0]}%`
                    })]), e("div", {
                        staticClass: "info-price"
                    }, [e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[0].low))]), e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[0].high))])])])]), e("div", {
                        staticClass: "box",
                        class: {
                            active: "1 day" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("1 day", 1)
                            }
                        }
                    }, [e("div", {
                        staticClass: "change"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.oneDayChange))]), e("div", {
                        staticClass: "candle",
                        class: t.changePrice[1] < 0 ? "red" : t.changePrice[1] > 0 ? "green" : ""
                    }, [t._v(" " + t._s(isFinite(t.changePrice[1]) ? t.changePrice[1] + "%" : t.tokens.assetInfoModal.loading) + " ")])]), e("div", {
                        staticClass: "info"
                    }, [e("div", {
                        staticClass: "title"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.low))]), e("div", [t._v(t._s(t.tokens.assetInfoModal.high))])]), e("div", {
                        staticClass: "line"
                    }, [e("div", {
                        style: `left: ${t.change[1]}%`
                    })]), e("div", {
                        staticClass: "info-price"
                    }, [e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[1].low))]), e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[1].high))])])])]), e("div", {
                        staticClass: "box",
                        class: {
                            active: "1 week" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("1 week", 2)
                            }
                        }
                    }, [e("div", {
                        staticClass: "change"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.oneWeekChange))]), e("div", {
                        staticClass: "candle",
                        class: t.changePrice[2] < 0 ? "red" : t.changePrice[2] > 0 ? "green" : ""
                    }, [t._v(" " + t._s(isFinite(t.changePrice[2]) ? t.changePrice[2] + "%" : t.tokens.assetInfoModal.loading) + " ")])]), e("div", {
                        staticClass: "info"
                    }, [e("div", {
                        staticClass: "title"
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.low))]), e("div", [t._v(t._s(t.tokens.assetInfoModal.high))])]), e("div", {
                        staticClass: "line"
                    }, [e("div", {
                        style: `left: ${t.change[2]}%`
                    })]), e("div", {
                        staticClass: "info-price"
                    }, [e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[2].low))]), e("div", {
                        staticClass: "price"
                    }, [t._v(t._s(t.newCandleData[2].high))])])])])]), e("div", {
                        staticClass: "right"
                    }, [e("div", {
                        staticClass: "graphics"
                    }, [e("highcharts", {
                        attrs: {
                            options: t.chartOptions
                        }
                    })], 1)])]), e("div", {
                        staticClass: "bottom"
                    }, [e("div", {
                        staticClass: "more",
                        class: {
                            active: "1 month" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("1 month", 3)
                            }
                        }
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.oneMonthChange))]), e("div", {
                        staticClass: "candle"
                    }, [t._v(t._s(isFinite(t.changePrice[3]) ? t.changePrice[3] + "%" : t.tokens.assetInfoModal.loading) + " ")])]), e("div", {
                        staticClass: "more",
                        class: {
                            active: "3 months" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("3 months", 4)
                            }
                        }
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.threeMonthsChange))]), e("div", {
                        staticClass: "candle"
                    }, [t._v(t._s(isFinite(t.changePrice[4]) ? t.changePrice[4] + "%" : t.tokens.assetInfoModal.loading) + " ")])]), e("div", {
                        staticClass: "more",
                        class: {
                            active: "1 year" === t.candle
                        },
                        on: {
                            click: function(e) {
                                return t.candleChange("1 year", 5)
                            }
                        }
                    }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.oneYearChange))]), e("div", {
                        staticClass: "candle"
                    }, [t._v(t._s(isFinite(t.changePrice[5]) ? t.changePrice[5] + "%" : t.tokens.assetInfoModal.loading) + " ")])])])])
                }
        )
            , cn = []
            , dn = {
            name: "Information",
            props: ["symbolActive"],
            mounted() {
                for (let t = 0; t < this.candleDataTime.length; t++)
                    (t => {
                            qs["a"].get("/quotes/" + this.symbolActive + "/history", {
                                frame: 60 * this.candleDataTime[t],
                                count: this.candleDataCount[t],
                                offset: 0,
                                group: this.symbols[this.symbolActive].group
                            }).then(e => {
                                    this.data = [];
                                    for (let i = 0; i < this.candleDataCount[t]; i++) {
                                        if (void 0 === e[i])
                                            break;
                                        this.data[i] = e[i][3]
                                    }
                                    let s = Math.min.apply(null, this.data)
                                        , a = Math.max.apply(null, this.data);
                                    this.newCandleData[t].newData = this.data,
                                        this.newCandleData[t].low = s,
                                        this.newCandleData[t].high = a,
                                        this.chartOptions.series[0].data = this.newCandleData[0].newData,
                                        this.chartOptions.yAxis.min = this.newCandleData[0].low,
                                        this.chartOptions.yAxis.max = this.newCandleData[0].high
                                }
                            )
                        }
                    )(t)
            },
            data() {
                return {
                    load: !1,
                    candle: "60 min",
                    candleTime: 0,
                    data: [],
                    candleDataTime: [1, 30, 240, 1440, 60, 1440],
                    candleDataCount: [59, 47, 41, 29, 89, 51],
                    newCandleData: [{
                        newData: [],
                        low: 0,
                        high: 0
                    }, {
                        newData: [],
                        low: 0,
                        high: 0
                    }, {
                        newData: [],
                        low: 0,
                        high: 0
                    }, {
                        newData: [],
                        low: 0,
                        high: 0
                    }, {
                        newData: [],
                        low: 0,
                        high: 0
                    }, {
                        newData: [],
                        low: 0,
                        high: 0
                    }],
                    chartOptions: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            height: 244.5,
                            maxWidth: 500,
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "#1d98f9"], [1, "rgba(24,31,45,0.5)"]]
                                }
                            }
                        },
                        legend: !1,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        innerSize: "60%",
                        enableMouseTracking: !0,
                        tooltip: {
                            enabled: !1
                        },
                        series: [{
                            name: "60 min",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "transparent",
                                states: {
                                    hover: {
                                        enabled: !1
                                    }
                                }
                            }
                        }]
                    }
                }
            },
            methods: {
                candleChange(t, e) {
                    this.candle = t,
                        this.candleTime = e
                }
            },
            computed: {
                trend() {
                    return this.symbolActive ? this.symbols[this.symbolActive].quote.trend : 50
                },
                angle() {
                    return 1.8 * this.trend - 90
                },
                changePrice() {
                    let t = [];
                    for (let e = 0; e < 6; e++) {
                        let s = (this.symbols[this.symbolActive].quote.bid - this.newCandleData[e].newData[1]) / this.newCandleData[e].newData[1] * 100;
                        t.push(s > 0 ? "+" + s.toFixed(2) : s.toFixed(2))
                    }
                    return t
                },
                change() {
                    let t = [];
                    for (let e = 0; e < 6; e++) {
                        let s = (this.symbols[this.symbolActive].quote.bid - this.newCandleData[e].low) / (this.newCandleData[e].high - this.newCandleData[e].low) * 100;
                        s >= 100 ? t.push(98) : s <= 0 ? t.push(2) : t.push(s || 2)
                    }
                    return t
                },
                ...Object(o["b"])(["symbols", "themeColors", "modalAssetsInfo", "tokens"])
            },
            watch: {
                themeColors(t) {
                    this.chartOptions.series[0].color = t["brand"]
                },
                candleTime(t) {
                    this.chartOptions.series[0].name = this.candle,
                        this.chartOptions.series[0].data = this.newCandleData[t].newData,
                        this.chartOptions.yAxis.min = this.newCandleData[t].low,
                        this.chartOptions.yAxis.max = this.newCandleData[t].high
                }
            }
        }
            , un = dn
            , mn = (s("f985"),
            y(un, ln, cn, !1, null, "df2272ee", null))
            , pn = mn.exports
            , hn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "inner"
            }, [e("div", {
                staticClass: "specification"
            }, [e("div", {
                staticClass: "list"
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "specification-title"
            }, [t._v(t._s(t.tokens.assetInfoModal.contractSpecification))]), e("ul", [e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.symbol))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].symbol))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.name))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].alias))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.market))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].group.charAt(0).toUpperCase() + t.symbols[t.symbolActive].group.slice(1)))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.baseCurrency))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].base_currency))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.digits))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].precision))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.lotSize))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].lot.toLocaleString(void 0)))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.lotStep))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].lot_step))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.minVolume))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].volume_min.toLocaleString(void 0)))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.maxVolume))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].volume_max.toLocaleString(void 0)))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.leverage))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].leverage_default ? "1:" + t.symbols[t.symbolActive].leverage_default : "account"))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.commission))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].commission.toFixed(1) + "%"))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.swapLong))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].swap_long.toFixed(1) + "%"))])]), e("li", [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.assetInfoModal.swapShort))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.symbols[t.symbolActive].swap_short.toFixed(1) + "%"))])])])]), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "specification-title"
            }, [t._v(t._s(t.tokens.assetInfoModal.schedule))]), e("div", {
                staticClass: "trading"
            }, [e("div", {
                staticClass: "header"
            }, [e("div", [t._v(t._s(t.tokens.assetInfoModal.weekday))]), e("div", [t._v(t._s(t.tokens.assetInfoModal.tradingTime))])]), t._l(t.tradingSessions, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "day"
                    }, [e("div", [t._v(t._s(t.dayOfWeek[a]))]), e("div", [t._v(t._s(s))])])
                }
            ))], 2)])])])])
        }
            , vn = []
            , fn = {
            name: "TradingConditions",
            props: ["symbolActive", "chart"],
            computed: {
                ...Object(o["b"])(["symbols", "modalAssetsInfo", "sessions", "tokens"]),
                tradingSessions() {
                    const t = t => {
                            let e = [];
                            for (let s = 0; s < 7; s++)
                                e = e.concat(t[s]);
                            return e
                        }
                        , e = t => {
                            let e = [];
                            for (let s = 0; s < 7; s++)
                                e.push(t.slice(24 * s, 24 * (s + 1)));
                            return e
                        }
                    ;
                    let s = Math.floor((new Date).getTimezoneOffset() / 60)
                        , a = this.sessions[this.modalAssetsInfo.symbol];
                    a = t(a);
                    while (0 !== s)
                        s > 0 ? (a.push(a.shift()),
                            s--) : (a.unshift(a.pop()),
                            s++);
                    a = e(a);
                    const i = (t, e) => {
                            const s = t => {
                                    let e = Math.floor(t)
                                        , s = Math.round(60 * (t - e));
                                    return ("0" + e).slice(-2) + ":" + ("0" + s).slice(-2)
                                }
                            ;
                            return s(t) + " - " + s(e)
                        }
                    ;
                    let o = [];
                    for (let n = 0; n < 7; n++) {
                        let t = []
                            , e = a[n]
                            , s = null
                            , r = null
                            , l = !1;
                        for (let a = 0; a < 24; a++) {
                            let o = e[a]
                                , n = void 0 !== e[a + 1] ? e[a + 1] : 0;
                            o > 0 && !l && (s = a + (o < 1 ? o : 0),
                                l = !0),
                            l && (r = a + (o < 1 ? o : 1)),
                            (o > 0 && 0 === n || 23 === a && l) && (t.push(i(s, r)),
                                l = !1)
                        }
                        o.push(t.length ? t.join(", ") : this.tokens.assetInfoModal.closed)
                    }
                    return o
                },
                dayOfWeek() {
                    return [this.tokens.assetInfoModal.sunday, this.tokens.assetInfoModal.monday, this.tokens.assetInfoModal.tuesday, this.tokens.assetInfoModal.wednesday, this.tokens.assetInfoModal.thursday, this.tokens.assetInfoModal.friday, this.tokens.assetInfoModal.saturday]
                }
            }
        }
            , gn = fn
            , bn = (s("75b6"),
            y(gn, hn, vn, !1, null, "37080a1a", null))
            , yn = bn.exports
            , _n = {
            name: "AssetsInfoModal",
            components: {
                Information: pn,
                TradingConditions: yn
            },
            mounted() {
                let t = Date.now();
                setTimeout( () => {
                        setInterval( () => {
                                this.checkSessionState()
                            }
                            , 6e4)
                    }
                    , 6e4 * Math.ceil(t / 6e4) - t)
            },
            data() {
                return {
                    newData: [],
                    sessionState: "",
                    sessionStateBool: !1,
                    page: "trading",
                    brand: pt["e"]
                }
            },
            methods: {
                assetSymbol() {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + this.symbols[this.modalAssetsInfo.symbol].symbol.toUpperCase().replace(".", "-");
                    switch (this.symbols[this.modalAssetsInfo.symbol].symbol) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + this.symbols[this.modalAssetsInfo.symbol].symbol.toUpperCase().replace(".", "-")
                    }
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.modalAssetsInfo.chartActive
                    }),
                        this.$store.commit(n["F"], {
                            assetsInfo: !1
                        })
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        assetsInfo: !1
                    })
                },
                toggleFavorite(t) {
                    this.$store.commit(n["Fb"], {
                        action: -1 === this.symbolsFavorite.indexOf(t) ? "add" : "remove",
                        symbol: t
                    })
                },
                checkSessionState() {
                    if (!this.symbols[this.modalAssetsInfo.symbol])
                        return;
                    if ("[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]" === JSON.stringify(this.symbols[this.modalAssetsInfo.symbol].sessions))
                        return this.sessionState = this.tokens.assetInfoModal.open247,
                            void (this.sessionStateBool = !0);
                    let t = Object(l["f"])()
                        , e = t.getUTCDay()
                        , s = t.getUTCHours()
                        , a = t.getUTCMinutes()
                        , i = this.symbols[this.modalAssetsInfo.symbol].sessions[e][s]
                        , o = s > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e][s - 1] : e > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e - 1][23] : this.symbols[this.modalAssetsInfo.symbol].sessions[6][23]
                        , n = s > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e][s + 1] : e > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e + 1][23] : this.symbols[this.modalAssetsInfo.symbol].sessions[6][23];
                    const r = t => {
                            let e = [];
                            for (let s = 0; s < 7; s++)
                                e = e.concat(t[s]);
                            return e
                        }
                        , c = t => t > 0 && t < 1 && 60 * t > a ? this.tokens.assetInfoModal.opens : t > 0 && t < 1 && 60 * t < a || t ? this.tokens.assetInfoModal.closes : this.tokens.assetInfoModal.opens
                        , d = t => {
                            let e = Object(l["f"])()
                                , s = ""
                                , a = t.getDay()
                                , i = e.getDay();
                            if (a === i)
                                s = this.tokens.assetInfoModal.today;
                            else if (a - i === 1 || a - i === -6)
                                s = this.tokens.assetInfoModal.tomorrow;
                            else
                                switch (a) {
                                    case 0:
                                        s = this.tokens.assetInfoModal.sunday;
                                        break;
                                    case 1:
                                        s = this.tokens.assetInfoModal.monday;
                                        break;
                                    case 2:
                                        s = this.tokens.assetInfoModal.tuesday;
                                        break;
                                    case 3:
                                        s = this.tokens.assetInfoModal.wednesday;
                                        break;
                                    case 4:
                                        s = this.tokens.assetInfoModal.thursday;
                                        break;
                                    case 5:
                                        s = this.tokens.assetInfoModal.friday;
                                        break;
                                    case 6:
                                        s = this.tokens.assetInfoModal.saturday;
                                        break
                                }
                            return s + " " + this.tokens.assetInfoModal.at + " " + ("0" + t.getHours()).slice(-2) + ":" + ("0" + t.getMinutes()).slice(-2)
                        }
                    ;
                    if (1 !== i && 0 !== i && a < 60 * i || 0 !== n && 1 !== n)
                        t.setUTCHours(0 === i ? ++s : s),
                            t.setUTCMinutes(0 === i ? 60 * n : 60 * i),
                            this.sessionState = ((0 === i ? 60 * i : 60 * n < a ? !o : o) ? this.tokens.assetInfoModal.closes : this.tokens.assetInfoModal.opens) + " " + d(t),
                            this.sessionStateBool = !!(0 === i ? 60 * i : 60 * n < a ? !o : o);
                    else {
                        let a = 24 * e + s
                            , i = 1
                            , o = r(this.symbols[this.modalAssetsInfo.symbol].sessions)
                            , n = o[a]
                            , l = o[a]
                            , u = !1
                            , m = l ? 0 : 1
                            , p = 0;
                        while (a < 168 && (l !== m || l > m) && p < 200)
                            a++,
                                p++,
                                l = o[a],
                                -1 !== [0, 1].indexOf(o[a]) || u ? i += 1 : (i += o[a],
                                    u = !0),
                            a >= 168 && (a = 0,
                                e = 0,
                                s = 0,
                                i = 0,
                                n = o[a],
                                l = o[a],
                                m = l ? 0 : 1);
                        t.setUTCHours(s + Math.floor(i - 1)),
                            t.setUTCMinutes(Math.round(60 * (i - Math.floor(i)))),
                            this.sessionState = c(n) + " " + d(t),
                            this.sessionStateBool = !!n
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalAssetsInfo", "symbols", "symbolsFavorite", "charts", "modals", "tokens", "staticBase"])
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.modalAssetsInfo || (this.page = "trading")
                    }
                },
                modalAssetsInfo: {
                    deep: !0,
                    handler() {
                        this.checkSessionState()
                    }
                }
            }
        }
            , Cn = _n
            , wn = (s("e13b"),
            y(Cn, nn, rn, !1, null, "dc2c0da4", null))
            , kn = wn.exports
            , Sn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.AlertMessageModal
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.varNames.ALERT_MESSAGE) + " ")]), e("button", {
                staticClass: "button",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])])])
        }
            , xn = []
            , Mn = {
            name: "AlertMessageModal",
            data() {
                return {
                    firstTimeShowed: !0
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        AlertMessageModal: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "variables"]),
                varNames() {
                    return this.variables
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.fullscreen && this.firstTimeShowed && (this.firstTimeShowed = !1,
                            this.$store.commit(n["F"], {
                                AlertMessageModal: !0
                            }))
                    }
                }
            }
        }
            , An = Mn
            , Dn = (s("3535"),
            y(An, Sn, xn, !1, null, "253a6c08", null))
            , Pn = Dn.exports
            , Tn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.newPassword
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.newPasswordModal.setNewPassword.toUpperCase()))]), e("i", {
                staticClass: "material-icons close pointer"
            }, [t._v("plus")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("div", {
                staticClass: "show-hide-password"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.newPassword,
                    expression: "newPassword"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    placeholder: t.tokens.newPasswordModal.newPassword
                },
                domProps: {
                    value: t.newPassword
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.newPassword = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        return t.showPass(t.$refs.password)
                    },
                    touchend: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    touchmove: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    mousedown: function(e) {
                        return t.showPass(t.$refs.password)
                    },
                    mouseup: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    dragover: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    mouseout: function(e) {
                        return t.hidePass(t.$refs.password)
                    }
                }
            }, [t._v("visibility")])])]), e("div", {
                staticClass: "form-row"
            }, [e("div", {
                staticClass: "show-hide-password"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.confirmedNewPassword,
                    expression: "confirmedNewPassword"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    placeholder: t.tokens.newPasswordModal.confirmNewPassword
                },
                domProps: {
                    value: t.confirmedNewPassword
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.confirmedNewPassword = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        return t.showPass(t.$refs.password2)
                    },
                    touchend: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    touchmove: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    mousedown: function(e) {
                        return t.showPass(t.$refs.password2)
                    },
                    mouseup: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    dragover: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    mouseout: function(e) {
                        return t.hidePass(t.$refs.password2)
                    }
                }
            }, [t._v("visibility")])])]), e("div", [e("div", {
                staticClass: "button",
                class: {
                    "green-button": t.newPassword === t.confirmedNewPassword
                },
                on: {
                    click: t.setNewPassword
                }
            }, [t._v(" " + t._s(t.tokens.newPasswordModal.setButton.toUpperCase()) + " ")])])])])])])
        }
            , Ln = []
            , In = {
            name: "NewPasswordModal",
            data() {
                return {
                    newPassword: "",
                    confirmedNewPassword: ""
                }
            },
            methods: {
                showPass: l["n"],
                hidePass: l["g"],
                setNewPassword() {
                    this.newPassword === this.confirmedNewPassword ? this.$store.dispatch(r["C"], {
                        password: this.newPassword
                    }) : this.$store.commit(n["V"], "LOCAL_PASSWORDS_NOT_MATCH")
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        newPassword: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            }
        }
            , Fn = In
            , On = (s("0d6d"),
            y(Fn, Tn, Ln, !1, null, "0bd57338", null))
            , Bn = On.exports
            , Nn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.account
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "block"
            }, [e("div", {
                staticClass: "name"
            }, [t._v(t._s(t.user.fullname))]), e("div", {
                staticClass: "email"
            }, [t._v(t._s(t.user.email))])]), e("div", {
                staticClass: "block"
            }, [e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "flag",
                class: "flag-" + t.countryToCode(t.user.country).toLowerCase()
            }), e("div", {
                staticClass: "country"
            }, [t._v(t._s(t.user.country))])]), e("div", {
                staticClass: "double"
            }, [e("div", [e("div", {
                staticClass: "label"
            }, [t._v(t._s(t.tokens.accountModal.dateRegistered))]), e("div", {
                staticClass: "val"
            }, [t._v(t._s(new Date(1e3 * t.user.created).toISOString().split("T")[0]))])]), e("div", [e("div", {
                staticClass: "label"
            }, [t._v(t._s(t.tokens.accountModal.userId))]), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.user.id))])])])])]), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("dashboard")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("dashboard")]), e("span", [t._v(t._s(t.tokens.accountModal.dashboard))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("personal")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("account_circle")]), e("span", [t._v(t._s(t.tokens.accountModal.personalData))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("deposit")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add_circle")]), e("span", [t._v(t._s(t.tokens.accountModal.deposit))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("withdrawal")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("monetization_on")]), e("span", [t._v(t._s(t.tokens.accountModal.withdrawFunds))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("savings")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("savings")]), e("span", [t._v(t._s(t.tokens.accountModal.savings))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("settings")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("settings")]), e("span", [t._v(t._s(t.tokens.accountModal.settings))])]), e("div", {
                staticClass: "border"
            }), e("div", {
                staticClass: "item",
                on: {
                    click: t.logout
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("exit_to_app")]), e("span", [t._v(t._s(t.tokens.accountModal.logout))])])])])])
        }
            , $n = []
            , Vn = {
            name: "AccountModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        account: !1
                    })
                },
                openFullscreen(t) {
                    this.$store.commit(n["L"], {
                        page: t
                    }),
                        this.$store.commit(n["F"], {
                            account: !1,
                            fullscreen: !0
                        })
                },
                logout() {
                    this.$store.dispatch(r["x"])
                },
                countryToCode: l["c"]
            },
            computed: {
                ...Object(o["b"])(["modals", "user", "tokens", "staticBase"])
            }
        }
            , En = Vn
            , Un = (s("d681"),
            y(En, Nn, $n, !1, null, "4296b950", null))
            , Hn = Un.exports
            , jn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.profitCalculator
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal ElevationDark__5",
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("BaseModalTitle", {
                attrs: {
                    title: "Profit calculator"
                },
                on: {
                    close: t.hideModal
                }
            })], 1), e("BaseModalTabs", {
                attrs: {
                    tabs: [t.tokens.profitCalculatorModal.buy, t.tokens.profitCalculatorModal.sell]
                },
                on: {
                    updateActiveTab: t.activeTabHandler
                }
            }), e("div", {
                staticClass: "inner"
            }, [e("div", {
                staticClass: "inner-inputs"
            }, [e("BaseInput", {
                attrs: {
                    placeholder: "0",
                    title: "Volume",
                    type: "number"
                },
                model: {
                    value: t.volume,
                    callback: function(e) {
                        t.volume = e
                    },
                    expression: "volume"
                }
            }), e("BaseInput", {
                attrs: {
                    placeholder: "0",
                    title: "Price",
                    type: "number"
                },
                model: {
                    value: t.entryPrice,
                    callback: function(e) {
                        t.entryPrice = e
                    },
                    expression: "entryPrice"
                }
            }), e("BaseInput", {
                attrs: {
                    placeholder: "0",
                    title: "Take Profit",
                    type: "number"
                },
                model: {
                    value: t.stopLoss,
                    callback: function(e) {
                        t.stopLoss = e
                    },
                    expression: "stopLoss"
                }
            }), e("BaseInput", {
                attrs: {
                    placeholder: "0",
                    title: "Stop Loss",
                    type: "number"
                },
                model: {
                    value: t.takeProfit,
                    callback: function(e) {
                        t.takeProfit = e
                    },
                    expression: "takeProfit"
                }
            })], 1), e("div", {
                staticClass: "max-position body__small"
            }, [t._v(" " + t._s(t.tokens.profitCalculatorModal.maxPosition) + ": " + t._s(Math.abs(Number(t.maxPosition.toFixed(2)))) + " " + t._s(t.symbol.alias) + " ")]), e("div", {
                staticClass: "actions"
            }, [e("div", {
                staticClass: "currency body__large"
            }, [e("div", {
                class: "symbol symbol-" + t.symbol.symbol
            }), e("span", [t._v(t._s(t.symbol.alias))])]), e("BaseButton", {
                attrs: {
                    "button-style": t.isInputsEmpty ? "filled-primary" : "on-surface",
                    "button-text": t.tokens.profitCalculatorModal.calculate,
                    disabled: !t.isInputsEmpty
                },
                nativeOn: {
                    click: function(e) {
                        return t.calculate.apply(null, arguments)
                    }
                }
            })], 1), e("ul", {
                staticClass: "results"
            }, [e("li", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: 1 == t.showLeverage,
                    expression: "showLeverage == 1"
                }],
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.leverage))]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v("1:" + t._s(t.results.leverage))])]), e("li", {
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.requiredMargin) + " ")]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v(t._s(t.results.margin) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])]), e("li", {
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.profitFromTP) + " ")]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v(t._s(t.results.profit) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])]), e("li", {
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.lossFromSL) + " ")]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v(t._s(Math.abs(t.results.loss)) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])]), e("li", {
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.roe))]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v(t._s(t.results.roe > 0 ? "+" : "") + t._s(t.results.roe.toFixed(2)) + " "), e("span", [t._v("%")])])]), e("li", {
                staticClass: "item"
            }, [e("h3", {
                staticClass: "item-name body__small"
            }, [t._v("PIP")]), e("div", {
                staticClass: "item-value body__medium"
            }, [t._v(t._s(t.results.pip) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])])])])], 1)])
        }
            , qn = []
            , Rn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "title",
                class: {
                    cross: "cross" === t.type,
                    arrow: "arrow" === t.type
                }
            }, [e("div", {
                staticClass: "row row-left"
            }, [e("h4", {
                staticClass: "title__medium"
            }, [t._v(" " + t._s(t.title))])]), e("i", {
                staticClass: "material-icons close cross-icon",
                on: {
                    click: function(e) {
                        return t.close()
                    }
                }
            }, [t._v(t._s("close"))]), e("i", {
                staticClass: "material-icons close arrow-icon",
                on: {
                    click: function(e) {
                        return t.close()
                    }
                }
            }, [t._v(t._s("arrow_back"))])])
        }
            , Wn = []
            , zn = {
            name: "BaseModalTitle",
            props: {
                title: {
                    type: String
                },
                type: {
                    type: String,
                    default: ""
                }
            },
            methods: {
                close() {
                    this.$emit("close")
                }
            }
        }
            , Gn = zn
            , Yn = (s("93ce"),
            y(Gn, Rn, Wn, !1, null, "3e758335", null))
            , Zn = Yn.exports
            , Jn = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "input-container"
            }, [t.title ? e("div", {
                staticClass: "title body__medium"
            }, [t._v(t._s(t.title))]) : t._e(), e("div", {
                staticClass: "input-box"
            }, [e("div", {
                staticClass: "box"
            }, [e("div", {
                staticClass: "slot-wrapper"
            }, [t._t("icon")], 2), t.mask ? e("input", {
                directives: [{
                    name: "mask",
                    rawName: "v-mask",
                    value: t.mask,
                    expression: "mask"
                }],
                staticClass: "body__large",
                class: {
                    "no-valid": t.error,
                    hasSlot: t.hasSlot
                },
                attrs: {
                    type: t.getInputType,
                    placeholder: t.placeholder,
                    disabled: t.disabled
                },
                domProps: {
                    value: t.value
                },
                on: {
                    input: t.updateInputValue
                }
            }) : e("input", {
                staticClass: "body__large",
                class: {
                    "no-valid": t.error,
                    hasSlot: t.hasSlot
                },
                attrs: {
                    type: t.getInputType,
                    placeholder: t.placeholder,
                    disabled: t.disabled
                },
                domProps: {
                    value: t.value
                },
                on: {
                    input: t.updateInputValue
                }
            }), e("div", {
                staticClass: "icons"
            }, [t.value && "password" !== t.type ? e("i", {
                staticClass: "material-symbols-outlined",
                on: {
                    click: t.clearInputValue
                }
            }, [t._v(" close ")]) : t._e(), "password" === t.type ? e("i", {
                staticClass: "material-symbols-outlined",
                on: {
                    click: t.showValue
                }
            }, [t._v(" " + t._s(t.visibilityState ? "visibility" : "visibility_off") + " ")]) : t._e(), t.$slots["info"] ? e("div", {
                staticClass: "info"
            }, [t._t("info")], 2) : t._e()])])]), t.info ? e("small", [t._v(t._s(t.info))]) : t._e()])
        }
            , Kn = []
            , Xn = {
            name: "BaseInput",
            props: {
                value: {
                    type: [String, Number],
                    default: ""
                },
                placeholder: {
                    type: String,
                    default: ""
                },
                title: {
                    type: String,
                    default: ""
                },
                type: {
                    type: String,
                    default: "text"
                },
                error: {
                    type: Boolean,
                    default: !1
                },
                info: {
                    type: String,
                    default: ""
                },
                disabled: {
                    type: Boolean,
                    default: !1
                },
                mask: {
                    type: String,
                    default: ""
                }
            },
            data() {
                return {
                    visibilityState: !1
                }
            },
            computed: {
                hasSlot() {
                    return !!this.$slots.icon
                },
                getInputType() {
                    return "password" === this.type && this.visibilityState ? "text" : this.type
                }
            },
            methods: {
                showValue() {
                    this.visibilityState = !this.visibilityState
                },
                updateInputValue(t) {
                    let e = t.target.value;
                    "number" === this.type && (e = this.validateNumberInput(e)),
                        this.$emit("input", e)
                },
                validateNumberInput(t) {
                    return t.replace(/[^0-9.,]/g, "").replace(/(\..*)\./g, "$1").replace(/(,.*),/g, "$1").replace(/(,.*)\./g, "$1").replace(/(\..*),/g, "$1")
                },
                clearInputValue() {
                    this.$emit("input", "")
                }
            }
        }
            , Qn = Xn
            , tr = (s("5038"),
            y(Qn, Jn, Kn, !1, null, "fe46dd2e", null))
            , er = tr.exports
            , sr = {
            name: "modalProfitCalculator",
            components: {
                BaseInput: er,
                BaseModalTitle: Zn,
                BaseModalTabs: _s,
                BaseButton: Ae
            },
            data() {
                return {
                    showLeverage: pt["yb"],
                    volume: "",
                    entryPrice: "",
                    stopLoss: "",
                    takeProfit: "",
                    orderType: !1,
                    inputContainers: {
                        volumeTransparent: !1,
                        entryPriceTransparent: !1,
                        stopLossTransparent: !1,
                        takeProfitTransparent: !1
                    },
                    results: {
                        leverage: 1,
                        margin: 0,
                        profit: 0,
                        loss: 0,
                        roe: 0,
                        pip: 0
                    }
                }
            },
            methods: {
                activeTabHandler(t) {
                    switch (t) {
                        case "0":
                            this.switchTo("buy");
                            break;
                        case "1":
                            this.switchTo("sell");
                            break
                    }
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        profitCalculator: !1
                    })
                },
                switchTo(t) {
                    "buy" === t && (this.orderType = !1),
                    "sell" === t && (this.orderType = !0)
                },
                calculate() {
                    var t;
                    this.results.leverage = this.symbol.leverage_default || this.activeAccount.leverage;
                    let e = this.volume / this.results.leverage
                        , s = this.volume * Math.pow(.1, this.symbol.precision)
                        , a = 1
                        , i = this.symbol.base_currency
                        , o = 1
                        , n = this.activeAccount.currency;
                    void 0 !== this.symbols["USD" + i] ? a = this.symbols["USD" + i].quote.bid : void 0 !== this.symbols[i + "USD"] && (a = 1 / this.symbols[i + "USD"].quote.bid),
                        void 0 !== this.symbols["USD" + n] ? o = this.symbols["USD" + n].quote.bid : void 0 !== this.symbols[n + "USD"] && (o = 1 / this.symbols[n + "USD"].quote.bid);
                    let r = o / a;
                    s *= r;
                    let l = (null === (t = this.symbol) || void 0 === t || null === (t = t.quote) || void 0 === t ? void 0 : t.bid) || 1;
                    this.results.margin = (e * l * r).toFixed(this.activeAccount.precision) || 0,
                        this.results.profit = (s * (this.orderType ? this.entryPrice - this.takeProfit : this.takeProfit - this.entryPrice) * Math.pow(10, this.symbol.precision)).toFixed(this.activeAccount.precision) || 0,
                        this.results.loss = (s * (this.orderType ? this.entryPrice - this.stopLoss : this.stopLoss - this.entryPrice) * Math.pow(10, this.symbol.precision)).toFixed(this.activeAccount.precision) || 0,
                        this.results.roe = 100 * this.results.profit / this.results.margin || 0,
                        this.results.pip = Number(s.toFixed(this.activeAccount.precision) || 0)
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "chartActive", "charts", "activeAccount", "tokens"]),
                PNL() {
                    return 5 * (this.volume - this.entryPrice)
                },
                ROE() {
                    return this.entryPrice / 1.1 * .5 - (this.volume + this.takeProfit - this.stopLoss) || 0
                },
                maxPosition() {
                    var t;
                    let e = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        equity: 0,
                        margin: 0
                    };
                    if (!this.activeAccount.id)
                        return 0;
                    e.balance = this.activeAccount.balance,
                        e.credit = this.activeAccount.credit;
                    for (let n in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[n];
                        e.margin += t.margin,
                        this.symbols[t.symbol] && (e.profit += t.type < 2 ? t.point * (t.type ? t.price_open - this.symbols[t.symbol].quote.ask : this.symbols[t.symbol].quote.bid - t.price_open) * Math.pow(10, this.symbols[t.symbol].precision) : 0)
                    }
                    let s = e.balance + e.credit + e.profit - e.margin
                        , a = this.symbol.leverage_default || this.activeAccount.leverage
                        , i = s * a
                        , o = (null === (t = this.symbol) || void 0 === t || null === (t = t.quote) || void 0 === t ? void 0 : t.bid) || 1;
                    if (this.symbol.base_currency === this.activeAccount.currency ? i /= o : void 0 !== this.symbols[this.symbol.base_currency + this.activeAccount.currency] ? i /= o * this.symbols[this.symbol.base_currency + this.activeAccount.currency].quote.bid : void 0 !== this.symbols[this.activeAccount.currency + this.symbol.base_currency] && (i /= o / this.symbols[this.activeAccount.currency + this.symbol.base_currency].quote.bid),
                    this.symbol.lot_step && this.symbol.lot) {
                        let t = this.symbol.lot_step * this.symbol.lot;
                        i = Math.floor(i / t) * t
                    }
                    return i
                },
                symbol() {
                    let t = {
                        alias: ""
                    };
                    return this.chartActive && this.charts[this.chartActive] && this.symbols[this.charts[this.chartActive].symbol] || t
                },
                isInputsEmpty() {
                    return this.volume + this.entryPrice + this.stopLoss + this.takeProfit
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        var e;
                        t.profitCalculator && (this.orderType = !1,
                            this.volume = this.symbol.lot,
                            this.entryPrice = (null === (e = this.symbol) || void 0 === e || null === (e = e.quote) || void 0 === e ? void 0 : e.bid) || 1,
                            this.stopLoss = (this.entryPrice - 100 * Math.pow(.1, this.symbol.precision)).toFixed(this.symbol.precision),
                            this.takeProfit = (this.entryPrice + 100 * Math.pow(.1, this.symbol.precision)).toFixed(this.symbol.precision),
                            this.calculate())
                    }
                }
            }
        }
            , ar = sr
            , ir = (s("4af0"),
            y(ar, jn, qn, !1, null, "95b405e2", null))
            , or = ir.exports
            , nr = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "no-connection",
                class: {
                    hide: t.hideWindow
                }
            }, [e("div", {
                staticClass: "upper"
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("wifi_off")]), e("span", [t._v(t._s(t.tokens.noConnectionModal.connectionLost))])]), e("button", {
                on: {
                    click: t.refresh
                }
            }, [t._v(t._s(t.tokens.noConnectionModal.retryNow))])])
        }
            , rr = []
            , lr = {
            name: "NoConnectionModal",
            data() {
                return {
                    timeout: null,
                    hideWindow: !0
                }
            },
            methods: {
                refresh() {
                    location.reload()
                }
            },
            computed: {
                ...Object(o["b"])(["socketState", "tokens"])
            },
            watch: {
                socketState(t) {
                    if (t)
                        this.timeout && clearTimeout(this.timeout),
                            this.hideWindow = !0;
                    else {
                        if (this.timeout)
                            return;
                        this.timeout = setTimeout( () => {
                                this.hideWindow = !1
                            }
                            , 15e3)
                    }
                }
            }
        }
            , cr = lr
            , dr = (s("88ae"),
            y(cr, nr, rr, !1, null, "3f18da4a", null))
            , ur = dr.exports
            , mr = function() {
            var t = this
                , e = t._self._c;
            return ["tradingviewonline", "stage"].includes(t.brand) ? e("TradingViewLoginModal") : t._e()
        }
            , pr = []
            , hr = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: t.loggedIn || t.modals.register || t.modals.newPassword || t.modals.forgotPassword
                }
            }, [e("div", {
                staticClass: "modal",
                class: {
                    hide: t.modals.otp
                }
            }, [e("div", {
                staticClass: "modal-box"
            }, [e("div", {
                staticClass: "wrap-login"
            }, [e("div", {
                staticClass: "login-form"
            }, [e("span", {
                staticClass: "login-form-title"
            }, [t._v(" Welcome ")]), t._m(0), e("div", {
                staticClass: "wrap-input"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "input",
                class: t.email ? "has-val" : "",
                attrs: {
                    type: "text",
                    name: "email"
                },
                domProps: {
                    value: t.email
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            }), e("span", {
                staticClass: "focus-input",
                attrs: {
                    "data-placeholder": "Email"
                }
            })]), e("div", {
                staticClass: "wrap-input",
                attrs: {
                    "data-validate": "Enter password"
                }
            }, [e("span", {
                staticClass: "btn-show-pass"
            }, [e("i", {
                staticClass: "material-icons",
                on: {
                    click: function(e) {
                        return e.preventDefault(),
                            ( () => t.passwordVisible = !t.passwordVisible).apply(null, arguments)
                    }
                }
            }, [t._v(t._s(t.passwordVisible ? "visibility" : "visibility_off"))])]), "checkbox" === (t.passwordVisible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                staticClass: "input",
                class: t.password ? "has-val" : "",
                attrs: {
                    name: "pass",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password) ? t._i(t.password, null) > -1 : t.password
                },
                on: {
                    change: function(e) {
                        var s = t.password
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password = s.concat([o])) : n > -1 && (t.password = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password = i
                    }
                }
            }) : "radio" === (t.passwordVisible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                staticClass: "input",
                class: t.password ? "has-val" : "",
                attrs: {
                    name: "pass",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password, null)
                },
                on: {
                    change: function(e) {
                        t.password = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                staticClass: "input",
                class: t.password ? "has-val" : "",
                attrs: {
                    name: "pass",
                    type: t.passwordVisible ? "text" : "password"
                },
                domProps: {
                    value: t.password
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.password = e.target.value)
                    }
                }
            }), e("span", {
                staticClass: "focus-input",
                attrs: {
                    "data-placeholder": "Password"
                }
            })]), e("div", {
                staticClass: "container-login-form-btn"
            }, [e("div", {
                staticClass: "wrap-login-form-btn"
            }, [e("div", {
                staticClass: "login-form-bg"
            }), e("button", {
                staticClass: "login-form-btn",
                on: {
                    click: t.login
                }
            }, [t._v("Login")])])]), t._m(1), e("div", {
                staticClass: "row-forgot"
            }, [e("span", {
                staticClass: "txt1"
            }, [t._v(" Forgot password? ")]), e("a", {
                staticClass: "txt2",
                on: {
                    click: t.showForgot
                }
            }, [t._v(" Restore ")])])])])])]), e("TwoFactorAuthenticationModal", {
                class: {
                    hide: !t.modals.otp
                },
                attrs: {
                    email: this.email,
                    password: this.password
                }
            })], 1)
        }
            , vr = [function() {
            var t = this
                , e = t._self._c;
            return e("span", {
                staticClass: "login-form-logo"
            }, [e("img", {
                attrs: {
                    src: "https://p-cdn.co/tradingviewonline/brands/tradingviewonline/favicon.png",
                    alt: "Logo"
                }
            })])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row-singup"
                }, [e("span", {
                    staticClass: "txt1"
                }, [t._v(" Don’t have an account? ")]), e("a", {
                    staticClass: "txt2",
                    attrs: {
                        href: "/register"
                    }
                }, [t._v(" Sign Up ")])])
            }
        ]
            , fr = {
            name: "TradingViewLoginModal",
            components: {
                TwoFactorAuthenticationModal: Pa
            },
            data() {
                return {
                    email: "",
                    password: "",
                    passwordVisible: !1,
                    otp: ""
                }
            },
            computed: {
                ...Object(o["b"])(["loggedIn", "modals", "tokens"])
            },
            methods: {
                login() {
                    this.newDesign ? this.$store.dispatch(r["J"], {
                        email: this.email.trim(),
                        password: this.password.trim(),
                        otp: this.otp
                    }) : this.$store.dispatch(r["w"], {
                        email: this.email.trim(),
                        password: this.password.trim(),
                        otp: this.otp
                    })
                },
                showForgot() {
                    this.$store.commit(n["F"], {
                        forgotPassword: !0
                    })
                }
            },
            watch: {
                loggedIn(t) {
                    t && (this.email = "",
                        this.password = "",
                        this.otp = "")
                }
            }
        }
            , gr = fr
            , br = (s("15c1"),
            y(gr, hr, vr, !1, null, "93c16ad0", null))
            , yr = br.exports
            , _r = {
            name: "CustomLoginModals",
            components: {
                TradingViewLoginModal: yr
            },
            data() {
                return {
                    brand: pt["e"]
                }
            }
        }
            , Cr = _r
            , wr = y(Cr, mr, pr, !1, null, null, null)
            , kr = wr.exports
            , Sr = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.depositSuccess,
                    expression: "modals.depositSuccess"
                }],
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.depositSuccessModal.title))]), e("i", {
                staticClass: "material-icons"
            }, [t._v("check")])]), e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.tokens.depositSuccessModal.text) + " ")]), e("div", {
                staticClass: "row"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("OK")])])])])
        }
            , xr = []
            , Mr = {
            name: "NewPasswordModal",
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        depositSuccess: !1
                    })
                }
            }
        }
            , Ar = Mr
            , Dr = (s("45da"),
            y(Ar, Sr, xr, !1, null, "c6c2b040", null))
            , Pr = Dr.exports
            , Tr = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.qrCode
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [t.value ? e("QrcodeVue", {
                attrs: {
                    value: t.value,
                    size: t.size
                }
            }) : t._e()], 1)])
        }
            , Lr = []
            , Ir = {
            MODE_NUMBER: 1,
            MODE_ALPHA_NUM: 2,
            MODE_8BIT_BYTE: 4,
            MODE_KANJI: 8
        };
        function Fr(t) {
            this.mode = Ir.MODE_8BIT_BYTE,
                this.data = t
        }
        Fr.prototype = {
            getLength: function(t) {
                return this.data.length
            },
            write: function(t) {
                for (var e = 0; e < this.data.length; e++)
                    t.put(this.data.charCodeAt(e), 8)
            }
        };
        var Or = Fr
            , Br = {
            L: 1,
            M: 0,
            Q: 3,
            H: 2
        };
        function Nr(t, e) {
            this.totalCount = t,
                this.dataCount = e
        }
        Nr.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]],
            Nr.getRSBlocks = function(t, e) {
                var s = Nr.getRsBlockTable(t, e);
                if (void 0 == s)
                    throw new Error("bad rs block @ typeNumber:" + t + "/errorCorrectLevel:" + e);
                for (var a = s.length / 3, i = new Array, o = 0; o < a; o++)
                    for (var n = s[3 * o + 0], r = s[3 * o + 1], l = s[3 * o + 2], c = 0; c < n; c++)
                        i.push(new Nr(r,l));
                return i
            }
            ,
            Nr.getRsBlockTable = function(t, e) {
                switch (e) {
                    case Br.L:
                        return Nr.RS_BLOCK_TABLE[4 * (t - 1) + 0];
                    case Br.M:
                        return Nr.RS_BLOCK_TABLE[4 * (t - 1) + 1];
                    case Br.Q:
                        return Nr.RS_BLOCK_TABLE[4 * (t - 1) + 2];
                    case Br.H:
                        return Nr.RS_BLOCK_TABLE[4 * (t - 1) + 3];
                    default:
                        return
                }
            }
        ;
        var $r = Nr;
        function Vr() {
            this.buffer = new Array,
                this.length = 0
        }
        Vr.prototype = {
            get: function(t) {
                var e = Math.floor(t / 8);
                return 1 == (this.buffer[e] >>> 7 - t % 8 & 1)
            },
            put: function(t, e) {
                for (var s = 0; s < e; s++)
                    this.putBit(1 == (t >>> e - s - 1 & 1))
            },
            getLengthInBits: function() {
                return this.length
            },
            putBit: function(t) {
                var e = Math.floor(this.length / 8);
                this.buffer.length <= e && this.buffer.push(0),
                t && (this.buffer[e] |= 128 >>> this.length % 8),
                    this.length++
            }
        };
        for (var Er = Vr, Ur = {
            glog: function(t) {
                if (t < 1)
                    throw new Error("glog(" + t + ")");
                return Ur.LOG_TABLE[t]
            },
            gexp: function(t) {
                while (t < 0)
                    t += 255;
                while (t >= 256)
                    t -= 255;
                return Ur.EXP_TABLE[t]
            },
            EXP_TABLE: new Array(256),
            LOG_TABLE: new Array(256)
        }, Hr = 0; Hr < 8; Hr++)
            Ur.EXP_TABLE[Hr] = 1 << Hr;
        for (Hr = 8; Hr < 256; Hr++)
            Ur.EXP_TABLE[Hr] = Ur.EXP_TABLE[Hr - 4] ^ Ur.EXP_TABLE[Hr - 5] ^ Ur.EXP_TABLE[Hr - 6] ^ Ur.EXP_TABLE[Hr - 8];
        for (Hr = 0; Hr < 255; Hr++)
            Ur.LOG_TABLE[Ur.EXP_TABLE[Hr]] = Hr;
        var jr = Ur;
        function qr(t, e) {
            if (void 0 == t.length)
                throw new Error(t.length + "/" + e);
            var s = 0;
            while (s < t.length && 0 == t[s])
                s++;
            this.num = new Array(t.length - s + e);
            for (var a = 0; a < t.length - s; a++)
                this.num[a] = t[a + s]
        }
        qr.prototype = {
            get: function(t) {
                return this.num[t]
            },
            getLength: function() {
                return this.num.length
            },
            multiply: function(t) {
                for (var e = new Array(this.getLength() + t.getLength() - 1), s = 0; s < this.getLength(); s++)
                    for (var a = 0; a < t.getLength(); a++)
                        e[s + a] ^= jr.gexp(jr.glog(this.get(s)) + jr.glog(t.get(a)));
                return new qr(e,0)
            },
            mod: function(t) {
                if (this.getLength() - t.getLength() < 0)
                    return this;
                for (var e = jr.glog(this.get(0)) - jr.glog(t.get(0)), s = new Array(this.getLength()), a = 0; a < this.getLength(); a++)
                    s[a] = this.get(a);
                for (a = 0; a < t.getLength(); a++)
                    s[a] ^= jr.gexp(jr.glog(t.get(a)) + e);
                return new qr(s,0).mod(t)
            }
        };
        var Rr = qr
            , Wr = {
            PATTERN000: 0,
            PATTERN001: 1,
            PATTERN010: 2,
            PATTERN011: 3,
            PATTERN100: 4,
            PATTERN101: 5,
            PATTERN110: 6,
            PATTERN111: 7
        }
            , zr = {
            PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],
            G15: 1335,
            G18: 7973,
            G15_MASK: 21522,
            getBCHTypeInfo: function(t) {
                var e = t << 10;
                while (zr.getBCHDigit(e) - zr.getBCHDigit(zr.G15) >= 0)
                    e ^= zr.G15 << zr.getBCHDigit(e) - zr.getBCHDigit(zr.G15);
                return (t << 10 | e) ^ zr.G15_MASK
            },
            getBCHTypeNumber: function(t) {
                var e = t << 12;
                while (zr.getBCHDigit(e) - zr.getBCHDigit(zr.G18) >= 0)
                    e ^= zr.G18 << zr.getBCHDigit(e) - zr.getBCHDigit(zr.G18);
                return t << 12 | e
            },
            getBCHDigit: function(t) {
                var e = 0;
                while (0 != t)
                    e++,
                        t >>>= 1;
                return e
            },
            getPatternPosition: function(t) {
                return zr.PATTERN_POSITION_TABLE[t - 1]
            },
            getMask: function(t, e, s) {
                switch (t) {
                    case Wr.PATTERN000:
                        return (e + s) % 2 == 0;
                    case Wr.PATTERN001:
                        return e % 2 == 0;
                    case Wr.PATTERN010:
                        return s % 3 == 0;
                    case Wr.PATTERN011:
                        return (e + s) % 3 == 0;
                    case Wr.PATTERN100:
                        return (Math.floor(e / 2) + Math.floor(s / 3)) % 2 == 0;
                    case Wr.PATTERN101:
                        return e * s % 2 + e * s % 3 == 0;
                    case Wr.PATTERN110:
                        return (e * s % 2 + e * s % 3) % 2 == 0;
                    case Wr.PATTERN111:
                        return (e * s % 3 + (e + s) % 2) % 2 == 0;
                    default:
                        throw new Error("bad maskPattern:" + t)
                }
            },
            getErrorCorrectPolynomial: function(t) {
                for (var e = new Rr([1],0), s = 0; s < t; s++)
                    e = e.multiply(new Rr([1, jr.gexp(s)],0));
                return e
            },
            getLengthInBits: function(t, e) {
                if (1 <= e && e < 10)
                    switch (t) {
                        case Ir.MODE_NUMBER:
                            return 10;
                        case Ir.MODE_ALPHA_NUM:
                            return 9;
                        case Ir.MODE_8BIT_BYTE:
                            return 8;
                        case Ir.MODE_KANJI:
                            return 8;
                        default:
                            throw new Error("mode:" + t)
                    }
                else if (e < 27)
                    switch (t) {
                        case Ir.MODE_NUMBER:
                            return 12;
                        case Ir.MODE_ALPHA_NUM:
                            return 11;
                        case Ir.MODE_8BIT_BYTE:
                            return 16;
                        case Ir.MODE_KANJI:
                            return 10;
                        default:
                            throw new Error("mode:" + t)
                    }
                else {
                    if (!(e < 41))
                        throw new Error("type:" + e);
                    switch (t) {
                        case Ir.MODE_NUMBER:
                            return 14;
                        case Ir.MODE_ALPHA_NUM:
                            return 13;
                        case Ir.MODE_8BIT_BYTE:
                            return 16;
                        case Ir.MODE_KANJI:
                            return 12;
                        default:
                            throw new Error("mode:" + t)
                    }
                }
            },
            getLostPoint: function(t) {
                for (var e = t.getModuleCount(), s = 0, a = 0; a < e; a++)
                    for (var i = 0; i < e; i++) {
                        for (var o = 0, n = t.isDark(a, i), r = -1; r <= 1; r++)
                            if (!(a + r < 0 || e <= a + r))
                                for (var l = -1; l <= 1; l++)
                                    i + l < 0 || e <= i + l || 0 == r && 0 == l || n == t.isDark(a + r, i + l) && o++;
                        o > 5 && (s += 3 + o - 5)
                    }
                for (a = 0; a < e - 1; a++)
                    for (i = 0; i < e - 1; i++) {
                        var c = 0;
                        t.isDark(a, i) && c++,
                        t.isDark(a + 1, i) && c++,
                        t.isDark(a, i + 1) && c++,
                        t.isDark(a + 1, i + 1) && c++,
                        0 != c && 4 != c || (s += 3)
                    }
                for (a = 0; a < e; a++)
                    for (i = 0; i < e - 6; i++)
                        t.isDark(a, i) && !t.isDark(a, i + 1) && t.isDark(a, i + 2) && t.isDark(a, i + 3) && t.isDark(a, i + 4) && !t.isDark(a, i + 5) && t.isDark(a, i + 6) && (s += 40);
                for (i = 0; i < e; i++)
                    for (a = 0; a < e - 6; a++)
                        t.isDark(a, i) && !t.isDark(a + 1, i) && t.isDark(a + 2, i) && t.isDark(a + 3, i) && t.isDark(a + 4, i) && !t.isDark(a + 5, i) && t.isDark(a + 6, i) && (s += 40);
                var d = 0;
                for (i = 0; i < e; i++)
                    for (a = 0; a < e; a++)
                        t.isDark(a, i) && d++;
                var u = Math.abs(100 * d / e / e - 50) / 5;
                return s += 10 * u,
                    s
            }
        }
            , Gr = zr;
        function Yr(t, e) {
            this.typeNumber = t,
                this.errorCorrectLevel = e,
                this.modules = null,
                this.moduleCount = 0,
                this.dataCache = null,
                this.dataList = []
        }
        var Zr = Yr.prototype;
        Zr.addData = function(t) {
            var e = new Or(t);
            this.dataList.push(e),
                this.dataCache = null
        }
            ,
            Zr.isDark = function(t, e) {
                if (t < 0 || this.moduleCount <= t || e < 0 || this.moduleCount <= e)
                    throw new Error(t + "," + e);
                return this.modules[t][e]
            }
            ,
            Zr.getModuleCount = function() {
                return this.moduleCount
            }
            ,
            Zr.make = function() {
                if (this.typeNumber < 1) {
                    var t = 1;
                    for (t = 1; t < 40; t++) {
                        for (var e = $r.getRSBlocks(t, this.errorCorrectLevel), s = new Er, a = 0, i = 0; i < e.length; i++)
                            a += e[i].dataCount;
                        for (i = 0; i < this.dataList.length; i++) {
                            var o = this.dataList[i];
                            s.put(o.mode, 4),
                                s.put(o.getLength(), Gr.getLengthInBits(o.mode, t)),
                                o.write(s)
                        }
                        if (s.getLengthInBits() <= 8 * a)
                            break
                    }
                    this.typeNumber = t
                }
                this.makeImpl(!1, this.getBestMaskPattern())
            }
            ,
            Zr.makeImpl = function(t, e) {
                this.moduleCount = 4 * this.typeNumber + 17,
                    this.modules = new Array(this.moduleCount);
                for (var s = 0; s < this.moduleCount; s++) {
                    this.modules[s] = new Array(this.moduleCount);
                    for (var a = 0; a < this.moduleCount; a++)
                        this.modules[s][a] = null
                }
                this.setupPositionProbePattern(0, 0),
                    this.setupPositionProbePattern(this.moduleCount - 7, 0),
                    this.setupPositionProbePattern(0, this.moduleCount - 7),
                    this.setupPositionAdjustPattern(),
                    this.setupTimingPattern(),
                    this.setupTypeInfo(t, e),
                this.typeNumber >= 7 && this.setupTypeNumber(t),
                null == this.dataCache && (this.dataCache = Yr.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)),
                    this.mapData(this.dataCache, e)
            }
            ,
            Zr.setupPositionProbePattern = function(t, e) {
                for (var s = -1; s <= 7; s++)
                    if (!(t + s <= -1 || this.moduleCount <= t + s))
                        for (var a = -1; a <= 7; a++)
                            e + a <= -1 || this.moduleCount <= e + a || (this.modules[t + s][e + a] = 0 <= s && s <= 6 && (0 == a || 6 == a) || 0 <= a && a <= 6 && (0 == s || 6 == s) || 2 <= s && s <= 4 && 2 <= a && a <= 4)
            }
            ,
            Zr.getBestMaskPattern = function() {
                for (var t = 0, e = 0, s = 0; s < 8; s++) {
                    this.makeImpl(!0, s);
                    var a = Gr.getLostPoint(this);
                    (0 == s || t > a) && (t = a,
                        e = s)
                }
                return e
            }
            ,
            Zr.createMovieClip = function(t, e, s) {
                var a = t.createEmptyMovieClip(e, s)
                    , i = 1;
                this.make();
                for (var o = 0; o < this.modules.length; o++)
                    for (var n = o * i, r = 0; r < this.modules[o].length; r++) {
                        var l = r * i
                            , c = this.modules[o][r];
                        c && (a.beginFill(0, 100),
                            a.moveTo(l, n),
                            a.lineTo(l + i, n),
                            a.lineTo(l + i, n + i),
                            a.lineTo(l, n + i),
                            a.endFill())
                    }
                return a
            }
            ,
            Zr.setupTimingPattern = function() {
                for (var t = 8; t < this.moduleCount - 8; t++)
                    null == this.modules[t][6] && (this.modules[t][6] = t % 2 == 0);
                for (var e = 8; e < this.moduleCount - 8; e++)
                    null == this.modules[6][e] && (this.modules[6][e] = e % 2 == 0)
            }
            ,
            Zr.setupPositionAdjustPattern = function() {
                for (var t = Gr.getPatternPosition(this.typeNumber), e = 0; e < t.length; e++)
                    for (var s = 0; s < t.length; s++) {
                        var a = t[e]
                            , i = t[s];
                        if (null == this.modules[a][i])
                            for (var o = -2; o <= 2; o++)
                                for (var n = -2; n <= 2; n++)
                                    this.modules[a + o][i + n] = -2 == o || 2 == o || -2 == n || 2 == n || 0 == o && 0 == n
                    }
            }
            ,
            Zr.setupTypeNumber = function(t) {
                for (var e = Gr.getBCHTypeNumber(this.typeNumber), s = 0; s < 18; s++) {
                    var a = !t && 1 == (e >> s & 1);
                    this.modules[Math.floor(s / 3)][s % 3 + this.moduleCount - 8 - 3] = a
                }
                for (s = 0; s < 18; s++) {
                    a = !t && 1 == (e >> s & 1);
                    this.modules[s % 3 + this.moduleCount - 8 - 3][Math.floor(s / 3)] = a
                }
            }
            ,
            Zr.setupTypeInfo = function(t, e) {
                for (var s = this.errorCorrectLevel << 3 | e, a = Gr.getBCHTypeInfo(s), i = 0; i < 15; i++) {
                    var o = !t && 1 == (a >> i & 1);
                    i < 6 ? this.modules[i][8] = o : i < 8 ? this.modules[i + 1][8] = o : this.modules[this.moduleCount - 15 + i][8] = o
                }
                for (i = 0; i < 15; i++) {
                    o = !t && 1 == (a >> i & 1);
                    i < 8 ? this.modules[8][this.moduleCount - i - 1] = o : i < 9 ? this.modules[8][15 - i - 1 + 1] = o : this.modules[8][15 - i - 1] = o
                }
                this.modules[this.moduleCount - 8][8] = !t
            }
            ,
            Zr.mapData = function(t, e) {
                for (var s = -1, a = this.moduleCount - 1, i = 7, o = 0, n = this.moduleCount - 1; n > 0; n -= 2) {
                    6 == n && n--;
                    while (1) {
                        for (var r = 0; r < 2; r++)
                            if (null == this.modules[a][n - r]) {
                                var l = !1;
                                o < t.length && (l = 1 == (t[o] >>> i & 1));
                                var c = Gr.getMask(e, a, n - r);
                                c && (l = !l),
                                    this.modules[a][n - r] = l,
                                    i--,
                                -1 == i && (o++,
                                    i = 7)
                            }
                        if (a += s,
                        a < 0 || this.moduleCount <= a) {
                            a -= s,
                                s = -s;
                            break
                        }
                    }
                }
            }
            ,
            Yr.PAD0 = 236,
            Yr.PAD1 = 17,
            Yr.createData = function(t, e, s) {
                for (var a = $r.getRSBlocks(t, e), i = new Er, o = 0; o < s.length; o++) {
                    var n = s[o];
                    i.put(n.mode, 4),
                        i.put(n.getLength(), Gr.getLengthInBits(n.mode, t)),
                        n.write(i)
                }
                var r = 0;
                for (o = 0; o < a.length; o++)
                    r += a[o].dataCount;
                if (i.getLengthInBits() > 8 * r)
                    throw new Error("code length overflow. (" + i.getLengthInBits() + ">" + 8 * r + ")");
                i.getLengthInBits() + 4 <= 8 * r && i.put(0, 4);
                while (i.getLengthInBits() % 8 != 0)
                    i.putBit(!1);
                while (1) {
                    if (i.getLengthInBits() >= 8 * r)
                        break;
                    if (i.put(Yr.PAD0, 8),
                    i.getLengthInBits() >= 8 * r)
                        break;
                    i.put(Yr.PAD1, 8)
                }
                return Yr.createBytes(i, a)
            }
            ,
            Yr.createBytes = function(t, e) {
                for (var s = 0, a = 0, i = 0, o = new Array(e.length), n = new Array(e.length), r = 0; r < e.length; r++) {
                    var l = e[r].dataCount
                        , c = e[r].totalCount - l;
                    a = Math.max(a, l),
                        i = Math.max(i, c),
                        o[r] = new Array(l);
                    for (var d = 0; d < o[r].length; d++)
                        o[r][d] = 255 & t.buffer[d + s];
                    s += l;
                    var u = Gr.getErrorCorrectPolynomial(c)
                        , m = new Rr(o[r],u.getLength() - 1)
                        , p = m.mod(u);
                    n[r] = new Array(u.getLength() - 1);
                    for (d = 0; d < n[r].length; d++) {
                        var h = d + p.getLength() - n[r].length;
                        n[r][d] = h >= 0 ? p.get(h) : 0
                    }
                }
                var v = 0;
                for (d = 0; d < e.length; d++)
                    v += e[d].totalCount;
                var f = new Array(v)
                    , g = 0;
                for (d = 0; d < a; d++)
                    for (r = 0; r < e.length; r++)
                        d < o[r].length && (f[g++] = o[r][d]);
                for (d = 0; d < i; d++)
                    for (r = 0; r < e.length; r++)
                        d < n[r].length && (f[g++] = n[r][d]);
                return f
            }
        ;
        var Jr = Yr;
        function Kr(t) {
            for (var e = "", s = 0; s < t.length; s++) {
                var a = t.charCodeAt(s);
                a < 128 ? e += String.fromCharCode(a) : a < 2048 ? (e += String.fromCharCode(192 | a >> 6),
                    e += String.fromCharCode(128 | 63 & a)) : a < 55296 || a >= 57344 ? (e += String.fromCharCode(224 | a >> 12),
                    e += String.fromCharCode(128 | a >> 6 & 63),
                    e += String.fromCharCode(128 | 63 & a)) : (s++,
                    a = 65536 + ((1023 & a) << 10 | 1023 & t.charCodeAt(s)),
                    e += String.fromCharCode(240 | a >> 18),
                    e += String.fromCharCode(128 | a >> 12 & 63),
                    e += String.fromCharCode(128 | a >> 6 & 63),
                    e += String.fromCharCode(128 | 63 & a))
            }
            return e
        }
        function Xr(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                , s = [];
            return t.forEach((function(t, a) {
                    var i = null;
                    t.forEach((function(o, n) {
                            if (!o && null !== i)
                                return s.push("M".concat(i + e, " ").concat(a + e, "h").concat(n - i, "v1H").concat(i + e, "z")),
                                    void (i = null);
                            if (n !== t.length - 1)
                                o && null === i && (i = n);
                            else {
                                if (!o)
                                    return;
                                null === i ? s.push("M".concat(n + e, ",").concat(a + e, " h1v1H").concat(n + e, "z")) : s.push("M".concat(i + e, ",").concat(a + e, " h").concat(n + 1 - i, "v1H").concat(i + e, "z"))
                            }
                        }
                    ))
                }
            )),
                s.join("")
        }
        var Qr = {
            props: {
                value: {
                    type: String,
                    required: !0,
                    default: ""
                },
                className: {
                    type: String,
                    default: ""
                },
                size: {
                    type: [Number, String],
                    default: 100,
                    validator: function(t) {
                        return !0 !== isNaN(Number(t))
                    }
                },
                level: {
                    type: String,
                    default: "L",
                    validator: function(t) {
                        return ["L", "Q", "M", "H"].indexOf(t) > -1
                    }
                },
                background: {
                    type: String,
                    default: "#fff"
                },
                foreground: {
                    type: String,
                    default: "#000"
                },
                renderAs: {
                    type: String,
                    required: !1,
                    default: "canvas",
                    validator: function(t) {
                        return ["canvas", "svg"].indexOf(t) > -1
                    }
                }
            },
            data: function() {
                return {
                    numCells: 0,
                    fgPath: ""
                }
            },
            updated: function() {
                this.render()
            },
            mounted: function() {
                this.render()
            },
            methods: {
                render: function() {
                    var t = this.value
                        , e = this.size
                        , s = this.level
                        , a = this.background
                        , i = this.foreground
                        , o = this.renderAs
                        , n = e >>> 0
                        , r = new Jr(-1,Br[s]);
                    r.addData(Kr(t)),
                        r.make();
                    var l = r.modules
                        , c = n / l.length
                        , d = n / l.length
                        , u = window.devicePixelRatio || 1;
                    if ("svg" === o)
                        this.numCells = l.length,
                            this.fgPath = Xr(l);
                    else {
                        var m = this.$refs["qrcode-vue"]
                            , p = m.getContext("2d");
                        m.height = m.width = n * u,
                            p.scale(u, u),
                            l.forEach((function(t, e) {
                                    t.forEach((function(t, s) {
                                            p.fillStyle = t ? i : a;
                                            var o = Math.ceil((s + 1) * c) - Math.floor(s * c)
                                                , n = Math.ceil((e + 1) * d) - Math.floor(e * d);
                                            p.fillRect(Math.round(s * c), Math.round(e * d), o, n)
                                        }
                                    ))
                                }
                            ))
                    }
                }
            },
            render: function(t) {
                var e = this.className
                    , s = this.value
                    , a = this.level
                    , i = this.background
                    , o = this.foreground
                    , n = this.size
                    , r = this.renderAs
                    , l = this.numCells
                    , c = this.fgPath;
                return t("div", {
                    class: this.class || e,
                    attrs: {
                        value: s,
                        level: a,
                        background: i,
                        foreground: o
                    }
                }, ["svg" === r ? t("svg", {
                    attrs: {
                        height: n,
                        width: n,
                        shapeRendering: "crispEdges",
                        viewBox: "0 0 ".concat(l, " ").concat(l)
                    },
                    style: {
                        width: n + "px",
                        height: n + "px"
                    }
                }, [t("path", {
                    attrs: {
                        fill: i,
                        d: "M0,0 h".concat(l, "v").concat(l, "H0z")
                    }
                }), t("path", {
                    attrs: {
                        fill: o,
                        d: c
                    }
                })]) : t("canvas", {
                    attrs: {
                        height: n,
                        width: n
                    },
                    style: {
                        width: n + "px",
                        height: n + "px"
                    },
                    ref: "qrcode-vue"
                }, [])])
            }
        }
            , tl = Qr
            , el = {
            name: "QrCodeModal",
            components: {
                QrcodeVue: tl
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        qrCode: !1
                    }),
                        this.$store.commit(n["O"], null)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalQrCode"]),
                value() {
                    return this.modalQrCode.value
                },
                size() {
                    return window.innerWidth > 1e3 ? 500 : 250
                }
            }
        }
            , sl = el
            , al = (s("9c6d"),
            y(sl, Tr, Lr, !1, null, "7cb0c197", null))
            , il = al.exports
            , ol = function() {
            var t = this
                , e = t._self._c;
            return t.isMobile ? e("div", {
                ref: "landscape",
                staticClass: "modal-wrapper"
            }, [t._m(0)]) : t._e()
        }
            , nl = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal"
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("The system is optimized to work"), e("br"), t._v("in a portrait mode on mobile."), e("br"), e("br"), t._v("Please hold your phone vertically.")])]), e("i", {
                staticClass: "material-icons landscape"
            }, [t._v("screen_lock_landscape")])])
        }
        ]
            , rl = {
            name: "NoLandscape",
            mounted() {
                window.addEventListener("orientationchange", this.handleOrientationChange)
            },
            data() {
                return {
                    isMobile: Object(l["h"])()
                }
            },
            methods: {
                handleOrientationChange() {
                    var t, e;
                    const s = null === (t = window) || void 0 === t || null === (t = t.screen) || void 0 === t || null === (t = t.orientation) || void 0 === t ? void 0 : t.type;
                    s && null !== (e = this.$refs) && void 0 !== e && e.landscape && ("landscape-primary" === s ? this.$refs.landscape.style.display = "flex" : "portrait-primary" === s && (this.$refs.landscape.style.display = "none"))
                }
            }
        }
            , ll = rl
            , cl = (s("39bb"),
            y(ll, ol, nl, !1, null, "16460fa4", null))
            , dl = cl.exports
            , ul = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.pciDssModal
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("PCI DSS COMPLIANT")]), e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [t._v(" " + t._s(t.tokens.pciDssModal.desc) + " ")])])])])
        }
            , ml = []
            , pl = {
            name: "PciDssModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        pciDssModal: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            }
        }
            , hl = pl
            , vl = (s("1b2d"),
            y(hl, ul, ml, !1, null, "362acc4e", null))
            , fl = vl.exports
            , gl = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.timePicker
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.timePickerModal.title.toUpperCase()))]), e("DatePicker", {
                attrs: {
                    type: "datetime",
                    confirm: !0,
                    "value-type": "timestamp",
                    "confirm-text": t.tokens.autoCloseModal.updateOrder
                },
                on: {
                    confirm: t.updateOrder
                },
                model: {
                    value: t.values.expiration,
                    callback: function(e) {
                        t.$set(t.values, "expiration", e)
                    },
                    expression: "values.expiration"
                }
            }), t._v(" " + t._s(t.values.expiration) + " ")], 1)])
        }
            , bl = [];
        function yl(t) {
            return t instanceof Date || "[object Date]" === Object.prototype.toString.call(t)
        }
        function _l(t) {
            return yl(t) ? new Date(t.getTime()) : null == t ? new Date(NaN) : new Date(t)
        }
        function Cl(t) {
            return yl(t) && !isNaN(t.getTime())
        }
        function wl(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            if (!(e >= 0 && e <= 6))
                throw new RangeError("weekStartsOn must be between 0 and 6");
            var s = _l(t)
                , a = s.getDay()
                , i = (a + 7 - e) % 7;
            return s.setDate(s.getDate() - i),
                s.setHours(0, 0, 0, 0),
                s
        }
        function kl(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                , s = e.firstDayOfWeek
                , a = void 0 === s ? 0 : s
                , i = e.firstWeekContainsDate
                , o = void 0 === i ? 1 : i;
            if (!(o >= 1 && o <= 7))
                throw new RangeError("firstWeekContainsDate must be between 1 and 7");
            for (var n = _l(t), r = n.getFullYear(), l = new Date(0), c = r + 1; c >= r - 1; c--)
                if (l.setFullYear(c, 0, o),
                    l.setHours(0, 0, 0, 0),
                    l = wl(l, a),
                n.getTime() >= l.getTime())
                    break;
            return l
        }
        function Sl(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                , s = e.firstDayOfWeek
                , a = void 0 === s ? 0 : s
                , i = e.firstWeekContainsDate
                , o = void 0 === i ? 1 : i
                , n = _l(t)
                , r = wl(n, a)
                , l = kl(n, {
                firstDayOfWeek: a,
                firstWeekContainsDate: o
            })
                , c = r.getTime() - l.getTime();
            return Math.round(c / 6048e5) + 1
        }
        var xl = {
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            weekdays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            weekdaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            weekdaysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            firstDayOfWeek: 0,
            firstWeekContainsDate: 1
        }
            , Ml = xl
            , Al = /\[([^\]]+)]|YYYY|YY?|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|Z{1,2}|S{1,3}|w{1,2}|x|X|a|A/g;
        function Dl(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2
                , s = "".concat(Math.abs(t))
                , a = t < 0 ? "-" : "";
            while (s.length < e)
                s = "0".concat(s);
            return a + s
        }
        function Pl(t) {
            return 15 * Math.round(t.getTimezoneOffset() / 15)
        }
        function Tl(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ""
                , s = t > 0 ? "-" : "+"
                , a = Math.abs(t)
                , i = Math.floor(a / 60)
                , o = a % 60;
            return s + Dl(i, 2) + e + Dl(o, 2)
        }
        var Ll = function(t, e, s) {
            var a = t < 12 ? "AM" : "PM";
            return s ? a.toLocaleLowerCase() : a
        }
            , Il = {
            Y: function(t) {
                var e = t.getFullYear();
                return e <= 9999 ? "".concat(e) : "+".concat(e)
            },
            YY: function(t) {
                return Dl(t.getFullYear(), 4).substr(2)
            },
            YYYY: function(t) {
                return Dl(t.getFullYear(), 4)
            },
            M: function(t) {
                return t.getMonth() + 1
            },
            MM: function(t) {
                return Dl(t.getMonth() + 1, 2)
            },
            MMM: function(t, e) {
                return e.monthsShort[t.getMonth()]
            },
            MMMM: function(t, e) {
                return e.months[t.getMonth()]
            },
            D: function(t) {
                return t.getDate()
            },
            DD: function(t) {
                return Dl(t.getDate(), 2)
            },
            H: function(t) {
                return t.getHours()
            },
            HH: function(t) {
                return Dl(t.getHours(), 2)
            },
            h: function(t) {
                var e = t.getHours();
                return 0 === e ? 12 : e > 12 ? e % 12 : e
            },
            hh: function() {
                var t = Il.h.apply(Il, arguments);
                return Dl(t, 2)
            },
            m: function(t) {
                return t.getMinutes()
            },
            mm: function(t) {
                return Dl(t.getMinutes(), 2)
            },
            s: function(t) {
                return t.getSeconds()
            },
            ss: function(t) {
                return Dl(t.getSeconds(), 2)
            },
            S: function(t) {
                return Math.floor(t.getMilliseconds() / 100)
            },
            SS: function(t) {
                return Dl(Math.floor(t.getMilliseconds() / 10), 2)
            },
            SSS: function(t) {
                return Dl(t.getMilliseconds(), 3)
            },
            d: function(t) {
                return t.getDay()
            },
            dd: function(t, e) {
                return e.weekdaysMin[t.getDay()]
            },
            ddd: function(t, e) {
                return e.weekdaysShort[t.getDay()]
            },
            dddd: function(t, e) {
                return e.weekdays[t.getDay()]
            },
            A: function(t, e) {
                var s = e.meridiem || Ll;
                return s(t.getHours(), t.getMinutes(), !1)
            },
            a: function(t, e) {
                var s = e.meridiem || Ll;
                return s(t.getHours(), t.getMinutes(), !0)
            },
            Z: function(t) {
                return Tl(Pl(t), ":")
            },
            ZZ: function(t) {
                return Tl(Pl(t))
            },
            X: function(t) {
                return Math.floor(t.getTime() / 1e3)
            },
            x: function(t) {
                return t.getTime()
            },
            w: function(t, e) {
                return Sl(t, {
                    firstDayOfWeek: e.firstDayOfWeek,
                    firstWeekContainsDate: e.firstWeekContainsDate
                })
            },
            ww: function(t, e) {
                return Dl(Il.w(t, e), 2)
            }
        };
        function Fl(t, e) {
            var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
                , a = e ? String(e) : "YYYY-MM-DDTHH:mm:ss.SSSZ"
                , i = _l(t);
            if (!Cl(i))
                return "Invalid Date";
            var o = s.locale || Ml;
            return a.replace(Al, (function(t, e) {
                    return e || ("function" === typeof Il[t] ? "".concat(Il[t](i, o)) : t)
                }
            ))
        }
        function Ol(t) {
            return $l(t) || Nl(t) || Bl()
        }
        function Bl() {
            throw new TypeError("Invalid attempt to spread non-iterable instance")
        }
        function Nl(t) {
            if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t))
                return Array.from(t)
        }
        function $l(t) {
            if (Array.isArray(t)) {
                for (var e = 0, s = new Array(t.length); e < t.length; e++)
                    s[e] = t[e];
                return s
            }
        }
        function Vl(t, e) {
            var s = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(t);
                e && (a = a.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }
                ))),
                    s.push.apply(s, a)
            }
            return s
        }
        function El(t) {
            for (var e = 1; e < arguments.length; e++) {
                var s = null != arguments[e] ? arguments[e] : {};
                e % 2 ? Vl(s, !0).forEach((function(e) {
                        Rl(t, e, s[e])
                    }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(s)) : Vl(s).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(s, e))
                    }
                ))
            }
            return t
        }
        function Ul(t, e) {
            return ql(t) || jl(t, e) || Hl()
        }
        function Hl() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
        function jl(t, e) {
            if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) {
                var s = []
                    , a = !0
                    , i = !1
                    , o = void 0;
                try {
                    for (var n, r = t[Symbol.iterator](); !(a = (n = r.next()).done); a = !0)
                        if (s.push(n.value),
                        e && s.length === e)
                            break
                } catch (l) {
                    i = !0,
                        o = l
                } finally {
                    try {
                        a || null == r["return"] || r["return"]()
                    } finally {
                        if (i)
                            throw o
                    }
                }
                return s
            }
        }
        function ql(t) {
            if (Array.isArray(t))
                return t
        }
        function Rl(t, e, s) {
            return e in t ? Object.defineProperty(t, e, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = s,
                t
        }
        var Wl = /(\[[^\[]*\])|(MM?M?M?|Do|DD?|ddd?d?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|S{1,3}|x|X|ZZ?|.)/g
            , zl = /\d/
            , Gl = /\d\d/
            , Yl = /\d{3}/
            , Zl = /\d{4}/
            , Jl = /\d\d?/
            , Kl = /[+-]\d\d:?\d\d/
            , Xl = /[+-]?\d+/
            , Ql = /[+-]?\d+(\.\d{1,3})?/
            , tc = "year"
            , ec = "month"
            , sc = "day"
            , ac = "hour"
            , ic = "minute"
            , oc = "second"
            , nc = "millisecond"
            , rc = {}
            , lc = function(t, e, s) {
            var a, i = Array.isArray(t) ? t : [t];
            a = "string" === typeof s ? function(t) {
                    var e = parseInt(t, 10);
                    return Rl({}, s, e)
                }
                : s,
                i.forEach((function(t) {
                        rc[t] = [e, a]
                    }
                ))
        }
            , cc = function(t) {
            return t.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&")
        }
            , dc = function(t) {
            return function(e) {
                var s = e[t];
                if (!Array.isArray(s))
                    throw new Error("Locale[".concat(t, "] need an array"));
                return new RegExp(s.map(cc).join("|"))
            }
        }
            , uc = function(t, e) {
            return function(s, a) {
                var i = a[t];
                if (!Array.isArray(i))
                    throw new Error("Locale[".concat(t, "] need an array"));
                var o = i.indexOf(s);
                if (o < 0)
                    throw new Error("Invalid Word");
                return Rl({}, e, o)
            }
        };
        function mc(t) {
            return t.meridiemParse || /[ap]\.?m?\.?/i
        }
        function pc(t) {
            return "p" === "".concat(t).toLowerCase().charAt(0)
        }
        function hc(t) {
            var e = t.match(/([+-]|\d\d)/g) || ["-", "0", "0"]
                , s = Ul(e, 3)
                , a = s[0]
                , i = s[1]
                , o = s[2]
                , n = 60 * parseInt(i, 10) + parseInt(o, 10);
            return 0 === n ? 0 : "+" === a ? -n : +n
        }
        function vc(t, e) {
            if (void 0 !== t && void 0 !== e)
                if (e) {
                    if (t < 12)
                        return t + 12
                } else if (12 === t)
                    return 0;
            return t
        }
        function fc(t) {
            for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Date, s = [0, 0, 1, 0, 0, 0, 0], a = [e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes(), e.getSeconds(), e.getMilliseconds()], i = !0, o = 0; o < 7; o++)
                void 0 === t[o] ? s[o] = i ? a[o] : s[o] : (s[o] = t[o],
                    i = !1);
            return s
        }
        function gc(t, e, s, a, i, o, n) {
            var r;
            return t < 100 && t >= 0 ? (r = new Date(t + 400,e,s,a,i,o,n),
            isFinite(r.getFullYear()) && r.setFullYear(t)) : r = new Date(t,e,s,a,i,o,n),
                r
        }
        function bc() {
            for (var t, e = arguments.length, s = new Array(e), a = 0; a < e; a++)
                s[a] = arguments[a];
            var i = s[0];
            return i < 100 && i >= 0 ? (s[0] += 400,
                t = new Date(Date.UTC.apply(Date, s)),
            isFinite(t.getUTCFullYear()) && t.setUTCFullYear(i)) : t = new Date(Date.UTC.apply(Date, s)),
                t
        }
        function yc(t, e, s) {
            var a = e.match(Wl);
            if (!a)
                throw new Error;
            for (var i = a.length, o = {}, n = 0; n < i; n += 1) {
                var r = a[n]
                    , l = rc[r];
                if (l) {
                    var c = "function" === typeof l[0] ? l[0](s) : l[0]
                        , d = l[1]
                        , u = (c.exec(t) || [])[0]
                        , m = d(u, s);
                    o = El({}, o, {}, m),
                        t = t.replace(u, "")
                } else {
                    var p = r.replace(/^\[|\]$/g, "");
                    if (0 !== t.indexOf(p))
                        throw new Error("not match");
                    t = t.substr(p.length)
                }
            }
            return o
        }
        function _c(t, e) {
            var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            try {
                var a = s.locale
                    , i = void 0 === a ? Ml : a
                    , o = s.backupDate
                    , n = void 0 === o ? new Date : o
                    , r = yc(t, e, i)
                    , l = r.year
                    , c = r.month
                    , d = r.day
                    , u = r.hour
                    , m = r.minute
                    , p = r.second
                    , h = r.millisecond
                    , v = r.isPM
                    , f = r.date
                    , g = r.offset
                    , b = r.weekday
                    , y = r.week;
                if (f)
                    return f;
                var _, C = [l, c, d, u, m, p, h];
                if (C[3] = vc(C[3], v),
                void 0 !== y && void 0 === c && void 0 === d) {
                    var w = kl(void 0 === l ? n : new Date(l,3), {
                        firstDayOfWeek: i.firstDayOfWeek,
                        firstWeekContainsDate: i.firstWeekContainsDate
                    });
                    return new Date(w.getTime() + 7 * (y - 1) * 24 * 3600 * 1e3)
                }
                var k = fc(C, n);
                return void 0 !== g ? (k[6] += 60 * g * 1e3,
                    _ = bc.apply(void 0, Ol(k))) : _ = gc.apply(void 0, Ol(k)),
                    void 0 !== b && _.getDay() !== b ? new Date(NaN) : _
            } catch (S) {
                return new Date(NaN)
            }
        }
        function Cc(t) {
            return Cc = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                Cc(t)
        }
        function wc(t, e, s) {
            return e in t ? Object.defineProperty(t, e, {
                value: s,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = s,
                t
        }
        function kc() {
            return kc = Object.assign || function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var s = arguments[e];
                    for (var a in s)
                        Object.prototype.hasOwnProperty.call(s, a) && (t[a] = s[a])
                }
                return t
            }
                ,
                kc.apply(this, arguments)
        }
        function Sc(t, e) {
            var s = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(t);
                e && (a = a.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }
                ))),
                    s.push.apply(s, a)
            }
            return s
        }
        function xc(t) {
            for (var e = 1; e < arguments.length; e++) {
                var s = null != arguments[e] ? arguments[e] : {};
                e % 2 ? Sc(Object(s), !0).forEach((function(e) {
                        wc(t, e, s[e])
                    }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(s)) : Sc(Object(s)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(s, e))
                    }
                ))
            }
            return t
        }
        function Mc(t, e) {
            if (null == t)
                return {};
            var s, a, i = {}, o = Object.keys(t);
            for (a = 0; a < o.length; a++)
                s = o[a],
                e.indexOf(s) >= 0 || (i[s] = t[s]);
            return i
        }
        function Ac(t, e) {
            if (null == t)
                return {};
            var s, a, i = Mc(t, e);
            if (Object.getOwnPropertySymbols) {
                var o = Object.getOwnPropertySymbols(t);
                for (a = 0; a < o.length; a++)
                    s = o[a],
                    e.indexOf(s) >= 0 || Object.prototype.propertyIsEnumerable.call(t, s) && (i[s] = t[s])
            }
            return i
        }
        function Dc(t, e) {
            return Pc(t) || Tc(t, e) || Lc(t, e) || Fc()
        }
        function Pc(t) {
            if (Array.isArray(t))
                return t
        }
        function Tc(t, e) {
            if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) {
                var s = []
                    , a = !0
                    , i = !1
                    , o = void 0;
                try {
                    for (var n, r = t[Symbol.iterator](); !(a = (n = r.next()).done); a = !0)
                        if (s.push(n.value),
                        e && s.length === e)
                            break
                } catch (l) {
                    i = !0,
                        o = l
                } finally {
                    try {
                        a || null == r["return"] || r["return"]()
                    } finally {
                        if (i)
                            throw o
                    }
                }
                return s
            }
        }
        function Lc(t, e) {
            if (t) {
                if ("string" === typeof t)
                    return Ic(t, e);
                var s = Object.prototype.toString.call(t).slice(8, -1);
                return "Object" === s && t.constructor && (s = t.constructor.name),
                    "Map" === s || "Set" === s ? Array.from(s) : "Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s) ? Ic(t, e) : void 0
            }
        }
        function Ic(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var s = 0, a = new Array(e); s < e; s++)
                a[s] = t[s];
            return a
        }
        function Fc() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        function Oc() {
            return Oc = Object.assign || function(t) {
                for (var e, s = 1; s < arguments.length; s++)
                    for (var a in e = arguments[s],
                        e)
                        Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]);
                return t
            }
                ,
                Oc.apply(this, arguments)
        }
        lc("Y", Xl, tc),
            lc("YY", Gl, (function(t) {
                    var e = (new Date).getFullYear()
                        , s = Math.floor(e / 100)
                        , a = parseInt(t, 10);
                    return a = 100 * (a > 68 ? s - 1 : s) + a,
                        Rl({}, tc, a)
                }
            )),
            lc("YYYY", Zl, tc),
            lc("M", Jl, (function(t) {
                    return Rl({}, ec, parseInt(t, 10) - 1)
                }
            )),
            lc("MM", Gl, (function(t) {
                    return Rl({}, ec, parseInt(t, 10) - 1)
                }
            )),
            lc("MMM", dc("monthsShort"), uc("monthsShort", ec)),
            lc("MMMM", dc("months"), uc("months", ec)),
            lc("D", Jl, sc),
            lc("DD", Gl, sc),
            lc(["H", "h"], Jl, ac),
            lc(["HH", "hh"], Gl, ac),
            lc("m", Jl, ic),
            lc("mm", Gl, ic),
            lc("s", Jl, oc),
            lc("ss", Gl, oc),
            lc("S", zl, (function(t) {
                    return Rl({}, nc, 100 * parseInt(t, 10))
                }
            )),
            lc("SS", Gl, (function(t) {
                    return Rl({}, nc, 10 * parseInt(t, 10))
                }
            )),
            lc("SSS", Yl, nc),
            lc(["A", "a"], mc, (function(t, e) {
                    var s = "function" === typeof e.isPM ? e.isPM(t) : pc(t);
                    return {
                        isPM: s
                    }
                }
            )),
            lc(["Z", "ZZ"], Kl, (function(t) {
                    return {
                        offset: hc(t)
                    }
                }
            )),
            lc("x", Xl, (function(t) {
                    return {
                        date: new Date(parseInt(t, 10))
                    }
                }
            )),
            lc("X", Ql, (function(t) {
                    return {
                        date: new Date(1e3 * parseFloat(t))
                    }
                }
            )),
            lc("d", zl, "weekday"),
            lc("dd", dc("weekdaysMin"), uc("weekdaysMin", "weekday")),
            lc("ddd", dc("weekdaysShort"), uc("weekdaysShort", "weekday")),
            lc("dddd", dc("weekdays"), uc("weekdays", "weekday")),
            lc("w", Jl, "week"),
            lc("ww", Gl, "week");
        var Bc = ["attrs", "props", "domProps"]
            , Nc = ["class", "style", "directives"]
            , $c = ["on", "nativeOn"]
            , Vc = function(t) {
            return t.reduce((function(t, e) {
                    for (var s in e)
                        if (t[s])
                            if (-1 !== Bc.indexOf(s))
                                t[s] = Oc({}, t[s], e[s]);
                            else if (-1 !== Nc.indexOf(s)) {
                                var a = t[s]instanceof Array ? t[s] : [t[s]]
                                    , i = e[s]instanceof Array ? e[s] : [e[s]];
                                t[s] = a.concat(i)
                            } else if (-1 !== $c.indexOf(s))
                                for (var o in e[s])
                                    if (t[s][o]) {
                                        var n = t[s][o]instanceof Array ? t[s][o] : [t[s][o]]
                                            , r = e[s][o]instanceof Array ? e[s][o] : [e[s][o]];
                                        t[s][o] = n.concat(r)
                                    } else
                                        t[s][o] = e[s][o];
                            else if ("hook" == s)
                                for (var l in e[s])
                                    t[s][l] = t[s][l] ? Ec(t[s][l], e[s][l]) : e[s][l];
                            else
                                t[s] = e[s];
                        else
                            t[s] = e[s];
                    return t
                }
            ), {})
        }
            , Ec = function(t, e) {
            return function() {
                t && t.apply(this, arguments),
                e && e.apply(this, arguments)
            }
        }
            , Uc = Vc;
        function Hc(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                , s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1
                , a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0
                , i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0
                , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0
                , n = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0
                , r = new Date(t,e,s,a,i,o,n);
            return t < 100 && t >= 0 && r.setFullYear(t),
                r
        }
        function jc(t) {
            return t instanceof Date && !isNaN(t)
        }
        function qc(t) {
            return Array.isArray(t) && 2 === t.length && t.every(jc) && t[0] <= t[1]
        }
        function Rc(t) {
            return Array.isArray(t) && t.every(jc)
        }
        function Wc(t) {
            var e = new Date(t);
            if (jc(e))
                return e;
            for (var s = arguments.length, a = new Array(s > 1 ? s - 1 : 0), i = 1; i < s; i++)
                a[i - 1] = arguments[i];
            return a.length ? Wc.apply(void 0, a) : new Date
        }
        function zc(t) {
            var e = new Date(t);
            return e.setMonth(0, 1),
                e.setHours(0, 0, 0, 0),
                e
        }
        function Gc(t) {
            var e = new Date(t);
            return e.setDate(1),
                e.setHours(0, 0, 0, 0),
                e
        }
        function Yc(t) {
            var e = new Date(t);
            return e.setHours(0, 0, 0, 0),
                e
        }
        function Zc(t) {
            for (var e = t.firstDayOfWeek, s = t.year, a = t.month, i = [], o = Hc(s, a, 0), n = o.getDate(), r = n - (o.getDay() + 7 - e) % 7, l = r; l <= n; l++)
                i.push(Hc(s, a, l - n));
            o.setMonth(a + 1, 0);
            for (var c = o.getDate(), d = 1; d <= c; d++)
                i.push(Hc(s, a, d));
            for (var u = n - r + 1, m = 42 - u - c, p = 1; p <= m; p++)
                i.push(Hc(s, a, c + p));
            return i
        }
        function Jc(t, e) {
            var s = new Date(t)
                , a = "function" === typeof e ? e(s.getMonth()) : Number(e)
                , i = s.getFullYear()
                , o = Hc(i, a + 1, 0).getDate()
                , n = s.getDate();
            return s.setMonth(a, Math.min(n, o)),
                s
        }
        function Kc(t, e) {
            var s = new Date(t)
                , a = "function" === typeof e ? e(s.getFullYear()) : e;
            return s.setFullYear(a),
                s
        }
        function Xc(t, e) {
            var s = new Date(t)
                , a = new Date(e);
            return s.setHours(a.getHours(), a.getMinutes(), a.getSeconds()),
                s
        }
        function Qc(t, e) {
            if (!Array.isArray(t))
                return [];
            var s = []
                , a = t.length
                , i = 0;
            e = e || a;
            while (i < a)
                s.push(t.slice(i, i += e));
            return s
        }
        function td(t) {
            return "[object Object]" === Object.prototype.toString.call(t)
        }
        function ed(t, e) {
            if (!td(t))
                return {};
            Array.isArray(e) || (e = [e]);
            var s = {};
            return e.forEach((function(e) {
                    e in t && (s[e] = t[e])
                }
            )),
                s
        }
        function sd(t, e) {
            if (!td(t))
                return {};
            var s = t;
            return td(e) && Object.keys(e).forEach((function(a) {
                    var i = e[a];
                    td(i) && td(t[a]) && (i = sd(t[a], i)),
                        s = xc({}, s, wc({}, a, i))
                }
            )),
                s
        }
        function ad(t) {
            return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t["default"] : t
        }
        function id(t, e) {
            return e = {
                exports: {}
            },
                t(e, e.exports),
                e.exports
        }
        var od = id((function(t, e) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                    e["default"] = void 0;
                var s = {
                    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    weekdays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    weekdaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    weekdaysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                    firstDayOfWeek: 0,
                    firstWeekContainsDate: 1
                }
                    , a = s;
                e["default"] = a,
                    t.exports = e.default
            }
        ))
            , nd = ad(od)
            , rd = {
            formatLocale: nd,
            yearFormat: "YYYY",
            monthFormat: "MMM",
            monthBeforeYear: !0
        }
            , ld = "en"
            , cd = {};
        function dd(t, e, s) {
            if ("string" !== typeof t)
                return cd[ld];
            var a = ld;
            return cd[t] && (a = t),
            e && (cd[t] = e,
                a = t),
            s || (ld = a),
            cd[t] || cd[ld]
        }
        function ud(t) {
            return dd(t, null, !0)
        }
        function md(t) {
            var e = !1;
            return function() {
                for (var s = this, a = arguments.length, i = new Array(a), o = 0; o < a; o++)
                    i[o] = arguments[o];
                e || (e = !0,
                    requestAnimationFrame((function() {
                            e = !1,
                                t.apply(s, i)
                        }
                    )))
            }
        }
        function pd(t) {
            var e = t.style.display
                , s = t.style.visibility;
            t.style.display = "block",
                t.style.visibility = "hidden";
            var a = window.getComputedStyle(t)
                , i = t.offsetWidth + parseInt(a.marginLeft, 10) + parseInt(a.marginRight, 10)
                , o = t.offsetHeight + parseInt(a.marginTop, 10) + parseInt(a.marginBottom, 10);
            return t.style.display = e,
                t.style.visibility = s,
                {
                    width: i,
                    height: o
                }
        }
        function hd(t, e, s, a) {
            var i = 0
                , o = 0
                , n = 0
                , r = 0
                , l = t.getBoundingClientRect()
                , c = document.documentElement.clientWidth
                , d = document.documentElement.clientHeight;
            return a && (n = window.pageXOffset + l.left,
                r = window.pageYOffset + l.top),
                i = c - l.left < e && l.right < e ? n - l.left + 1 : l.left + l.width / 2 <= c / 2 ? n : n + l.width - e,
                o = l.top <= s && d - l.bottom <= s ? r + d - l.top - s : l.top + l.height / 2 <= d / 2 ? r + l.height : r - s,
                {
                    left: "".concat(i, "px"),
                    top: "".concat(o, "px")
                }
        }
        function vd(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : document.body;
            if (!t || t === e)
                return null;
            var s = function(t, e) {
                return getComputedStyle(t, null).getPropertyValue(e)
            }
                , a = /(auto|scroll)/
                , i = a.test(s(t, "overflow") + s(t, "overflow-y") + s(t, "overflow-x"));
            return i ? t : vd(t.parentNode, e)
        }
        cd[ld] = rd;
        var fd = {
            name: "Popup",
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                visible: {
                    type: Boolean,
                    default: !1
                },
                appendToBody: {
                    type: Boolean,
                    default: !0
                }
            },
            data: function() {
                return {
                    top: "",
                    left: ""
                }
            },
            watch: {
                visible: {
                    immediate: !0,
                    handler: function(t) {
                        var e = this;
                        this.$nextTick((function() {
                                t && e.displayPopup()
                            }
                        ))
                    }
                }
            },
            mounted: function() {
                var t = this;
                this.appendToBody && document.body.appendChild(this.$el),
                    this._clickoutEvent = "ontouchend"in document ? "touchstart" : "mousedown",
                    document.addEventListener(this._clickoutEvent, this.handleClickOutside);
                var e = this.$parent.$el;
                this._displayPopup = md((function() {
                        return t.displayPopup()
                    }
                )),
                    this._scrollParent = vd(e) || window,
                    this._scrollParent.addEventListener("scroll", this._displayPopup),
                    window.addEventListener("resize", this._displayPopup)
            },
            beforeDestroy: function() {
                this.appendToBody && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el),
                    document.removeEventListener(this._clickoutEvent, this.handleClickOutside),
                    this._scrollParent.removeEventListener("scroll", this._displayPopup),
                    window.removeEventListener("resize", this._displayPopup)
            },
            methods: {
                handleClickOutside: function(t) {
                    if (this.visible) {
                        var e = t.target
                            , s = this.$el;
                        s && !s.contains(e) && this.$emit("clickoutside", t)
                    }
                },
                displayPopup: function() {
                    if (this.visible) {
                        var t = this.$el
                            , e = this.$parent.$el
                            , s = this.appendToBody;
                        this._popupRect || (this._popupRect = pd(t));
                        var a = this._popupRect
                            , i = a.width
                            , o = a.height
                            , n = hd(e, i, o, s)
                            , r = n.left
                            , l = n.top;
                        this.left = r,
                            this.top = l
                    }
                }
            }
        };
        function gd(t, e, s, a, i, o, n, r, l, c) {
            "boolean" !== typeof n && (l = r,
                r = n,
                n = !1);
            var d, u = "function" === typeof s ? s.options : s;
            if (t && t.render && (u.render = t.render,
                u.staticRenderFns = t.staticRenderFns,
                u._compiled = !0,
            i && (u.functional = !0)),
            a && (u._scopeId = a),
                o ? (d = function(t) {
                    t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext,
                    t || "undefined" === typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__),
                    e && e.call(this, l(t)),
                    t && t._registeredComponents && t._registeredComponents.add(o)
                }
                    ,
                    u._ssrRegister = d) : e && (d = n ? function(t) {
                            e.call(this, c(t, this.$root.$options.shadowRoot))
                        }
                        : function(t) {
                            e.call(this, r(t))
                        }
                ),
                d)
                if (u.functional) {
                    var m = u.render;
                    u.render = function(t, e) {
                        return d.call(e),
                            m(t, e)
                    }
                } else {
                    var p = u.beforeCreate;
                    u.beforeCreate = p ? [].concat(p, d) : [d]
                }
            return s
        }
        var bd, yd = fd, _d = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("transition", {
                attrs: {
                    name: t.prefixClass + "-zoom-in-down"
                }
            }, [t.visible ? s("div", {
                class: t.prefixClass + "-datepicker-main " + t.prefixClass + "-datepicker-popup",
                style: {
                    top: t.top,
                    left: t.left,
                    position: "absolute"
                }
            }, [t._t("default")], 2) : t._e()])
        }, Cd = [], wd = void 0, kd = void 0, Sd = void 0, xd = !1, Md = gd({
            render: _d,
            staticRenderFns: Cd
        }, wd, yd, kd, xd, Sd, !1, void 0, void 0, void 0), Ad = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 1024 1024",
                    width: "1em",
                    height: "1em"
                }
            }, [s("path", {
                attrs: {
                    d: "M940.218182 107.054545h-209.454546V46.545455h-65.163636v60.50909H363.054545V46.545455H297.890909v60.50909H83.781818c-18.618182 0-32.581818 13.963636-32.581818 32.581819v805.236363c0 18.618182 13.963636 32.581818 32.581818 32.581818h861.090909c18.618182 0 32.581818-13.963636 32.581818-32.581818V139.636364c-4.654545-18.618182-18.618182-32.581818-37.236363-32.581819zM297.890909 172.218182V232.727273h65.163636V172.218182h307.2V232.727273h65.163637V172.218182h176.872727v204.8H116.363636V172.218182h181.527273zM116.363636 912.290909V442.181818h795.927273v470.109091H116.363636z"
                }
            })])
        }, Dd = [], Pd = void 0, Td = void 0, Ld = void 0, Id = !1, Fd = gd({
            render: Ad,
            staticRenderFns: Dd
        }, Pd, {}, Td, Id, Ld, !1, void 0, void 0, void 0), Od = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    width: "1em",
                    height: "1em"
                }
            }, [s("path", {
                attrs: {
                    d: "M0 0h24v24H0z",
                    fill: "none"
                }
            }), t._v(" "), s("path", {
                attrs: {
                    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                }
            }), t._v(" "), s("path", {
                attrs: {
                    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
                }
            })])
        }, Bd = [], Nd = void 0, $d = void 0, Vd = void 0, Ed = !1, Ud = gd({
            render: Od,
            staticRenderFns: Bd
        }, Nd, {}, $d, Ed, Vd, !1, void 0, void 0, void 0), Hd = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 1024 1024",
                    width: "1em",
                    height: "1em"
                }
            }, [s("path", {
                attrs: {
                    d: "M810.005333 274.005333l-237.994667 237.994667 237.994667 237.994667-60.010667 60.010667-237.994667-237.994667-237.994667 237.994667-60.010667-60.010667 237.994667-237.994667-237.994667-237.994667 60.010667-60.010667 237.994667 237.994667 237.994667-237.994667z"
                }
            })])
        }, jd = [], qd = void 0, Rd = void 0, Wd = void 0, zd = !1, Gd = gd({
            render: Hd,
            staticRenderFns: jd
        }, qd, {}, Rd, zd, Wd, !1, void 0, void 0, void 0), Yd = {
            props: {
                type: String,
                disabled: Boolean
            },
            inject: {
                prefixClass: {
                    default: "mx"
                }
            }
        }, Zd = Yd, Jd = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("button", t._g({
                class: [t.prefixClass + "-btn " + t.prefixClass + "-btn-text " + t.prefixClass + "-btn-icon-" + t.type, {
                    disabled: t.disabled
                }],
                attrs: {
                    type: "button",
                    disabled: t.disabled
                }
            }, t.$listeners), [s("i", {
                class: t.prefixClass + "-icon-" + t.type
            })])
        }, Kd = [], Xd = void 0, Qd = void 0, tu = void 0, eu = !1, su = gd({
            render: Jd,
            staticRenderFns: Kd
        }, Xd, Zd, Qd, eu, tu, !1, void 0, void 0, void 0), au = {
            name: "TableDate",
            components: {
                IconButton: su
            },
            inject: {
                getLocale: {
                    default: function() {
                        return ud
                    }
                },
                getWeek: {
                    default: function() {
                        return Sl
                    }
                },
                prefixClass: {
                    default: "mx"
                },
                onDateMouseEnter: {
                    default: void 0
                },
                onDateMouseLeave: {
                    default: void 0
                }
            },
            props: {
                disabledCalendarChanger: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                calendar: {
                    type: Date,
                    default: function() {
                        return new Date
                    }
                },
                showWeekNumber: {
                    type: Boolean,
                    default: !1
                },
                titleFormat: {
                    type: String,
                    default: "YYYY-MM-DD"
                },
                getRowClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                },
                getCellClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                }
            },
            computed: {
                firstDayOfWeek: function() {
                    return this.getLocale().formatLocale.firstDayOfWeek || 0
                },
                yearMonth: function() {
                    var t = this.getLocale()
                        , e = t.yearFormat
                        , s = t.monthBeforeYear
                        , a = t.monthFormat
                        , i = void 0 === a ? "MMM" : a
                        , o = {
                        panel: "year",
                        label: this.formatDate(this.calendar, e)
                    }
                        , n = {
                        panel: "month",
                        label: this.formatDate(this.calendar, i)
                    };
                    return s ? [n, o] : [o, n]
                },
                days: function() {
                    var t = this.getLocale()
                        , e = t.days || t.formatLocale.weekdaysMin;
                    return e.concat(e).slice(this.firstDayOfWeek, this.firstDayOfWeek + 7)
                },
                dates: function() {
                    var t = this.calendar.getFullYear()
                        , e = this.calendar.getMonth()
                        , s = Zc({
                        firstDayOfWeek: this.firstDayOfWeek,
                        year: t,
                        month: e
                    });
                    return Qc(s, 7)
                }
            },
            methods: {
                isDisabledArrows: function(t) {
                    var e = new Date(this.calendar);
                    switch (t) {
                        case "last-year":
                            e.setFullYear(e.getFullYear() - 1, e.getMonth() + 1, 0),
                                e.setHours(23, 59, 59, 999);
                            break;
                        case "next-year":
                            e.setFullYear(e.getFullYear() + 1);
                            break;
                        case "last-month":
                            e.setMonth(e.getMonth(), 0),
                                e.setHours(23, 59, 59, 999);
                            break;
                        case "next-month":
                            e.setMonth(e.getMonth() + 1);
                            break
                    }
                    return this.disabledCalendarChanger(e, t)
                },
                handleIconLeftClick: function() {
                    this.$emit("changecalendar", Jc(this.calendar, (function(t) {
                            return t - 1
                        }
                    )), "last-month")
                },
                handleIconRightClick: function() {
                    this.$emit("changecalendar", Jc(this.calendar, (function(t) {
                            return t + 1
                        }
                    )), "next-month")
                },
                handleIconDoubleLeftClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t - 1
                        }
                    )), "last-year")
                },
                handleIconDoubleRightClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t + 1
                        }
                    )), "next-year")
                },
                handlePanelChange: function(t) {
                    this.$emit("changepanel", t)
                },
                handleMouseEnter: function(t) {
                    "function" === typeof this.onDateMouseEnter && this.onDateMouseEnter(t)
                },
                handleMouseLeave: function(t) {
                    "function" === typeof this.onDateMouseLeave && this.onDateMouseLeave(t)
                },
                handleCellClick: function(t) {
                    var e = t.target;
                    "DIV" === e.tagName.toUpperCase() && (e = e.parentNode);
                    var s = e.getAttribute("data-row-col");
                    if (s) {
                        var a = s.split(",").map((function(t) {
                                return parseInt(t, 10)
                            }
                        ))
                            , i = Dc(a, 2)
                            , o = i[0]
                            , n = i[1]
                            , r = this.dates[o][n];
                        this.$emit("select", new Date(r))
                    }
                },
                formatDate: function(t, e) {
                    return Fl(t, e, {
                        locale: this.getLocale().formatLocale
                    })
                },
                getCellTitle: function(t) {
                    var e = this.titleFormat;
                    return this.formatDate(t, e)
                },
                getWeekNumber: function(t) {
                    return this.getWeek(t, this.getLocale().formatLocale)
                }
            }
        }, iu = au, ou = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-calendar " + t.prefixClass + "-calendar-panel-date"
            }, [s("div", {
                class: t.prefixClass + "-calendar-header"
            }, [s("icon-button", {
                attrs: {
                    type: "double-left",
                    disabled: t.isDisabledArrows("last-year")
                },
                on: {
                    click: t.handleIconDoubleLeftClick
                }
            }), t._v(" "), s("icon-button", {
                attrs: {
                    type: "left",
                    disabled: t.isDisabledArrows("last-month")
                },
                on: {
                    click: t.handleIconLeftClick
                }
            }), t._v(" "), s("icon-button", {
                attrs: {
                    type: "double-right",
                    disabled: t.isDisabledArrows("next-year")
                },
                on: {
                    click: t.handleIconDoubleRightClick
                }
            }), t._v(" "), s("icon-button", {
                attrs: {
                    type: "right",
                    disabled: t.isDisabledArrows("next-month")
                },
                on: {
                    click: t.handleIconRightClick
                }
            }), t._v(" "), s("span", {
                class: t.prefixClass + "-calendar-header-label"
            }, t._l(t.yearMonth, (function(e) {
                    return s("button", {
                        key: e.panel,
                        class: t.prefixClass + "-btn " + t.prefixClass + "-btn-text " + t.prefixClass + "-btn-current-" + e.panel,
                        attrs: {
                            type: "button"
                        },
                        on: {
                            click: function(s) {
                                return t.handlePanelChange(e.panel)
                            }
                        }
                    }, [t._v("\n        " + t._s(e.label) + "\n      ")])
                }
            )), 0)], 1), t._v(" "), s("div", {
                class: t.prefixClass + "-calendar-content"
            }, [s("table", {
                class: t.prefixClass + "-table " + t.prefixClass + "-table-date"
            }, [s("thead", [s("tr", [t.showWeekNumber ? s("th", {
                class: t.prefixClass + "-week-number-header"
            }) : t._e(), t._v(" "), t._l(t.days, (function(e) {
                    return s("th", {
                        key: e
                    }, [t._v(t._s(e))])
                }
            ))], 2)]), t._v(" "), s("tbody", {
                on: {
                    click: t.handleCellClick
                }
            }, t._l(t.dates, (function(e, a) {
                    return s("tr", {
                        key: a,
                        class: [t.prefixClass + "-date-row", t.getRowClasses(e)]
                    }, [t.showWeekNumber ? s("td", {
                        class: t.prefixClass + "-week-number",
                        attrs: {
                            "data-row-col": a + ",0"
                        }
                    }, [t._v("\n            " + t._s(t.getWeekNumber(e[0])) + "\n          ")]) : t._e(), t._v(" "), t._l(e, (function(e, i) {
                            return s("td", {
                                key: i,
                                staticClass: "cell",
                                class: t.getCellClasses(e),
                                attrs: {
                                    "data-row-col": a + "," + i,
                                    title: t.getCellTitle(e)
                                },
                                on: {
                                    mouseenter: function(s) {
                                        return t.handleMouseEnter(e)
                                    },
                                    mouseleave: function(s) {
                                        return t.handleMouseLeave(e)
                                    }
                                }
                            }, [s("div", [t._v(t._s(e.getDate()))])])
                        }
                    ))], 2)
                }
            )), 0)])])])
        }, nu = [], ru = void 0, lu = void 0, cu = void 0, du = !1, uu = gd({
            render: ou,
            staticRenderFns: nu
        }, ru, iu, lu, du, cu, !1, void 0, void 0, void 0), mu = {
            name: "TableMonth",
            components: {
                IconButton: su
            },
            inject: {
                getLocale: {
                    default: function() {
                        return ud
                    }
                },
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                disabledCalendarChanger: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                calendar: {
                    type: Date,
                    default: function() {
                        return new Date
                    }
                },
                getCellClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                }
            },
            computed: {
                calendarYear: function() {
                    return this.calendar.getFullYear()
                },
                months: function() {
                    var t = this.getLocale()
                        , e = t.months || t.formatLocale.monthsShort
                        , s = e.map((function(t, e) {
                            return {
                                text: t,
                                month: e
                            }
                        }
                    ));
                    return Qc(s, 3)
                }
            },
            methods: {
                isDisabledArrows: function(t) {
                    var e = new Date(this.calendar);
                    switch (t) {
                        case "last-year":
                            e.setFullYear(e.getFullYear() - 1, 11, 31),
                                e.setHours(23, 59, 59, 999);
                            break;
                        case "next-year":
                            e.setFullYear(e.getFullYear() + 1, 0, 1);
                            break
                    }
                    return this.disabledCalendarChanger(e, t)
                },
                handleIconDoubleLeftClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t - 1
                        }
                    )), "last-year")
                },
                handleIconDoubleRightClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t + 1
                        }
                    )), "next-year")
                },
                handlePanelChange: function() {
                    this.$emit("changepanel", "year")
                },
                handleClick: function(t) {
                    var e = t.target;
                    "DIV" === e.tagName.toUpperCase() && (e = e.parentNode);
                    var s = e.getAttribute("data-month");
                    s && !e.classList.contains("disabled") && this.$emit("select", parseInt(s, 10))
                }
            }
        }, pu = mu, hu = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-calendar " + t.prefixClass + "-calendar-panel-month"
            }, [s("div", {
                class: t.prefixClass + "-calendar-header"
            }, [s("icon-button", {
                attrs: {
                    type: "double-left",
                    disabled: t.isDisabledArrows("last-year")
                },
                on: {
                    click: t.handleIconDoubleLeftClick
                }
            }), t._v(" "), s("icon-button", {
                attrs: {
                    type: "double-right",
                    disabled: t.isDisabledArrows("next-year")
                },
                on: {
                    click: t.handleIconDoubleRightClick
                }
            }), t._v(" "), s("span", {
                class: t.prefixClass + "-calendar-header-label"
            }, [s("button", {
                class: t.prefixClass + "-btn " + t.prefixClass + "-btn-text",
                attrs: {
                    type: "button"
                },
                on: {
                    click: t.handlePanelChange
                }
            }, [t._v("\n        " + t._s(t.calendarYear) + "\n      ")])])], 1), t._v(" "), s("div", {
                class: t.prefixClass + "-calendar-content"
            }, [s("table", {
                class: t.prefixClass + "-table " + t.prefixClass + "-table-month",
                on: {
                    click: t.handleClick
                }
            }, t._l(t.months, (function(e, a) {
                    return s("tr", {
                        key: a
                    }, t._l(e, (function(e, a) {
                            return s("td", {
                                key: a,
                                staticClass: "cell",
                                class: t.getCellClasses(e.month),
                                attrs: {
                                    "data-month": e.month
                                }
                            }, [s("div", [t._v(t._s(e.text))])])
                        }
                    )), 0)
                }
            )), 0)])])
        }, vu = [], fu = void 0, gu = void 0, bu = void 0, yu = !1, _u = gd({
            render: hu,
            staticRenderFns: vu
        }, fu, pu, gu, yu, bu, !1, void 0, void 0, void 0), Cu = {
            name: "TableYear",
            components: {
                IconButton: su
            },
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                disabledCalendarChanger: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                calendar: {
                    type: Date,
                    default: function() {
                        return new Date
                    }
                },
                getCellClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                },
                getYearPanel: {
                    type: Function
                }
            },
            computed: {
                years: function() {
                    var t = new Date(this.calendar);
                    return "function" === typeof this.getYearPanel ? this.getYearPanel(t) : this.getYears(t)
                },
                firstYear: function() {
                    return this.years[0][0]
                },
                lastYear: function() {
                    var t = function(t) {
                        return t[t.length - 1]
                    };
                    return t(t(this.years))
                }
            },
            methods: {
                isDisabledArrows: function(t) {
                    var e = new Date(this.calendar);
                    switch (t) {
                        case "last-decade":
                            e.setFullYear(this.firstYear - 1, 11, 31),
                                e.setHours(23, 59, 59, 999);
                            break;
                        case "next-decade":
                            e.setFullYear(this.lastYear + 1, 0, 1);
                            break
                    }
                    return this.disabledCalendarChanger(e, t)
                },
                getYears: function(t) {
                    for (var e = 10 * Math.floor(t.getFullYear() / 10), s = [], a = 0; a < 10; a++)
                        s.push(e + a);
                    return Qc(s, 2)
                },
                handleIconDoubleLeftClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t - 10
                        }
                    )), "last-decade")
                },
                handleIconDoubleRightClick: function() {
                    this.$emit("changecalendar", Kc(this.calendar, (function(t) {
                            return t + 10
                        }
                    )), "next-decade")
                },
                handleClick: function(t) {
                    var e = t.target;
                    "DIV" === e.tagName.toUpperCase() && (e = e.parentNode);
                    var s = e.getAttribute("data-year");
                    s && !e.classList.contains("disabled") && this.$emit("select", parseInt(s, 10))
                }
            }
        }, wu = Cu, ku = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-calendar " + t.prefixClass + "-calendar-panel-year"
            }, [s("div", {
                class: t.prefixClass + "-calendar-header"
            }, [s("icon-button", {
                attrs: {
                    type: "double-left",
                    disabled: t.isDisabledArrows("last-decade")
                },
                on: {
                    click: t.handleIconDoubleLeftClick
                }
            }), t._v(" "), s("icon-button", {
                attrs: {
                    type: "double-right",
                    disabled: t.isDisabledArrows("next-decade")
                },
                on: {
                    click: t.handleIconDoubleRightClick
                }
            }), t._v(" "), s("span", {
                class: t.prefixClass + "-calendar-header-label"
            }, [s("span", [t._v(t._s(t.firstYear))]), t._v(" "), s("span", {
                class: t.prefixClass + "-calendar-decade-separator"
            }), t._v(" "), s("span", [t._v(t._s(t.lastYear))])])], 1), t._v(" "), s("div", {
                class: t.prefixClass + "-calendar-content"
            }, [s("table", {
                class: t.prefixClass + "-table " + t.prefixClass + "-table-year",
                on: {
                    click: t.handleClick
                }
            }, t._l(t.years, (function(e, a) {
                    return s("tr", {
                        key: a
                    }, t._l(e, (function(e, a) {
                            return s("td", {
                                key: a,
                                staticClass: "cell",
                                class: t.getCellClasses(e),
                                attrs: {
                                    "data-year": e
                                }
                            }, [s("div", [t._v(t._s(e))])])
                        }
                    )), 0)
                }
            )), 0)])])
        }, Su = [], xu = void 0, Mu = void 0, Au = void 0, Du = !1, Pu = gd({
            render: ku,
            staticRenderFns: Su
        }, xu, wu, Mu, Du, Au, !1, void 0, void 0, void 0), Tu = {
            name: "CalendarPanel",
            inject: {
                prefixClass: {
                    default: "mx"
                },
                dispatchDatePicker: {
                    default: function() {
                        return function() {}
                    }
                }
            },
            props: {
                value: {},
                defaultValue: {
                    default: function() {
                        var t = new Date;
                        return t.setHours(0, 0, 0, 0),
                            t
                    }
                },
                defaultPanel: {
                    type: String
                },
                disabledCalendarChanger: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                disabledDate: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                type: {
                    type: String,
                    default: "date"
                },
                getClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                },
                showWeekNumber: {
                    type: Boolean,
                    default: void 0
                },
                getYearPanel: {
                    type: Function
                },
                titleFormat: {
                    type: String,
                    default: "YYYY-MM-DD"
                },
                calendar: Date,
                partialUpdate: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                var t = ["date", "month", "year"]
                    , e = Math.max(t.indexOf(this.type), t.indexOf(this.defaultPanel))
                    , s = -1 !== e ? t[e] : "date";
                return {
                    panel: s,
                    innerCalendar: new Date
                }
            },
            computed: {
                innerValue: function() {
                    var t = Array.isArray(this.value) ? this.value : [this.value]
                        , e = {
                        year: zc,
                        month: Gc,
                        date: Yc
                    }
                        , s = e[this.type] || e.date;
                    return t.filter(jc).map((function(t) {
                            return s(t)
                        }
                    ))
                },
                calendarYear: function() {
                    return this.innerCalendar.getFullYear()
                },
                calendarMonth: function() {
                    return this.innerCalendar.getMonth()
                }
            },
            watch: {
                value: {
                    immediate: !0,
                    handler: "initCalendar"
                },
                calendar: {
                    handler: "initCalendar"
                },
                defaultValue: {
                    handler: "initCalendar"
                }
            },
            methods: {
                initCalendar: function() {
                    var t = this.calendar;
                    if (!jc(t)) {
                        var e = this.innerValue.length;
                        t = Wc(e > 0 ? this.innerValue[e - 1] : this.defaultValue)
                    }
                    this.innerCalendar = Gc(t)
                },
                isDisabled: function(t) {
                    return this.disabledDate(new Date(t), this.innerValue)
                },
                emitDate: function(t, e) {
                    this.isDisabled(t) || (this.$emit("select", t, e, this.innerValue),
                        this.dispatchDatePicker("pick", t, e))
                },
                handleCalendarChange: function(t, e) {
                    var s = new Date(this.innerCalendar);
                    this.innerCalendar = t,
                        this.$emit("update:calendar", t),
                        this.dispatchDatePicker("calendar-change", t, s, e)
                },
                handelPanelChange: function(t) {
                    var e = this.panel;
                    this.panel = t,
                        this.dispatchDatePicker("panel-change", t, e)
                },
                handleSelectYear: function(t) {
                    if ("year" === this.type) {
                        var e = this.getYearCellDate(t);
                        this.emitDate(e, "year")
                    } else if (this.handleCalendarChange(Hc(t, this.calendarMonth), "year"),
                        this.handelPanelChange("month"),
                    this.partialUpdate && 1 === this.innerValue.length) {
                        var s = new Date(this.innerValue[0]);
                        s.setFullYear(t),
                            this.emitDate(s, "year")
                    }
                },
                handleSelectMonth: function(t) {
                    if ("month" === this.type) {
                        var e = this.getMonthCellDate(t);
                        this.emitDate(e, "month")
                    } else if (this.handleCalendarChange(Hc(this.calendarYear, t), "month"),
                        this.handelPanelChange("date"),
                    this.partialUpdate && 1 === this.innerValue.length) {
                        var s = new Date(this.innerValue[0]);
                        s.setFullYear(this.calendarYear),
                            this.emitDate(Jc(s, t), "month")
                    }
                },
                handleSelectDate: function(t) {
                    this.emitDate(t, "week" === this.type ? "week" : "date")
                },
                getMonthCellDate: function(t) {
                    return Hc(this.calendarYear, t)
                },
                getYearCellDate: function(t) {
                    return Hc(t, 0)
                },
                getDateClasses: function(t) {
                    var e = t.getMonth() !== this.calendarMonth
                        , s = [];
                    t.getTime() === (new Date).setHours(0, 0, 0, 0) && s.push("today"),
                    e && s.push("not-current-month");
                    var a = this.getStateClass(t);
                    return "active" === a && e || s.push(a),
                        s.concat(this.getClasses(t, this.innerValue, s.join(" ")))
                },
                getMonthClasses: function(t) {
                    var e = [];
                    if ("month" !== this.type) {
                        this.calendarMonth === t && e.push("active");
                        var s = this.getMonthCellDate(t);
                        return this.disabledCalendarChanger(s, "month") && e.push("disabled"),
                            e
                    }
                    var a = this.getMonthCellDate(t);
                    return e.push(this.getStateClass(a)),
                        e.concat(this.getClasses(a, this.innerValue, e.join(" ")))
                },
                getYearClasses: function(t) {
                    var e = [];
                    if ("year" !== this.type) {
                        this.calendarYear === t && e.push("active");
                        var s = this.getYearCellDate(t);
                        return this.disabledCalendarChanger(s, "year") && e.push("disabled"),
                            e
                    }
                    var a = this.getYearCellDate(t);
                    return e.push(this.getStateClass(a)),
                        e.concat(this.getClasses(a, this.innerValue, e.join(" ")))
                },
                getStateClass: function(t) {
                    return this.isDisabled(t) ? "disabled" : this.innerValue.some((function(e) {
                            return e.getTime() === t.getTime()
                        }
                    )) ? "active" : ""
                },
                getWeekState: function(t) {
                    if ("week" !== this.type)
                        return "";
                    var e = t[0].getTime()
                        , s = t[6].getTime()
                        , a = this.innerValue.some((function(t) {
                            var a = t.getTime();
                            return a >= e && a <= s
                        }
                    ));
                    return a ? "".concat(this.prefixClass, "-active-week") : ""
                }
            },
            render: function() {
                var t = arguments[0]
                    , e = this.panel
                    , s = this.innerCalendar;
                return "year" === e ? t(Pu, {
                    attrs: {
                        disabledCalendarChanger: this.disabledCalendarChanger,
                        calendar: s,
                        getCellClasses: this.getYearClasses,
                        getYearPanel: this.getYearPanel
                    },
                    on: {
                        select: this.handleSelectYear,
                        changecalendar: this.handleCalendarChange
                    }
                }) : "month" === e ? t(_u, {
                    attrs: {
                        disabledCalendarChanger: this.disabledCalendarChanger,
                        calendar: s,
                        getCellClasses: this.getMonthClasses
                    },
                    on: {
                        select: this.handleSelectMonth,
                        changepanel: this.handelPanelChange,
                        changecalendar: this.handleCalendarChange
                    }
                }) : t(uu, {
                    attrs: {
                        disabledCalendarChanger: this.disabledCalendarChanger,
                        calendar: s,
                        getCellClasses: this.getDateClasses,
                        getRowClasses: this.getWeekState,
                        titleFormat: this.titleFormat,
                        showWeekNumber: "boolean" === typeof this.showWeekNumber ? this.showWeekNumber : "week" === this.type
                    },
                    class: wc({}, "".concat(this.prefixClass, "-calendar-week-mode"), "week" === this.type),
                    on: {
                        select: this.handleSelectDate,
                        changepanel: this.handelPanelChange,
                        changecalendar: this.handleCalendarChange
                    }
                })
            }
        }, Lu = {
            name: "CalendarRange",
            components: {
                CalendarPanel: Tu
            },
            provide: function() {
                return {
                    onDateMouseEnter: this.onDateMouseEnter,
                    onDateMouseLeave: this.onDateMouseLeave
                }
            },
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            props: xc({}, Tu.props),
            data: function() {
                return {
                    innerValue: [],
                    calendars: [],
                    hoveredValue: null
                }
            },
            computed: {
                calendarMinDiff: function() {
                    var t = {
                        date: 1,
                        month: 12,
                        year: 120
                    };
                    return t[this.type] || t.date
                },
                calendarMaxDiff: function() {
                    return 1 / 0
                },
                defaultValues: function() {
                    return Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue]
                }
            },
            watch: {
                value: {
                    immediate: !0,
                    handler: function() {
                        var t = this;
                        this.innerValue = qc(this.value) ? this.value : [new Date(NaN), new Date(NaN)];
                        var e = this.innerValue.map((function(e, s) {
                                return Gc(Wc(e, t.defaultValues[s]))
                            }
                        ));
                        this.updateCalendars(e)
                    }
                }
            },
            methods: {
                handleSelect: function(t, e) {
                    var s = Dc(this.innerValue, 2)
                        , a = s[0]
                        , i = s[1];
                    jc(a) && !jc(i) ? (a.getTime() > t.getTime() ? this.innerValue = [t, a] : this.innerValue = [a, t],
                        this.emitDate(this.innerValue, e)) : this.innerValue = [t, new Date(NaN)]
                },
                onDateMouseEnter: function(t) {
                    this.hoveredValue = t
                },
                onDateMouseLeave: function() {
                    this.hoveredValue = null
                },
                emitDate: function(t, e) {
                    this.$emit("select", t, e)
                },
                updateStartCalendar: function(t) {
                    this.updateCalendars([t, this.calendars[1]], 1)
                },
                updateEndCalendar: function(t) {
                    this.updateCalendars([this.calendars[0], t], 0)
                },
                updateCalendars: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
                        , s = this.getCalendarGap(t);
                    if (s) {
                        var a = new Date(t[e]);
                        a.setMonth(a.getMonth() + (0 === e ? -s : s)),
                            t[e] = a
                    }
                    this.calendars = t
                },
                getCalendarGap: function(t) {
                    var e = Dc(t, 2)
                        , s = e[0]
                        , a = e[1]
                        , i = a.getFullYear() - s.getFullYear()
                        , o = a.getMonth() - s.getMonth()
                        , n = 12 * i + o
                        , r = this.calendarMinDiff
                        , l = this.calendarMaxDiff;
                    return n < r ? r - n : n > l ? l - n : 0
                },
                getRangeClasses: function(t, e, s) {
                    var a = [].concat(this.getClasses(t, e, s));
                    if (/disabled|active/.test(s))
                        return a;
                    var i = function(t, e) {
                        var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(t) {
                            return t.getTime()
                        }
                            , a = s(t)
                            , i = e.map(s)
                            , o = Dc(i, 2)
                            , n = o[0]
                            , r = o[1];
                        if (n > r) {
                            var l = [r, n];
                            n = l[0],
                                r = l[1]
                        }
                        return a > n && a < r
                    };
                    return 2 === e.length && i(t, e) ? a.concat("in-range") : 1 === e.length && this.hoveredValue && i(t, [e[0], this.hoveredValue]) ? a.concat("hover-in-range") : a
                }
            },
            render: function() {
                var t = this
                    , e = arguments[0]
                    , s = this.calendars.map((function(s, a) {
                        var i = xc({}, t.$props, {
                            calendar: s,
                            value: t.innerValue,
                            defaultValue: t.defaultValues[a],
                            getClasses: t.getRangeClasses,
                            partialUpdate: !1
                        })
                            , o = {
                            select: t.handleSelect,
                            "update:calendar": 0 === a ? t.updateStartCalendar : t.updateEndCalendar
                        };
                        return e("calendar-panel", {
                            props: xc({}, i),
                            on: xc({}, o)
                        })
                    }
                ))
                    , a = this.prefixClass;
                return e("div", {
                    class: "".concat(a, "-range-wrapper")
                }, [s])
            }
        };
        function Iu() {
            if ("undefined" === typeof window)
                return 0;
            if (void 0 !== bd)
                return bd;
            var t = document.createElement("div");
            t.style.visibility = "hidden",
                t.style.overflow = "scroll",
                t.style.width = "100px",
                t.style.position = "absolute",
                t.style.top = "-9999px",
                document.body.appendChild(t);
            var e = document.createElement("div");
            return e.style.width = "100%",
                t.appendChild(e),
                bd = t.offsetWidth - e.offsetWidth,
                t.parentNode.removeChild(t),
                bd
        }
        var Fu = {
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            data: function() {
                return {
                    scrollbarWidth: 0,
                    thumbTop: "",
                    thumbHeight: ""
                }
            },
            created: function() {
                this.scrollbarWidth = Iu(),
                    document.addEventListener("mouseup", this.handleDragend)
            },
            beforeDestroy: function() {
                document.addEventListener("mouseup", this.handleDragend)
            },
            mounted: function() {
                this.$nextTick(this.getThumbSize)
            },
            methods: {
                getThumbSize: function() {
                    var t = this.$refs.wrap;
                    if (t) {
                        var e = 100 * t.clientHeight / t.scrollHeight;
                        this.thumbHeight = e < 100 ? "".concat(e, "%") : ""
                    }
                },
                handleScroll: function(t) {
                    var e = t.currentTarget
                        , s = e.scrollHeight
                        , a = e.scrollTop;
                    this.thumbTop = "".concat(100 * a / s, "%")
                },
                handleDragstart: function(t) {
                    t.stopImmediatePropagation(),
                        this._draggable = !0;
                    var e = this.$refs.thumb.offsetTop;
                    this._prevY = t.clientY - e,
                        document.addEventListener("mousemove", this.handleDraging)
                },
                handleDraging: function(t) {
                    if (this._draggable) {
                        var e = t.clientY
                            , s = this.$refs.wrap
                            , a = s.scrollHeight
                            , i = s.clientHeight
                            , o = e - this._prevY
                            , n = o * a / i;
                        s.scrollTop = n
                    }
                },
                handleDragend: function() {
                    this._draggable && (this._draggable = !1,
                        document.removeEventListener("mousemove", this.handleDraging))
                }
            }
        }
            , Ou = Fu
            , Bu = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-scrollbar",
                style: {
                    position: "relative",
                    overflow: "hidden"
                }
            }, [s("div", {
                ref: "wrap",
                class: t.prefixClass + "-scrollbar-wrap",
                style: {
                    marginRight: "-" + t.scrollbarWidth + "px"
                },
                on: {
                    scroll: t.handleScroll
                }
            }, [t._t("default")], 2), t._v(" "), s("div", {
                class: t.prefixClass + "-scrollbar-track"
            }, [s("div", {
                ref: "thumb",
                class: t.prefixClass + "-scrollbar-thumb",
                style: {
                    height: t.thumbHeight,
                    top: t.thumbTop
                },
                on: {
                    mousedown: t.handleDragstart
                }
            })])])
        }
            , Nu = []
            , $u = void 0
            , Vu = void 0
            , Eu = void 0
            , Uu = !1
            , Hu = gd({
            render: Bu,
            staticRenderFns: Nu
        }, $u, Ou, Vu, Uu, Eu, !1, void 0, void 0, void 0)
            , ju = function(t) {
            return t = parseInt(t, 10),
                t < 10 ? "0".concat(t) : "".concat(t)
        }
            , qu = function(t, e, s) {
            if (Array.isArray(s))
                return s.filter((function(e) {
                        return e >= 0 && e < t
                    }
                ));
            e <= 0 && (e = 1);
            for (var a = [], i = 0; i < t; i += e)
                a.push(i);
            return a
        }
            , Ru = function t(e, s) {
            var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
            if (a <= 0)
                requestAnimationFrame((function() {
                        e.scrollTop = s
                    }
                ));
            else {
                var i = s - e.scrollTop
                    , o = i / a * 10;
                requestAnimationFrame((function() {
                        var i = e.scrollTop + o;
                        i >= s ? e.scrollTop = s : (e.scrollTop = i,
                            t(e, s, a - 10))
                    }
                ))
            }
        }
            , Wu = {
            name: "ListColumns",
            components: {
                ScrollbarVertical: Hu
            },
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                date: Date,
                scrollDuration: {
                    type: Number,
                    default: 100
                },
                getClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                },
                hourOptions: Array,
                minuteOptions: Array,
                secondOptions: Array,
                showHour: {
                    type: Boolean,
                    default: !0
                },
                showMinute: {
                    type: Boolean,
                    default: !0
                },
                showSecond: {
                    type: Boolean,
                    default: !0
                },
                hourStep: {
                    type: Number,
                    default: 1
                },
                minuteStep: {
                    type: Number,
                    default: 1
                },
                secondStep: {
                    type: Number,
                    default: 1
                },
                use12h: {
                    type: Boolean,
                    default: !1
                }
            },
            computed: {
                columns: function() {
                    var t = [];
                    return this.showHour && t.push({
                        type: "hour",
                        list: this.getHoursList()
                    }),
                    this.showMinute && t.push({
                        type: "minute",
                        list: this.getMinutesList()
                    }),
                    this.showSecond && t.push({
                        type: "second",
                        list: this.getSecondsList()
                    }),
                    this.use12h && t.push({
                        type: "ampm",
                        list: this.getAMPMList()
                    }),
                        t.filter((function(t) {
                                return t.list.length > 0
                            }
                        ))
                }
            },
            watch: {
                date: {
                    handler: function() {
                        var t = this;
                        this.$nextTick((function() {
                                t.scrollToSelected(t.scrollDuration)
                            }
                        ))
                    }
                }
            },
            mounted: function() {
                this.scrollToSelected(0)
            },
            methods: {
                getHoursList: function() {
                    var t = this;
                    return qu(this.use12h ? 12 : 24, this.hourStep, this.hourOptions).map((function(e) {
                            var s = new Date(t.date)
                                , a = ju(e);
                            t.use12h && (0 === e && (a = "12"),
                            s.getHours() >= 12 && (e += 12));
                            var i = s.setHours(e);
                            return {
                                value: i,
                                text: a
                            }
                        }
                    ))
                },
                getMinutesList: function() {
                    var t = this;
                    return qu(60, this.minuteStep, this.minuteOptions).map((function(e) {
                            var s = new Date(t.date).setMinutes(e);
                            return {
                                value: s,
                                text: ju(e)
                            }
                        }
                    ))
                },
                getSecondsList: function() {
                    var t = this;
                    return qu(60, this.secondStep, this.secondOptions).map((function(e) {
                            var s = new Date(t.date).setSeconds(e);
                            return {
                                value: s,
                                text: ju(e)
                            }
                        }
                    ))
                },
                getAMPMList: function() {
                    var t = this;
                    return ["AM", "PM"].map((function(e, s) {
                            var a = new Date(t.date)
                                , i = a.setHours(a.getHours() % 12 + 12 * s);
                            return {
                                text: e,
                                value: i
                            }
                        }
                    ))
                },
                scrollToSelected: function(t) {
                    for (var e = this.$el.querySelectorAll(".active"), s = 0; s < e.length; s++) {
                        var a = e[s]
                            , i = vd(a, this.$el);
                        if (i) {
                            var o = a.offsetTop;
                            Ru(i, o, t)
                        }
                    }
                },
                handleSelect: function(t) {
                    var e = t.target
                        , s = t.currentTarget;
                    if ("LI" === e.tagName.toUpperCase()) {
                        var a = s.getAttribute("data-type")
                            , i = parseInt(s.getAttribute("data-index"), 10)
                            , o = parseInt(e.getAttribute("data-index"), 10)
                            , n = this.columns[i].list[o].value;
                        this.$emit("select", n, a)
                    }
                }
            }
        }
            , zu = Wu
            , Gu = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-time-columns"
            }, t._l(t.columns, (function(e, a) {
                    return s("scrollbar-vertical", {
                        key: a,
                        class: t.prefixClass + "-time-column"
                    }, [s("ul", {
                        class: t.prefixClass + "-time-list",
                        attrs: {
                            "data-type": e.type,
                            "data-index": a
                        },
                        on: {
                            click: t.handleSelect
                        }
                    }, t._l(e.list, (function(a, i) {
                            return s("li", {
                                key: a.value,
                                class: [t.prefixClass + "-time-item", t.getClasses(a.value, e.type)],
                                attrs: {
                                    "data-index": i
                                }
                            }, [t._v("\n        " + t._s(a.text) + "\n      ")])
                        }
                    )), 0)])
                }
            )), 1)
        }
            , Yu = []
            , Zu = void 0
            , Ju = void 0
            , Ku = void 0
            , Xu = !1
            , Qu = gd({
            render: Gu,
            staticRenderFns: Yu
        }, Zu, zu, Ju, Xu, Ku, !1, void 0, void 0, void 0);
        function tm() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ""
                , e = t.split(":");
            if (e.length >= 2) {
                var s = parseInt(e[0], 10)
                    , a = parseInt(e[1], 10);
                return {
                    hours: s,
                    minutes: a
                }
            }
            return null
        }
        var em = function(t, e) {
            t && (t.scrollTop = e)
        }
            , sm = {
            name: "ListOptions",
            components: {
                ScrollbarVertical: Hu
            },
            inject: {
                getLocale: {
                    default: function() {
                        return ud
                    }
                },
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                date: Date,
                options: {
                    type: [Object, Function],
                    default: function() {
                        return []
                    }
                },
                format: {
                    type: String,
                    default: "HH:mm:ss"
                },
                getClasses: {
                    type: Function,
                    default: function() {
                        return []
                    }
                }
            },
            computed: {
                list: function() {
                    var t = []
                        , e = this.options;
                    if ("function" === typeof e)
                        return e() || [];
                    var s = tm(e.start)
                        , a = tm(e.end)
                        , i = tm(e.step)
                        , o = e.format || this.format;
                    if (s && a && i)
                        for (var n = s.minutes + 60 * s.hours, r = a.minutes + 60 * a.hours, l = i.minutes + 60 * i.hours, c = Math.floor((r - n) / l), d = 0; d <= c; d++) {
                            var u = n + d * l
                                , m = Math.floor(u / 60)
                                , p = u % 60
                                , h = new Date(this.date).setHours(m, p, 0);
                            t.push({
                                value: h,
                                text: this.formatDate(h, o)
                            })
                        }
                    return t
                }
            },
            mounted: function() {
                this.scrollToSelected()
            },
            methods: {
                formatDate: function(t, e) {
                    return Fl(t, e, {
                        locale: this.getLocale().formatLocale
                    })
                },
                scrollToSelected: function() {
                    var t = this.$el.querySelector(".active");
                    if (t) {
                        var e = vd(t, this.$el);
                        if (e) {
                            var s = t.offsetTop;
                            em(e, s)
                        }
                    }
                },
                handleSelect: function(t) {
                    this.$emit("select", t, "time")
                }
            }
        }
            , am = sm
            , im = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("scrollbar-vertical", t._l(t.list, (function(e) {
                    return s("div", {
                        key: e.value,
                        class: [t.prefixClass + "-time-option", t.getClasses(e.value)],
                        on: {
                            click: function(s) {
                                return t.handleSelect(e.value)
                            }
                        }
                    }, [t._v("\n    " + t._s(e.text) + "\n  ")])
                }
            )), 0)
        }
            , om = []
            , nm = void 0
            , rm = void 0
            , lm = void 0
            , cm = !1
            , dm = gd({
            render: im,
            staticRenderFns: om
        }, nm, am, rm, cm, lm, !1, void 0, void 0, void 0)
            , um = {
            name: "TimePanel",
            components: {
                ListColumns: Qu,
                ListOptions: dm
            },
            inject: {
                getLocale: {
                    default: function() {
                        return ud
                    }
                },
                prefixClass: {
                    default: "mx"
                }
            },
            props: {
                value: {},
                defaultValue: {
                    default: function() {
                        var t = new Date;
                        return t.setHours(0, 0, 0, 0),
                            t
                    }
                },
                format: {
                    default: "HH:mm:ss"
                },
                timeTitleFormat: {
                    type: String,
                    default: "YYYY-MM-DD"
                },
                showTimeHeader: {
                    type: Boolean,
                    default: !1
                },
                disabledTime: {
                    type: Function,
                    default: function() {
                        return !1
                    }
                },
                timePickerOptions: {
                    type: [Object, Function],
                    default: function() {
                        return null
                    }
                },
                hourOptions: Array,
                minuteOptions: Array,
                secondOptions: Array,
                hourStep: {
                    type: Number,
                    default: 1
                },
                minuteStep: {
                    type: Number,
                    default: 1
                },
                secondStep: {
                    type: Number,
                    default: 1
                },
                showHour: {
                    type: Boolean,
                    default: void 0
                },
                showMinute: {
                    type: Boolean,
                    default: void 0
                },
                showSecond: {
                    type: Boolean,
                    default: void 0
                },
                use12h: {
                    type: Boolean,
                    default: void 0
                },
                scrollDuration: {
                    type: Number,
                    default: 100
                }
            },
            data: function() {
                return {
                    innerValue: Wc(this.value, this.defaultValue)
                }
            },
            computed: {
                title: function() {
                    var t = this.timeTitleFormat
                        , e = new Date(this.innerValue);
                    return this.formatDate(e, t)
                },
                innerForamt: function() {
                    return "string" === typeof this.format ? this.format : "HH:mm:ss"
                },
                ShowHourMinuteSecondAMPM: function() {
                    var t = this
                        , e = this.innerForamt
                        , s = {
                        showHour: /[HhKk]/.test(e),
                        showMinute: /m/.test(e),
                        showSecond: /s/.test(e),
                        use12h: /a/i.test(e)
                    }
                        , a = {};
                    return Object.keys(s).forEach((function(e) {
                            a[e] = "boolean" === typeof t[e] ? t[e] : s[e]
                        }
                    )),
                        a
                }
            },
            watch: {
                value: {
                    immediate: !0,
                    handler: function() {
                        this.innerValue = Wc(this.value, this.defaultValue)
                    }
                }
            },
            methods: {
                formatDate: function(t, e) {
                    return Fl(t, e, {
                        locale: this.getLocale().formatLocale
                    })
                },
                isDisabledTime: function(t) {
                    return this.disabledTime(new Date(t))
                },
                isDisabledHour: function(t) {
                    var e = new Date(t);
                    return this.isDisabledTime(e) && this.isDisabledTime(e.setMinutes(0, 0, 0)) && this.isDisabledTime(e.setMinutes(59, 59, 999))
                },
                isDisabledMinute: function(t) {
                    var e = new Date(t);
                    return this.isDisabledTime(e) && this.isDisabledTime(e.setSeconds(0, 0)) && this.isDisabledTime(e.setSeconds(59, 999))
                },
                isDisabledAMPM: function(t) {
                    var e = new Date(t)
                        , s = e.getHours() < 12 ? 0 : 12
                        , a = s + 11;
                    return this.isDisabledTime(e) && this.isDisabledTime(e.setHours(s, 0, 0, 0)) && this.isDisabledTime(e.setHours(a, 59, 59, 999))
                },
                isDisabled: function(t, e) {
                    return "hour" === e ? this.isDisabledHour(t) : "minute" === e ? this.isDisabledMinute(t) : "ampm" === e ? this.isDisabledAMPM(t) : this.isDisabledTime(t)
                },
                handleSelect: function(t, e) {
                    var s = new Date(t);
                    this.isDisabled(t, e) || (this.innerValue = s,
                    this.isDisabledTime(s) || this.$emit("select", s, e))
                },
                handleClickTitle: function() {
                    this.$emit("clicktitle")
                },
                getClasses: function(t, e) {
                    var s = new Date(t);
                    return this.isDisabled(t, e) ? "disabled" : s.getTime() === this.innerValue.getTime() ? "active" : ""
                }
            }
        }
            , mm = um
            , pm = function() {
            var t = this
                , e = t.$createElement
                , s = t._self._c || e;
            return s("div", {
                class: t.prefixClass + "-time"
            }, [t.showTimeHeader ? s("div", {
                class: t.prefixClass + "-time-header"
            }, [s("button", {
                class: t.prefixClass + "-btn " + t.prefixClass + "-btn-text " + t.prefixClass + "-time-header-title",
                attrs: {
                    type: "button"
                },
                on: {
                    click: t.handleClickTitle
                }
            }, [t._v("\n      " + t._s(t.title) + "\n    ")])]) : t._e(), t._v(" "), s("div", {
                class: t.prefixClass + "-time-content"
            }, [t.timePickerOptions ? s("list-options", {
                attrs: {
                    date: t.innerValue,
                    "get-classes": t.getClasses,
                    options: t.timePickerOptions,
                    format: t.innerForamt
                },
                on: {
                    select: t.handleSelect
                }
            }) : s("list-columns", t._b({
                attrs: {
                    date: t.innerValue,
                    "get-classes": t.getClasses,
                    "hour-options": t.hourOptions,
                    "minute-options": t.minuteOptions,
                    "second-options": t.secondOptions,
                    "hour-step": t.hourStep,
                    "minute-step": t.minuteStep,
                    "second-step": t.secondStep,
                    "scroll-duration": t.scrollDuration
                },
                on: {
                    select: t.handleSelect
                }
            }, "list-columns", t.ShowHourMinuteSecondAMPM, !1))], 1)])
        }
            , hm = []
            , vm = void 0
            , fm = void 0
            , gm = void 0
            , bm = !1
            , ym = gd({
            render: pm,
            staticRenderFns: hm
        }, vm, mm, fm, bm, gm, !1, void 0, void 0, void 0)
            , _m = {
            name: "TimeRange",
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            props: xc({}, ym.props),
            data: function() {
                return {
                    startValue: new Date(NaN),
                    endValue: new Date(NaN)
                }
            },
            watch: {
                value: {
                    immediate: !0,
                    handler: function() {
                        if (qc(this.value)) {
                            var t = Dc(this.value, 2)
                                , e = t[0]
                                , s = t[1];
                            this.startValue = e,
                                this.endValue = s
                        } else
                            this.startValue = new Date(NaN),
                                this.endValue = new Date(NaN)
                    }
                }
            },
            methods: {
                emitChange: function(t, e) {
                    var s = [this.startValue, this.endValue];
                    this.$emit("select", s, "time" === t ? "time-range" : t, e)
                },
                handleSelectStart: function(t, e) {
                    this.startValue = t,
                    this.endValue.getTime() >= t.getTime() || (this.endValue = t),
                        this.emitChange(e, 0)
                },
                handleSelectEnd: function(t, e) {
                    this.endValue = t,
                    this.startValue.getTime() <= t.getTime() || (this.startValue = t),
                        this.emitChange(e, 1)
                },
                disabledStartTime: function(t) {
                    return this.disabledTime(t, 0)
                },
                disabledEndTime: function(t) {
                    return t.getTime() < this.startValue.getTime() || this.disabledTime(t, 1)
                }
            },
            render: function() {
                var t = arguments[0]
                    , e = Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue]
                    , s = this.prefixClass;
                return t("div", {
                    class: "".concat(s, "-range-wrapper")
                }, [t(ym, {
                    props: xc({}, xc({}, this.$props, {
                        value: this.startValue,
                        defaultValue: e[0],
                        disabledTime: this.disabledStartTime
                    })),
                    on: xc({}, xc({}, this.$listeners, {
                        select: this.handleSelectStart
                    }))
                }), t(ym, {
                    props: xc({}, xc({}, this.$props, {
                        value: this.endValue,
                        defaultValue: e[1],
                        disabledTime: this.disabledEndTime
                    })),
                    on: xc({}, xc({}, this.$listeners, {
                        select: this.handleSelectEnd
                    }))
                })])
            }
        }
            , Cm = {
            name: "DatetimePanel",
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            emits: ["select", "update:show-time-panel"],
            props: xc({}, Tu.props, {}, ym.props, {
                showTimePanel: {
                    type: Boolean,
                    default: void 0
                }
            }),
            data: function() {
                return {
                    defaultTimeVisible: !1,
                    currentValue: this.value
                }
            },
            computed: {
                timeVisible: function() {
                    return "boolean" === typeof this.showTimePanel ? this.showTimePanel : this.defaultTimeVisible
                }
            },
            watch: {
                value: function(t) {
                    this.currentValue = t
                }
            },
            methods: {
                closeTimePanel: function() {
                    this.defaultTimeVisible = !1,
                        this.$emit("update:show-time-panel", !1)
                },
                openTimePanel: function() {
                    this.defaultTimeVisible = !0,
                        this.$emit("update:show-time-panel", !0)
                },
                emitDate: function(t, e) {
                    this.$emit("select", t, e)
                },
                handleSelect: function(t, e) {
                    "date" === e && this.openTimePanel();
                    var s = Xc(t, Wc(this.value, this.defaultValue));
                    this.disabledTime(new Date(s)) && (s = Xc(t, this.defaultValue),
                        this.disabledTime(new Date(s))) ? this.currentValue = s : this.emitDate(s, e)
                }
            },
            render: function() {
                var t = arguments[0]
                    , e = {
                    props: xc({}, ed(this.$props, Object.keys(Tu.props)), {
                        type: "date",
                        value: this.currentValue
                    }),
                    on: {
                        select: this.handleSelect
                    }
                }
                    , s = {
                    props: xc({}, ed(this.$props, Object.keys(ym.props)), {
                        showTimeHeader: !0,
                        value: this.currentValue
                    }),
                    on: {
                        select: this.emitDate,
                        clicktitle: this.closeTimePanel
                    }
                }
                    , a = this.prefixClass;
                return t("div", [t(Tu, Uc([{}, e])), this.timeVisible && t(ym, Uc([{
                    class: "".concat(a, "-calendar-time")
                }, s]))])
            }
        }
            , wm = {
            name: "DatetimeRange",
            inject: {
                prefixClass: {
                    default: "mx"
                }
            },
            emits: ["select", "update:show-time-panel"],
            props: xc({}, Lu.props, {}, _m.props, {
                showTimePanel: {
                    type: Boolean,
                    default: void 0
                }
            }),
            data: function() {
                return {
                    defaultTimeVisible: !1,
                    currentValue: this.value
                }
            },
            computed: {
                timeVisible: function() {
                    return "boolean" === typeof this.showTimePanel ? this.showTimePanel : this.defaultTimeVisible
                }
            },
            watch: {
                value: function(t) {
                    this.currentValue = t
                }
            },
            methods: {
                closeTimePanel: function() {
                    this.defaultTimeVisible = !1,
                        this.$emit("update:show-time-panel", !1)
                },
                openTimePanel: function() {
                    this.defaultTimeVisible = !0,
                        this.$emit("update:show-time-panel", !0)
                },
                emitDate: function(t, e) {
                    this.$emit("select", t, e)
                },
                handleSelect: function(t, e) {
                    var s = this;
                    "date" === e && this.openTimePanel();
                    var a = Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue]
                        , i = t.map((function(t, e) {
                            var i = qc(s.value) ? s.value[e] : a[e];
                            return Xc(t, i)
                        }
                    ));
                    i[1].getTime() < i[0].getTime() && (i = [i[0], i[0]]),
                        i.some(this.disabledTime) && (i = t.map((function(t, e) {
                                return Xc(t, a[e])
                            }
                        )),
                            i.some(this.disabledTime)) ? this.currentValue = i : this.emitDate(i, e)
                }
            },
            render: function() {
                var t = arguments[0]
                    , e = {
                    props: xc({}, ed(this.$props, Object.keys(Lu.props)), {
                        type: "date",
                        value: this.currentValue
                    }),
                    on: {
                        select: this.handleSelect
                    }
                }
                    , s = {
                    props: xc({}, ed(this.$props, Object.keys(_m.props)), {
                        value: this.currentValue,
                        showTimeHeader: !0
                    }),
                    on: {
                        select: this.emitDate,
                        clicktitle: this.closeTimePanel
                    }
                }
                    , a = this.prefixClass;
                return t("div", [t(Lu, Uc([{}, e])), this.timeVisible && t(_m, Uc([{
                    class: "".concat(a, "-calendar-time")
                }, s]))])
            }
        }
            , km = {
            default: Tu,
            time: ym,
            datetime: Cm
        }
            , Sm = {
            default: Lu,
            time: _m,
            datetime: wm
        }
            , xm = {
            name: "DatePicker",
            provide: function() {
                var t = this;
                return {
                    getLocale: function() {
                        return t.locale
                    },
                    getWeek: this.getWeek,
                    prefixClass: this.prefixClass,
                    dispatchDatePicker: this.$emit.bind(this)
                }
            },
            props: xc({}, Cm.props, {
                value: {},
                valueType: {
                    type: String,
                    default: "date"
                },
                type: {
                    type: String,
                    default: "date"
                },
                format: {
                    type: String
                },
                formatter: {
                    type: Object
                },
                range: {
                    type: Boolean,
                    default: !1
                },
                multiple: {
                    type: Boolean,
                    default: !1
                },
                rangeSeparator: {
                    type: String
                },
                lang: {
                    type: [String, Object]
                },
                placeholder: {
                    type: String,
                    default: ""
                },
                editable: {
                    type: Boolean,
                    default: !0
                },
                disabled: {
                    type: Boolean,
                    default: !1
                },
                clearable: {
                    type: Boolean,
                    default: !0
                },
                prefixClass: {
                    type: String,
                    default: "mx"
                },
                inputClass: {},
                inputAttr: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                appendToBody: {
                    type: Boolean,
                    default: !0
                },
                open: {
                    type: Boolean,
                    default: void 0
                },
                popupClass: {},
                popupStyle: {
                    type: Object,
                    default: function() {
                        return {}
                    }
                },
                inline: {
                    type: Boolean,
                    default: !1
                },
                confirm: {
                    type: Boolean,
                    default: !1
                },
                confirmText: {
                    type: String,
                    default: "OK"
                },
                renderInputText: {
                    type: Function
                },
                shortcuts: {
                    type: Array,
                    validator: function(t) {
                        return Array.isArray(t) && t.every((function(t) {
                                return td(t) && "string" === typeof t.text && "function" === typeof t.onClick
                            }
                        ))
                    },
                    default: function() {
                        return []
                    }
                }
            }),
            data: function() {
                return {
                    currentValue: null,
                    userInput: null,
                    defaultOpen: !1,
                    mouseInInput: !1
                }
            },
            computed: {
                popupVisible: function() {
                    return !this.disabled && ("boolean" === typeof this.open ? this.open : this.defaultOpen)
                },
                innerRangeSeparator: function() {
                    return this.rangeSeparator || (this.multiple ? "," : " ~ ")
                },
                innerFormat: function() {
                    var t = {
                        date: "YYYY-MM-DD",
                        datetime: "YYYY-MM-DD HH:mm:ss",
                        year: "YYYY",
                        month: "YYYY-MM",
                        time: "HH:mm:ss",
                        week: "w"
                    };
                    return this.format || t[this.type] || t.date
                },
                innerValue: function() {
                    var t = this.value;
                    return this.validMultipleType ? (t = Array.isArray(t) ? t : [],
                        t.map(this.value2date)) : this.range ? (t = Array.isArray(t) ? t.slice(0, 2) : [null, null],
                        t.map(this.value2date)) : this.value2date(t)
                },
                text: function() {
                    var t = this;
                    return null !== this.userInput ? this.userInput : "function" === typeof this.renderInputText ? this.renderInputText(this.innerValue) : this.isValidValue(this.innerValue) ? Array.isArray(this.innerValue) ? this.innerValue.map((function(e) {
                            return t.formatDate(e)
                        }
                    )).join(this.innerRangeSeparator) : this.formatDate(this.innerValue) : ""
                },
                showClearIcon: function() {
                    return !this.disabled && this.clearable && this.text && this.mouseInInput
                },
                locale: function() {
                    return td(this.lang) ? sd(ud(), this.lang) : ud(this.lang)
                },
                validMultipleType: function() {
                    var t = ["date", "month", "year"];
                    return this.multiple && !this.range && -1 !== t.indexOf(this.type)
                }
            },
            watch: {
                innerValue: {
                    immediate: !0,
                    handler: function(t) {
                        this.currentValue = t
                    }
                },
                popupVisible: {
                    handler: function(t) {
                        t && (this.currentValue = this.innerValue)
                    }
                }
            },
            created: function() {
                "object" === Cc(this.format) && console.warn("[vue2-datepicker]: The prop `format` don't support Object any more. You can use the new prop `formatter` to replace it")
            },
            methods: {
                handleMouseEnter: function() {
                    this.mouseInInput = !0
                },
                handleMouseLeave: function() {
                    this.mouseInInput = !1
                },
                handleClickOutSide: function(t) {
                    var e = t.target;
                    this.$el.contains(e) || this.closePopup()
                },
                getFormatter: function(t) {
                    return td(this.formatter) && this.formatter[t] || td(this.format) && this.format[t]
                },
                getWeek: function(t, e) {
                    return "function" === typeof this.getFormatter("getWeek") ? this.getFormatter("getWeek")(t, e) : Sl(t, e)
                },
                parseDate: function(t, e) {
                    if (e = e || this.innerFormat,
                    "function" === typeof this.getFormatter("parse"))
                        return this.getFormatter("parse")(t, e);
                    var s = new Date;
                    return _c(t, e, {
                        locale: this.locale.formatLocale,
                        backupDate: s
                    })
                },
                formatDate: function(t, e) {
                    return e = e || this.innerFormat,
                        "function" === typeof this.getFormatter("stringify") ? this.getFormatter("stringify")(t, e) : Fl(t, e, {
                            locale: this.locale.formatLocale
                        })
                },
                value2date: function(t) {
                    switch (this.valueType) {
                        case "date":
                            return t instanceof Date ? new Date(t.getTime()) : new Date(NaN);
                        case "timestamp":
                            return "number" === typeof t ? new Date(t) : new Date(NaN);
                        case "format":
                            return "string" === typeof t ? this.parseDate(t) : new Date(NaN);
                        default:
                            return "string" === typeof t ? this.parseDate(t, this.valueType) : new Date(NaN)
                    }
                },
                date2value: function(t) {
                    if (!jc(t))
                        return null;
                    switch (this.valueType) {
                        case "date":
                            return t;
                        case "timestamp":
                            return t.getTime();
                        case "format":
                            return this.formatDate(t);
                        default:
                            return this.formatDate(t, this.valueType)
                    }
                },
                emitValue: function(t, e) {
                    var s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                    this.userInput = null;
                    var a = Array.isArray(t) ? t.map(this.date2value) : this.date2value(t);
                    return this.$emit("input", a),
                        this.$emit("change", a, e),
                    s && this.closePopup(),
                        a
                },
                isValidValue: function(t) {
                    return this.validMultipleType ? Rc(t) : this.range ? qc(t) : jc(t)
                },
                isValidValueAndNotDisabled: function(t) {
                    if (!this.isValidValue(t))
                        return !1;
                    var e = "function" === typeof this.disabledDate ? this.disabledDate : function() {
                            return !1
                        }
                        , s = "function" === typeof this.disabledTime ? this.disabledTime : function() {
                            return !1
                        }
                    ;
                    return Array.isArray(t) || (t = [t]),
                        t.every((function(t) {
                                return !e(t) && !s(t)
                            }
                        ))
                },
                handleMultipleDates: function(t, e) {
                    if (this.validMultipleType && e) {
                        var s = e.filter((function(e) {
                                return e.getTime() !== t.getTime()
                            }
                        ));
                        return s.length === e.length && s.push(t),
                            s
                    }
                    return t
                },
                handleSelectDate: function(t, e, s) {
                    t = this.handleMultipleDates(t, s),
                        this.confirm ? this.currentValue = t : this.emitValue(t, e, !this.validMultipleType && (e === this.type || "time" === e))
                },
                clear: function() {
                    this.emitValue(this.range ? [null, null] : null),
                        this.$emit("clear")
                },
                handleClear: function(t) {
                    t.stopPropagation(),
                        this.clear()
                },
                handleConfirmDate: function() {
                    var t = this.emitValue(this.currentValue);
                    this.$emit("confirm", t)
                },
                handleSelectShortcut: function(t) {
                    var e = t.currentTarget.getAttribute("data-index")
                        , s = this.shortcuts[parseInt(e, 10)];
                    if (td(s) && "function" === typeof s.onClick) {
                        var a = s.onClick(this);
                        a && this.emitValue(a)
                    }
                },
                openPopup: function(t) {
                    this.popupVisible || this.disabled || (this.defaultOpen = !0,
                        this.$emit("open", t),
                        this.$emit("update:open", !0))
                },
                closePopup: function() {
                    this.popupVisible && (this.defaultOpen = !1,
                        this.$emit("close"),
                        this.$emit("update:open", !1))
                },
                blur: function() {
                    this.$refs.input && this.$refs.input.blur()
                },
                focus: function() {
                    this.$refs.input && this.$refs.input.focus()
                },
                handleInputChange: function() {
                    var t = this;
                    if (this.editable && null !== this.userInput) {
                        var e = this.userInput.trim();
                        if (this.userInput = null,
                        "" !== e) {
                            var s;
                            if (this.validMultipleType)
                                s = e.split(this.innerRangeSeparator).map((function(e) {
                                        return t.parseDate(e.trim())
                                    }
                                ));
                            else if (this.range) {
                                var a = e.split(this.innerRangeSeparator);
                                2 !== a.length && (a = e.split(this.innerRangeSeparator.trim())),
                                    s = a.map((function(e) {
                                            return t.parseDate(e.trim())
                                        }
                                    ))
                            } else
                                s = this.parseDate(e);
                            this.isValidValueAndNotDisabled(s) ? (this.emitValue(s),
                                this.blur()) : this.$emit("input-error", e)
                        } else
                            this.clear()
                    }
                },
                handleInputInput: function(t) {
                    this.userInput = "string" === typeof t ? t : t.target.value
                },
                handleInputKeydown: function(t) {
                    var e = t.keyCode;
                    9 === e ? this.closePopup() : 13 === e && this.handleInputChange()
                },
                handleInputBlur: function(t) {
                    this.$emit("blur", t)
                },
                handleInputFocus: function(t) {
                    this.openPopup(t),
                        this.$emit("focus", t)
                },
                hasSlot: function(t) {
                    return !(!this.$slots[t] && !this.$scopedSlots[t])
                },
                renderSlot: function(t, e, s) {
                    var a = this.$scopedSlots[t];
                    return a ? a(s) || e : this.$slots[t] || e
                },
                renderInput: function() {
                    var t = this.$createElement
                        , e = this.prefixClass
                        , s = xc({
                        name: "date",
                        type: "text",
                        autocomplete: "off",
                        value: this.text,
                        class: this.inputClass || "".concat(this.prefixClass, "-input"),
                        readonly: !this.editable,
                        disabled: this.disabled,
                        placeholder: this.placeholder
                    }, this.inputAttr)
                        , a = s.value
                        , i = s.class
                        , o = Ac(s, ["value", "class"])
                        , n = {
                        keydown: this.handleInputKeydown,
                        focus: this.handleInputFocus,
                        blur: this.handleInputBlur,
                        input: this.handleInputInput,
                        change: this.handleInputChange
                    }
                        , r = this.renderSlot("input", t("input", {
                        domProps: {
                            value: a
                        },
                        class: i,
                        attrs: xc({}, o),
                        on: xc({}, n),
                        ref: "input"
                    }), {
                        props: s,
                        events: n
                    })
                        , l = "time" === this.type ? t(Ud) : t(Fd);
                    return t("div", {
                        class: "".concat(e, "-input-wrapper"),
                        on: {
                            mouseenter: this.handleMouseEnter,
                            mouseleave: this.handleMouseLeave,
                            click: this.openPopup
                        },
                        ref: "inputWrapper"
                    }, [r, this.showClearIcon ? t("i", {
                        class: "".concat(e, "-icon-clear"),
                        on: {
                            click: this.handleClear
                        }
                    }, [this.renderSlot("icon-clear", t(Gd))]) : t("i", {
                        class: "".concat(e, "-icon-calendar")
                    }, [this.renderSlot("icon-calendar", l)])])
                },
                renderContent: function() {
                    var t = this.$createElement
                        , e = this.range ? Sm : km
                        , s = e[this.type] || e.default
                        , a = xc({}, ed(this.$props, Object.keys(s.props)), {
                        value: this.currentValue
                    })
                        , i = xc({}, ed(this.$listeners, s.emits || []), {
                        select: this.handleSelectDate
                    })
                        , o = t(s, Uc([{}, {
                        props: a,
                        on: i,
                        ref: "picker"
                    }]));
                    return t("div", {
                        class: "".concat(this.prefixClass, "-datepicker-body")
                    }, [this.renderSlot("content", o, {
                        value: this.currentValue,
                        emit: this.handleSelectDate
                    })])
                },
                renderSidebar: function() {
                    var t = this
                        , e = this.$createElement
                        , s = this.prefixClass;
                    return e("div", {
                        class: "".concat(s, "-datepicker-sidebar")
                    }, [this.renderSlot("sidebar", null, {
                        value: this.currentValue,
                        emit: this.handleSelectDate
                    }), this.shortcuts.map((function(a, i) {
                            return e("button", {
                                key: i,
                                attrs: {
                                    "data-index": i,
                                    type: "button"
                                },
                                class: "".concat(s, "-btn ").concat(s, "-btn-text ").concat(s, "-btn-shortcut"),
                                on: {
                                    click: t.handleSelectShortcut
                                }
                            }, [a.text])
                        }
                    ))])
                },
                renderHeader: function() {
                    var t = this.$createElement;
                    return t("div", {
                        class: "".concat(this.prefixClass, "-datepicker-header")
                    }, [this.renderSlot("header", null, {
                        value: this.currentValue,
                        emit: this.handleSelectDate
                    })])
                },
                renderFooter: function() {
                    var t = this.$createElement
                        , e = this.prefixClass;
                    return t("div", {
                        class: "".concat(e, "-datepicker-footer")
                    }, [this.renderSlot("footer", null, {
                        value: this.currentValue,
                        emit: this.handleSelectDate
                    }), this.confirm ? t("button", {
                        attrs: {
                            type: "button"
                        },
                        class: "".concat(e, "-btn ").concat(e, "-datepicker-btn-confirm"),
                        on: {
                            click: this.handleConfirmDate
                        }
                    }, [this.confirmText]) : null])
                }
            },
            render: function() {
                var t, e = arguments[0], s = this.prefixClass, a = this.inline, i = this.disabled, o = this.hasSlot("sidebar") || this.shortcuts.length ? this.renderSidebar() : null, n = e("div", {
                    class: "".concat(s, "-datepicker-content")
                }, [this.hasSlot("header") ? this.renderHeader() : null, this.renderContent(), this.hasSlot("footer") || this.confirm ? this.renderFooter() : null]);
                return e("div", {
                    class: (t = {},
                        wc(t, "".concat(s, "-datepicker"), !0),
                        wc(t, "".concat(s, "-datepicker-range"), this.range),
                        wc(t, "".concat(s, "-datepicker-inline"), a),
                        wc(t, "disabled", i),
                        t)
                }, [a ? null : this.renderInput(), a ? e("div", {
                    class: "".concat(s, "-datepicker-main")
                }, [o, n]) : e(Md, {
                    ref: "popup",
                    class: this.popupClass,
                    style: this.popupStyle,
                    attrs: {
                        visible: this.popupVisible,
                        appendToBody: this.appendToBody
                    },
                    on: {
                        clickoutside: this.handleClickOutSide
                    }
                }, [o, n])])
            }
        };
        xm.locale = dd,
            xm.install = function(t) {
                t.component(xm.name, xm)
            }
            ,
        "undefined" !== typeof window && window.Vue && xm.install(window.Vue),
            kc(xm, {
                CalendarPanel: Tu,
                CalendarRange: Lu,
                TimePanel: ym,
                TimeRange: _m,
                DatetimePanel: Cm,
                DatetimeRange: wm
            });
        var Mm = xm
            , Am = (s("411c"),
            {
                name: "TimePickerModal",
                components: {
                    DatePicker: Mm
                },
                data() {
                    return {
                        values: {
                            left: 0,
                            top: 0,
                            orderActive: null,
                            expiration: null
                        },
                        mode: "default"
                    }
                },
                methods: {
                    updateOrder() {
                        const t = Date.now();
                        if (this.expiration <= t)
                            return this.$store.commit(n["V"], "INVALID_TIME"),
                                void (this.values.expiration = null);
                        this.$store.dispatch(r["i"], {
                            id: this.values.orderActive,
                            account_id: this.activeAccount.id,
                            expiration: this.values.expiration / 1e3
                        }),
                            this.$store.commit(n["F"], {
                                timePicker: !1
                            })
                    },
                    hideModal() {
                        this.$store.commit(n["F"], {
                            timePicker: !1
                        });
                        let t = document.querySelector(".mx-datepicker-popup");
                        t && (t.style.display = "none")
                    },
                    currencySign: l["e"],
                    isMobile: l["h"]
                },
                computed: {
                    ...Object(o["b"])(["modals", "modalTimePicker", "tokens", "activeAccount", "symbols", "orders"]),
                    position() {
                        if (!this.modals.timePicker)
                            return {
                                left: 0,
                                top: 0
                            };
                        let t = {
                            width: document.body.offsetWidth,
                            height: document.body.offsetHeight
                        }
                            , e = {
                            width: 200,
                            height: this.values.orderActive ? 262 : 209
                        };
                        return t.width >= 600 && this.isMobile() ? {
                            left: this.modalTimePicker.posX,
                            top: this.modalTimePicker.posY - 87
                        } : t.width < 600 && this.isMobile() ? {
                            left: t.width - e.width,
                            top: this.modalTimePicker.top - 87
                        } : {
                            left: this.modalTimePicker.left - e.width - 10,
                            top: Math.min(this.modalTimePicker.top, t.height - e.height)
                        }
                    }
                },
                watch: {
                    modalTimePicker: {
                        deep: !0,
                        handler(t) {
                            for (let e in t)
                                void 0 !== this.values[e] && (this.values[e] = t[e]),
                                "expiration" === e && (this.values[e] = 1e3 * t[e] || null)
                        }
                    },
                    values: {
                        deep: !0,
                        handler(t) {
                            this.$store.commit(n["I"], t)
                        }
                    }
                }
            })
            , Dm = Am
            , Pm = (s("a1bd"),
            y(Dm, gl, bl, !1, null, "55a2c71d", null))
            , Tm = Pm.exports
            , Lm = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.fullscreen,
                    expression: "modals.fullscreen"
                }],
                staticClass: "fullscreen",
                class: {
                    mobile: t.isMobile
                }
            }, [e("header", {
                staticClass: "fs",
                class: {
                    mobile: t.isMobile
                }
            }, [e("div", [t.isMobile ? e("BaseToggleIconButton", {
                staticClass: "burger",
                attrs: {
                    "button-style": "secondary"
                },
                on: {
                    update: t.showMenu
                },
                scopedSlots: t._u([{
                    key: "init-icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "25",
                                viewBox: "0 0 24 25",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                d: "M3 18.5V16.5H21V18.5H3ZM3 13.5V11.5H21V13.5H3ZM3 8.5V6.5H21V8.5H3Z",
                                fill: "#BFC6DC"
                            }
                        })])]
                    },
                    proxy: !0
                }, {
                    key: "active-icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "24",
                                height: "25",
                                viewBox: "0 0 24 25",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                d: "M3 18.5V16.5H21V18.5H3ZM3 13.5V11.5H21V13.5H3ZM3 8.5V6.5H21V8.5H3Z",
                                fill: "#AFC6FF"
                            }
                        })])]
                    },
                    proxy: !0
                }], null, !1, 3111687835)
            }) : t._e(), e("BaseLogo", {
                staticClass: "header-logo",
                attrs: {
                    src: t.logoComputed,
                    height: t.logo.height
                },
                scopedSlots: t._u([t.logoComputed ? null : {
                    key: "logo-placeholder",
                    fn: function() {
                        return [e("span", {
                            staticClass: "brand"
                        }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform) + " ")]
                    },
                    proxy: !0
                }], null, !0)
            })], 1), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "head",
                class: {
                    mobile: t.isMobile
                }
            }, [e("BaseAutotraderButton", {
                staticClass: "autotrader"
            }), e("button", {
                staticClass: "start-trading label__large",
                on: {
                    click: t.close
                }
            }, [t._v(t._s(t.tokens.fullScreen.startTrading))])], 1)])]), e("div", {
                staticClass: "menu",
                class: {
                    hide: t.isMobile
                }
            }, [e("HamburgerMenu")], 1), e("main", {
                ref: "fullscreen",
                staticClass: "fs",
                class: {
                    dashboard: "dashboard" === t.modalFullscreen.page && !t.aspinDesign,
                    "aspin-design": t.aspinDesign
                }
            }, ["dashboard" === t.modalFullscreen.page ? e("Dashboard", {
                staticClass: "cabinet-item",
                class: {
                    dashboard: !t.aspinDesign,
                    mobile: t.isMobile
                }
            }) : t._e(), e("PersonalPage", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "personal" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='personal'"
                }],
                staticClass: "cabinet-item"
            }), e("Deposit", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "deposit" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='deposit'"
                }],
                staticClass: "cabinet-item"
            }), e("WithdrawalPage", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "withdrawal" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='withdrawal'"
                }],
                staticClass: "cabinet-item"
            }), e("VerificationPage", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "verification" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='verification'"
                }],
                staticClass: "cabinet-item"
            }), e("AccountsPage", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "accounts" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='accounts'"
                }],
                staticClass: "cabinet-item"
            }), e("Support", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "support" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='support'"
                }],
                staticClass: "cabinet-item support",
                class: {
                    mobile: t.isMobile
                }
            }), e("Savings", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "savings" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='savings'"
                }],
                staticClass: "cabinet-item"
            }), e("SettingPage", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "settings" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='settings'"
                }],
                staticClass: "cabinet-item"
            }), t.verificationState ? t._e() : e("div", {
                staticClass: "complete-verification"
            }, [t._v(" " + t._s(t.tokens.fullScreenDashboard.completeVerification) + " ")])], 1)])
        }
            , Im = []
            , Fm = function() {
            var t, e, s, a, i, o, n, r, l, c, d, u, m, p, h, v, f, g, b, y, _, C, w, k, S, x, M, A, D, P, T, L, I, F, O, B, N, $, V, E, U = this, H = U._self._c;
            return H("div", {
                class: {
                    hideTotalDeposits: U.hideTotalDeposits && !U.aspinDesign
                }
            }, [U.aspinDesign ? [H("div", {
                staticClass: "main-info"
            }, [H("div", {
                staticClass: "account-info"
            }, [H("div", {
                staticClass: "total-balance"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalBalance))]), H("div", {
                staticClass: "box"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + `currencies/${U.activeCurrency}.png`
                }
            }), H("div", {
                staticClass: "values"
            }, [H("p", {
                staticClass: "value converted-currency"
            }, [U._v(" " + U._s(U.activeCurrency && U.totalBalance >= 0 ? U.currencySign(U.activeCurrency) + U.totalBalance.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0"))]), H("p", {
                staticClass: "value-usd",
                class: U.getUsd(U.totalBalance) < 0 ? "aspin-red" : U.getUsd(U.totalBalance) > 0 ? "aspin-green" : ""
            }, [U._v(" $" + U._s(U.getUsd(U.totalBalance).toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            })))])])])]), H("div", {
                staticClass: "roi"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalDeposits))]), H("div", {
                staticClass: "box"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + `currencies/${U.activeCurrency}.png`
                }
            }), H("div", {
                staticClass: "values"
            }, [H("p", {
                staticClass: "value converted-currency"
            }, [U._v(" " + U._s(U.activeCurrency && U.totalDeposits > 0 ? U.currencySign(U.activeCurrency) + U.totalDeposits.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0") + " ")]), H("p", {
                staticClass: "value-usd",
                class: U.getUsd(U.totalBalance) < 0 ? "aspin-red" : U.getUsd(U.totalBalance) > 0 ? "aspin-green" : ""
            }, [U._v(" $" + U._s(U.getUsd(U.totalDeposits).toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            })))])])])]), H("div", {
                staticClass: "profitable-orders"
            }, [H("div", {
                staticClass: "box"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "aspin-design/1.png"
                }
            }), H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.profitableOrders))])]), H("p", {
                staticClass: "value green-gradient"
            }, [U._v(" " + U._s(U.dashboardData.stats.cnt_profit ? U.dashboardData.stats.cnt_profit : "0") + " | " + U._s(U.cntTotal))])]), H("div", {
                staticClass: "total-pnl"
            }, [H("div", {
                staticClass: "box"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "aspin-design/2.png"
                }
            }), H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalPnl))])]), H("div", {
                staticClass: "box currency"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + `currencies/${U.activeCurrency}.png`
                }
            }), H("p", {
                staticClass: "value",
                class: U.pnl < 0 ? "aspin-red" : U.pnl >= 0 ? "aspin-green" : ""
            }, [U._v(" " + U._s(U.activeCurrency ? U.pnl.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : "0") + " ")])])])]), H("div", {
                staticClass: "chart"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v("Success Rate")]), H("div", {
                staticClass: "aspin-pie-chart",
                staticStyle: {
                    display: "grid",
                    height: "100%"
                }
            }, [H("highcharts", {
                ref: "aspinPieChart",
                attrs: {
                    options: U.aspinPieChart
                }
            })], 1)])]), H("div", {
                staticClass: "assets-stats"
            }, [H("div", {
                staticClass: "stat btc"
            }, [H("div", {
                staticClass: "top"
            }, [H("div", {
                staticClass: "symbol symbol-BTCUSD"
            }), H("div", {
                staticClass: "currency-info"
            }, [H("span", [U._v("Bitcoin")]), H("div", {
                staticClass: "price"
            }, [U._v("USD " + U._s(null === (t = U.symbols["BTCUSD"]) || void 0 === t ? void 0 : t.quote.ask.toFixed(U.symbols["BTCUSD"].precision)) + " ")])]), H("span", [U._v("BTC")])]), H("div", {
                staticClass: "bottom"
            }, [H("highcharts", {
                ref: "chartBTCUSD",
                attrs: {
                    options: U.chartBTCUSD
                }
            }), H("div", {
                staticClass: "img-content"
            }, [H("img", {
                attrs: {
                    src: "",
                    alt: ""
                }
            }), H("span", {
                staticClass: "pct",
                class: {
                    "aspin-red": (null === (e = U.symbols["BTCUSD"]) || void 0 === e ? void 0 : e.quote) && (null === (s = U.symbols["BTCUSD"]) || void 0 === s ? void 0 : s.quote.changePct) < 0,
                    "aspin-green": (null === (a = U.symbols["BTCUSD"]) || void 0 === a ? void 0 : a.quote) && 0 < (null === (i = U.symbols["BTCUSD"]) || void 0 === i ? void 0 : i.quote.changePct)
                }
            }, [U._v(" " + U._s((null !== (o = U.symbols["BTCUSD"]) && void 0 !== o && o.quote && (null === (n = U.symbols["BTCUSD"]) || void 0 === n ? void 0 : n.quote.changePct) > 0 ? "+" : "") + (null !== (r = U.symbols["BTCUSD"]) && void 0 !== r && r.quote && null !== (l = U.symbols["BTCUSD"]) && void 0 !== l && l.quote.changePct ? null === (c = U.symbols["BTCUSD"]) || void 0 === c ? void 0 : c.quote.changePct : 0).toFixed(2) + "%") + " ")])])], 1)]), H("div", {
                staticClass: "stat trx"
            }, [H("div", {
                staticClass: "top"
            }, [H("div", {
                staticClass: "symbol symbol-TRXUSD"
            }), H("div", {
                staticClass: "currency-info"
            }, [H("span", [U._v("Tron")]), H("div", {
                staticClass: "price"
            }, [U._v("USD " + U._s(null === (d = U.symbols["TRXUSD"]) || void 0 === d ? void 0 : d.quote.ask.toFixed(U.symbols["TRXUSD"].precision)) + " ")])]), H("span", [U._v("TRX")])]), H("div", {
                staticClass: "bottom"
            }, [H("highcharts", {
                ref: "chartTRXUSD",
                attrs: {
                    options: U.chartTRXUSD
                }
            }), H("div", {
                staticClass: "img-content"
            }, [H("img", {
                attrs: {
                    src: "",
                    alt: ""
                }
            }), H("span", {
                staticClass: "pct",
                class: {
                    "aspin-red": (null === (u = U.symbols["TRXUSD"]) || void 0 === u ? void 0 : u.quote) && (null === (m = U.symbols["TRXUSD"]) || void 0 === m ? void 0 : m.quote.changePct) < 0,
                    "aspin-green": (null === (p = U.symbols["TRXUSD"]) || void 0 === p ? void 0 : p.quote) && 0 < (null === (h = U.symbols["TRXUSD"]) || void 0 === h ? void 0 : h.quote.changePct)
                }
            }, [U._v(" " + U._s((null !== (v = U.symbols["TRXUSD"]) && void 0 !== v && v.quote && (null === (f = U.symbols["TRXUSD"]) || void 0 === f ? void 0 : f.quote.changePct) > 0 ? "+" : "") + (null !== (g = U.symbols["TRXUSD"]) && void 0 !== g && g.quote && null !== (b = U.symbols["TRXUSD"]) && void 0 !== b && b.quote.changePct ? null === (y = U.symbols["TRXUSD"]) || void 0 === y ? void 0 : y.quote.changePct : 0).toFixed(2) + "%") + " ")])])], 1)]), H("div", {
                staticClass: "stat sol"
            }, [H("div", {
                staticClass: "top"
            }, [H("div", {
                staticClass: "symbol symbol-SOLUSD"
            }), H("div", {
                staticClass: "currency-info"
            }, [H("span", [U._v("Solana")]), H("div", {
                staticClass: "price"
            }, [U._v("USD " + U._s(null === (_ = U.symbols["SOLUSD"]) || void 0 === _ ? void 0 : _.quote.ask.toFixed(U.symbols["SOLUSD"].precision)) + " ")])]), H("span", [U._v("SOL")])]), H("div", {
                staticClass: "bottom"
            }, [H("highcharts", {
                ref: "chartSOLUSD",
                attrs: {
                    options: U.chartSOLUSD
                }
            }), H("div", {
                staticClass: "img-content"
            }, [H("img", {
                attrs: {
                    src: "",
                    alt: ""
                }
            }), H("span", {
                staticClass: "pct",
                class: {
                    "aspin-red": (null === (C = U.symbols["SOLUSD"]) || void 0 === C ? void 0 : C.quote) && (null === (w = U.symbols["SOLUSD"]) || void 0 === w ? void 0 : w.quote.changePct) < 0,
                    "aspin-green": (null === (k = U.symbols["SOLUSD"]) || void 0 === k ? void 0 : k.quote) && 0 < (null === (S = U.symbols["SOLUSD"]) || void 0 === S ? void 0 : S.quote.changePct)
                }
            }, [U._v(" " + U._s((null !== (x = U.symbols["SOLUSD"]) && void 0 !== x && x.quote && (null === (M = U.symbols["SOLUSD"]) || void 0 === M ? void 0 : M.quote.changePct) > 0 ? "+" : "") + (null !== (A = U.symbols["SOLUSD"]) && void 0 !== A && A.quote && null !== (D = U.symbols["SOLUSD"]) && void 0 !== D && D.quote.changePct ? null === (P = U.symbols["SOLUSD"]) || void 0 === P ? void 0 : P.quote.changePct : 0).toFixed(2) + "%") + " ")])])], 1)]), H("div", {
                staticClass: "stat bnb"
            }, [H("div", {
                staticClass: "top"
            }, [H("div", {
                staticClass: "symbol symbol-BNBUSD"
            }), H("div", {
                staticClass: "currency-info"
            }, [H("span", [U._v("Binance")]), H("div", {
                staticClass: "price"
            }, [U._v("USD " + U._s(null === (T = U.symbols["BNBUSD"]) || void 0 === T ? void 0 : T.quote.ask.toFixed(U.symbols["BNBUSD"].precision)) + " ")])]), H("span", [U._v("BNB")])]), H("div", {
                staticClass: "bottom"
            }, [H("highcharts", {
                ref: "chartBNBUSD",
                attrs: {
                    options: U.chartBNBUSD
                }
            }), H("div", {
                staticClass: "img-content"
            }, [H("img", {
                attrs: {
                    src: "",
                    alt: ""
                }
            }), H("span", {
                staticClass: "pct",
                class: {
                    "aspin-red": (null === (L = U.symbols["BNBUSD"]) || void 0 === L ? void 0 : L.quote) && (null === (I = U.symbols["BNBUSD"]) || void 0 === I ? void 0 : I.quote.changePct) < 0,
                    "aspin-green": (null === (F = U.symbols["BNBUSD"]) || void 0 === F ? void 0 : F.quote) && 0 < (null === (O = U.symbols["BNBUSD"]) || void 0 === O ? void 0 : O.quote.changePct)
                }
            }, [U._v(" " + U._s((null !== (B = U.symbols["BNBUSD"]) && void 0 !== B && B.quote && (null === (N = U.symbols["BNBUSD"]) || void 0 === N ? void 0 : N.quote.changePct) > 0 ? "+" : "") + (null !== ($ = U.symbols["BNBUSD"]) && void 0 !== $ && $.quote && null !== (V = U.symbols["BNBUSD"]) && void 0 !== V && V.quote.changePct ? null === (E = U.symbols["BNBUSD"]) || void 0 === E ? void 0 : E.quote.changePct : 0).toFixed(2) + "%") + " ")])])], 1)])]), H("div", {
                staticClass: "chart-line"
            }, [H("div", {
                staticClass: "chart-line-head"
            }, [H("div", {
                staticClass: "time"
            }, [H("button", {
                staticClass: "time-item fs-small",
                class: {
                    active: "Week" === U.timeframe
                },
                on: {
                    click: function(t) {
                        return U.changeTimeframe("Week", 7)
                    }
                }
            }, [U._v(U._s(U.tokens.fullScreenDashboard.week) + " ")]), H("button", {
                staticClass: "time-item fs-small",
                class: {
                    active: "Month" === U.timeframe
                },
                on: {
                    click: function(t) {
                        return U.changeTimeframe("Month", 30)
                    }
                }
            }, [U._v(U._s(U.tokens.fullScreenDashboard.month) + " ")])])]), H("div", {
                staticStyle: {
                    display: "grid",
                    height: "100%"
                }
            }, [H("highcharts", {
                ref: "lineChart",
                attrs: {
                    options: U.chartOptionsLine
                }
            })], 1)]), H("div", {
                staticClass: "accounts"
            }, U._l(U.accounts ? U.accounts : "", (function(t) {
                    return H("div", {
                        key: t.id,
                        staticClass: "account",
                        class: {
                            active: t && U.activeAccount.id === t.id,
                            real: t && !t.demo,
                            demo: t && t.demo
                        }
                    }, [H("div", {
                        staticClass: "head"
                    }, [H("img", {
                        attrs: {
                            src: U.staticBase + `currencies/${t.currency}.png`,
                            alt: ""
                        }
                    }), H("h3", [U._v(U._s(t.currency) + " " + U._s(U.tokens.fullScreenDashboard.account))])]), H("div", {
                        staticClass: "body"
                    }, [H("div", {
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.balance))]), H("p", {
                        staticClass: "value",
                        class: t.balance < 0 ? "red-gradient" : t.balance >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s(U.currencySign(t.currency) + " " + (t.balance > 0 ? t.balance : 0).toLocaleString(void 0, {
                        minimumFractionDigits: t.precision,
                        maximumFractionDigits: t.precision
                    })))]), H("p", {
                        staticClass: "aspin-green"
                    }, [U._v(" $" + U._s(U.getUsd(t.balance, t.currency).toLocaleString(void 0, {
                        minimumFractionDigits: t.precision,
                        maximumFractionDigits: t.precision
                    })) + " ")])]), H("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: 1 === parseInt(U.showLeverage),
                            expression: "parseInt(showLeverage) === 1"
                        }],
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.leverage))]), H("p", {
                        staticClass: "value",
                        class: t.leverage < 0 ? "red-gradient" : t.leverage >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s("1:" + t.leverage))])]), H("div", {
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.credit))]), H("p", {
                        staticClass: "value",
                        class: t.credit < 0 ? "red-gradient" : t.credit >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s(U.currencySign(t.currency) + " " + t.credit.toLocaleString(void 0, {
                        minimumFractionDigits: t.precision,
                        maximumFractionDigits: t.precision
                    })))])])]), H("div", {
                        staticClass: "footer"
                    }, [H("button", {
                        staticClass: "fs",
                        on: {
                            click: function(e) {
                                return U.makeActive(t.id)
                            }
                        }
                    }, [U._v(U._s(U.tokens.fullScreenDashboard.tradeNow) + " ")])])])
                }
            )), 0), H("div", {
                staticClass: "more-info"
            }, [H("div", {
                staticClass: "other-total-balance"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "aspin-design/total-balance.svg"
                }
            }), H("div", {
                staticClass: "values"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalBalance))]), H("p", {
                staticClass: "value converted-currency"
            }, [U._v(" " + U._s(U.activeCurrency && U.totalBalance >= 0 ? U.currencySign(U.activeCurrency) + U.totalBalance.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0"))]), H("p", {
                staticClass: "value-usd",
                class: U.getUsd(U.totalBalance) < 0 ? "aspin-red" : U.getUsd(U.totalBalance) > 0 ? "aspin-green" : ""
            }, [U._v(" $" + U._s(U.getUsd(U.totalBalance).toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            })))])])]), H("div", {
                staticClass: "total-pnl"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "aspin-design/other-total-pnl.svg"
                }
            }), H("div", {
                staticClass: "values"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalPnl))]), H("div", {
                staticClass: "box currency"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + `currencies/${U.activeCurrency}.png`
                }
            }), H("p", {
                staticClass: "value",
                class: U.pnl < 0 ? "aspin-red" : U.pnl >= 0 ? "aspin-green" : ""
            }, [U._v(" " + U._s(U.activeCurrency ? U.pnl.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : "0") + " ")])]), H("p", {
                staticClass: "value-usd",
                class: U.getUsd(U.pnl) < 0 ? "aspin-red" : U.getUsd(U.pnl) > 0 ? "aspin-green" : ""
            }, [U._v(" $" + U._s(U.getUsd(U.pnl).toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            })))])])])])] : [H("div", {
                staticClass: "total-balance"
            }, [H("div", {
                staticClass: "left"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "misc/goblet.png"
                }
            })]), H("div", {
                staticClass: "right"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalBalance))]), H("p", {
                staticClass: "value",
                class: U.totalBalance < 0 ? "red-gradient" : U.totalBalance >= 0 ? "green-gradient" : ""
            }, [U._v(" " + U._s(U.activeCurrency && U.totalBalance >= 0 ? U.currencySign(U.activeCurrency) + U.totalBalance.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0"))])])]), H("div", {
                staticClass: "total-pnl"
            }, [H("div", {
                staticClass: "left"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "misc/gem.png"
                }
            })]), H("div", {
                staticClass: "right"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalPnl))]), H("p", {
                staticClass: "value",
                class: U.pnl < 0 ? "red-gradient" : (U.pnl,
                    "green-gradient")
            }, [U._v(" " + U._s(U.activeCurrency ? U.currencySign(U.activeCurrency) + U.pnl.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0") + " ")]), H("span", [U._v("* " + U._s(U.tokens.fullScreenDashboard.usingCurrentRate))])])]), H("div", {
                staticClass: "profitable-orders"
            }, [H("div", {
                staticClass: "left"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "misc/target.png"
                }
            })]), H("div", {
                staticClass: "right"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.profitableOrders))]), H("p", {
                staticClass: "value green-gradient"
            }, [U._v(" " + U._s(U.dashboardData.stats.cnt_profit ? U.dashboardData.stats.cnt_profit : "0") + " / " + U._s(U.cntTotal))])])]), H("div", {
                staticClass: "roi",
                class: {
                    hide: U.hideTotalDeposits
                }
            }, [H("div", {
                staticClass: "left"
            }, [H("img", {
                attrs: {
                    src: U.staticBase + "misc/totalDeposit.png"
                }
            })]), H("div", {
                staticClass: "right"
            }, [H("h4", {
                staticClass: "title"
            }, [U._v(U._s(U.tokens.fullScreenDashboard.totalDeposits))]), H("p", {
                staticClass: "value roi-value",
                class: U.dashboardData.stats.deposits < 0 ? "red-gradient" : "green-gradient"
            }, [U._v(" " + U._s(U.activeCurrency && U.totalDeposits > 0 ? U.currencySign(U.activeCurrency) + U.totalDeposits.toLocaleString(void 0, {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }) : U.currencySign("USD") + " 0") + " ")])])]), H("div", {
                staticClass: "chart-line"
            }, [H("div", {
                staticClass: "chart-line-head"
            }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.tradingResults))]), H("div", {
                staticClass: "time"
            }, [H("button", {
                staticClass: "time-item fs-small",
                class: {
                    active: "Week" === U.timeframe
                },
                on: {
                    click: function(t) {
                        return U.changeTimeframe("Week", 7)
                    }
                }
            }, [U._v(U._s(U.tokens.fullScreenDashboard.week) + " ")]), H("button", {
                staticClass: "time-item fs-small",
                class: {
                    active: "Month" === U.timeframe
                },
                on: {
                    click: function(t) {
                        return U.changeTimeframe("Month", 30)
                    }
                }
            }, [U._v(U._s(U.tokens.fullScreenDashboard.month) + " ")])])]), H("div", {
                staticStyle: {
                    display: "grid",
                    height: "100%"
                }
            }, [H("highcharts", {
                ref: "lineChart",
                attrs: {
                    options: U.chartOptionsLine
                }
            })], 1)]), H("div", {
                staticClass: "chart-pie"
            }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.successRate))]), H("div", {
                staticStyle: {
                    display: "grid",
                    height: "100%"
                }
            }, [H("highcharts", {
                ref: "pieChart",
                attrs: {
                    options: U.chartOptionsPie
                }
            })], 1)]), U._l(U.accounts ? U.accounts : "", (function(t) {
                    return H("div", {
                        key: t.id,
                        staticClass: "account",
                        class: {
                            active: t && U.activeAccount.id === t.id,
                            real: t && !t.demo,
                            demo: t && t.demo
                        }
                    }, [H("div", {
                        staticClass: "head"
                    }, [H("h3", [U._v(U._s(U.tokens.fullScreenDashboard.account))]), H("div", {
                        staticClass: "balances"
                    }, [H("img", {
                        attrs: {
                            src: U.plate[t.id]
                        }
                    }), H("span", {
                        staticClass: "sign balance"
                    }, [U._v(U._s(U.currencySign(t.currency)))])])]), H("div", {
                        staticClass: "body"
                    }, [H("div", {
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.balance))]), H("p", {
                        staticClass: "value",
                        class: t.balance < 0 ? "red-gradient" : t.balance >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s(U.currencySign(t.currency) + " " + (t.balance > 0 ? t.balance : 0).toLocaleString(void 0, {
                        minimumFractionDigits: t.precision,
                        maximumFractionDigits: t.precision
                    })))])]), H("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: 1 === parseInt(U.showLeverage),
                            expression: "parseInt(showLeverage) === 1"
                        }],
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.leverage))]), H("p", {
                        staticClass: "value",
                        class: t.leverage < 0 ? "red-gradient" : t.leverage >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s("1:" + t.leverage))])]), H("div", {
                        staticClass: "info"
                    }, [H("h4", [U._v(U._s(U.tokens.fullScreenDashboard.credit))]), H("p", {
                        staticClass: "value",
                        class: t.credit < 0 ? "red-gradient" : t.credit >= 0 ? "green-gradient" : ""
                    }, [U._v(" " + U._s(U.currencySign(t.currency) + " " + t.credit.toLocaleString(void 0, {
                        minimumFractionDigits: t.precision,
                        maximumFractionDigits: t.precision
                    })))])])]), H("div", {
                        staticClass: "footer"
                    }, [H("button", {
                        staticClass: "fs",
                        on: {
                            click: function(e) {
                                return U.makeActive(t.id)
                            }
                        }
                    }, [U._v(U._s(U.tokens.fullScreenDashboard.tradeNow) + " ")])])])
                }
            ))]], 2)
        }
            , Om = []
            , Bm = {
            name: "Dashboard",
            mounted() {
                let t = this.dashboardData.balance_chart
                    , e = [];
                for (let a = 0; a < t.length; a++)
                    e[a] = t[a][1];
                var s;
                (this.chartOptionsLine.series[0].data = e,
                    this.foundMinMax(),
                    this.dashboardChartInit(),
                    this.aspinDesign) && (this.setAssetHistory(),
                null === (s = this.$refs.aspinPieChart) || void 0 === s || null === (s = s.chart) || void 0 === s || s.reflow(),
                    this.initAspinPieChart());
                this.chartOptionsPie.legend.itemStyle.color = "coinxe" === this.brand ? "#000000" : "#ffffff",
                this.aspinDesign && (this.chartOptionsLine.plotOptions.series = {
                    fillColor: {
                        linearGradient: [0, 0, 50, 300],
                        stops: [[0, "#C28066"], [1, "rgba(227,202,116,0.7)"]]
                    }
                },
                    this.chartOptionsLine.series[0].marker.fillColor = "#C28066")
            },
            data() {
                return {
                    chartData: {
                        labels: ["January", "February", "March"],
                        datasets: [{
                            data: [40, 20, 12]
                        }]
                    },
                    chartOptions: {
                        responsive: !0
                    },
                    isMobile: Object(l["h"])(),
                    brand: pt["e"],
                    platesFolder: pt["ob"],
                    showLeverage: pt["yb"],
                    time: 7,
                    timeframeData: [],
                    timeframe: "Week",
                    balanceChart: [],
                    allTime: [],
                    chartBTCUSD: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            height: 50,
                            maxWidth: 300,
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "rgba(188, 255, 233, 0.4)"], [1, "rgba(0,0,0,0)"]]
                                }
                            }
                        },
                        legend: !1,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        enableMouseTracking: !0,
                        tooltip: {
                            enabled: !1
                        },
                        series: [{
                            name: "60 min",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "transparent",
                                states: {
                                    hover: {
                                        enabled: !1
                                    }
                                }
                            }
                        }]
                    },
                    chartTRXUSD: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            height: 50,
                            maxWidth: 300,
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "rgba(188, 255, 233, 0.4)"], [1, "rgba(0,0,0,0)"]]
                                }
                            }
                        },
                        legend: !1,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        enableMouseTracking: !0,
                        tooltip: {
                            enabled: !1
                        },
                        series: [{
                            name: "60 min",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "transparent",
                                states: {
                                    hover: {
                                        enabled: !1
                                    }
                                }
                            }
                        }]
                    },
                    chartSOLUSD: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            height: 50,
                            maxWidth: 300,
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "rgba(188, 255, 233, 0.4)"], [1, "rgba(0,0,0,0)"]]
                                }
                            }
                        },
                        legend: !1,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        enableMouseTracking: !0,
                        tooltip: {
                            enabled: !1
                        },
                        series: [{
                            name: "60 min",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "transparent",
                                states: {
                                    hover: {
                                        enabled: !1
                                    }
                                }
                            }
                        }]
                    },
                    chartBNBUSD: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            height: 50,
                            maxWidth: 300,
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "rgba(188, 255, 233, 0.4)"], [1, "rgba(0,0,0,0)"]]
                                }
                            }
                        },
                        legend: !1,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        enableMouseTracking: !0,
                        tooltip: {
                            enabled: !1
                        },
                        series: [{
                            name: "60 min",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "transparent",
                                states: {
                                    hover: {
                                        enabled: !1
                                    }
                                }
                            }
                        }]
                    },
                    aspinPieChart: {
                        credits: !1,
                        chart: {
                            plotBackgroundColor: null,
                            plotBorderWidth: null,
                            plotShadow: !1,
                            type: "pie",
                            backgroundColor: "transparent",
                            height: 250
                        },
                        title: {
                            text: "adsad",
                            align: "center",
                            verticalAlign: "middle",
                            y: -15,
                            style: {
                                color: "#ffffff",
                                fontSize: window.innerWidth > 1400 ? "1vw" : "16px"
                            }
                        },
                        tooltip: {
                            pointFormat: "{series.name}: <b>{point.percentage:.1f}%</b>",
                            style: {
                                fontSize: window.innerWidth > 1400 ? ".8vw" : "12px"
                            }
                        },
                        accessibility: {
                            point: {
                                valueSuffix: "%"
                            }
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: !0,
                                cursor: "pointer",
                                borderWidth: 0,
                                dataLabels: {
                                    enabled: !1,
                                    format: "<b>{point.name}</b>: {point.percentage:.1f} %"
                                }
                            }
                        },
                        legend: {
                            enabled: !0,
                            itemStyle: {
                                fontWeight: "normal",
                                fontSize: window.innerWidth > 1400 ? ".7vw" : "12px"
                            },
                            layout: "vertical",
                            itemMarginTop: 5
                        },
                        series: [{
                            name: "Orders",
                            colorByPoint: !0,
                            innerSize: "85%",
                            showInLegend: !0,
                            data: [{
                                name: "",
                                y: 1,
                                color: "#F7931A"
                            }, {
                                name: "",
                                y: 1,
                                color: "#ffffff"
                            }, {
                                name: "",
                                y: 1,
                                color: "#30E0A1"
                            }]
                        }]
                    },
                    chartOptionsLine: {
                        title: !1,
                        credits: !1,
                        chart: {
                            backgroundColor: "transparent",
                            type: "areaspline"
                        },
                        plotOptions: {
                            areaspline: {
                                fillOpacity: .5
                            },
                            series: {
                                fillColor: {
                                    linearGradient: [0, 0, 50, 300],
                                    stops: [[0, "#1d98f9"], [1, "rgba(24,31,45,0.5)"]]
                                }
                            }
                        },
                        legend: !0,
                        xAxis: {
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            gridLineWidth: 0,
                            tickLength: 0,
                            min: 0,
                            categories: []
                        },
                        yAxis: {
                            title: {
                                text: null
                            },
                            labels: {
                                style: {
                                    fontSize: "0px"
                                }
                            },
                            min: 0,
                            gridLineWidth: 0,
                            tickLength: 0,
                            display: !0
                        },
                        lineWidth: 1,
                        threshold: null,
                        enableMouseTracking: !0,
                        tooltip: {
                            headerFormat: "{point.x}<br>",
                            pointFormat: "<strong>$ {point.y}",
                            shared: !0,
                            style: {
                                fontSize: window.innerWidth > 1400 ? ".8vw" : "12px"
                            }
                        },
                        series: [{
                            name: "$",
                            data: [],
                            marker: {
                                enable: !1,
                                fillColor: "#91BDFF",
                                states: {
                                    hover: {
                                        enabled: !0
                                    }
                                }
                            }
                        }]
                    },
                    chartOptionsPie: {
                        credits: !1,
                        chart: {
                            plotBackgroundColor: null,
                            plotBorderWidth: null,
                            plotShadow: !1,
                            type: "pie",
                            backgroundColor: "transparent"
                        },
                        title: {
                            text: "adsad",
                            align: "center",
                            verticalAlign: "middle",
                            y: 0,
                            style: {
                                color: "#92B8F1",
                                fontSize: window.innerWidth > 1400 ? "1vw" : "12px"
                            }
                        },
                        tooltip: {
                            pointFormat: "{series.name}: <b>{point.percentage:.1f}%</b>",
                            style: {
                                fontSize: window.innerWidth > 1400 ? ".8vw" : "12px"
                            }
                        },
                        accessibility: {
                            point: {
                                valueSuffix: "%"
                            }
                        },
                        plotOptions: {
                            pie: {
                                allowPointSelect: !0,
                                cursor: "pointer",
                                borderWidth: 0,
                                dataLabels: {
                                    enabled: !1,
                                    format: "<b>{point.name}</b>: {point.percentage:.1f} %"
                                }
                            }
                        },
                        legend: {
                            enabled: !0,
                            itemStyle: {
                                fontWeight: "normal",
                                fontSize: window.innerWidth > 1400 ? ".7vw" : "12px"
                            }
                        },
                        series: [{
                            name: "Orders",
                            colorByPoint: !0,
                            innerSize: "60%",
                            showInLegend: !0,
                            data: [{
                                name: "",
                                y: 1,
                                color: {
                                    linearGradient: {
                                        x1: 0,
                                        x2: 0,
                                        y1: 0,
                                        y2: 1
                                    },
                                    stops: [[0, "#DDE120"], [1, "#338C27"]]
                                }
                            }, {
                                name: "",
                                y: 1,
                                color: {
                                    linearGradient: {
                                        x1: 0,
                                        x2: 0,
                                        y1: 0,
                                        y2: 1
                                    },
                                    stops: [[0, "#B41717"], [1, "#2A6DBC"]]
                                }
                            }]
                        }]
                    },
                    aspinDesign: pt["b"],
                    hideTotalDeposits: pt["S"]
                }
            },
            methods: {
                currencySign: l["e"],
                close() {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    })
                },
                changeTimeframe(t, e) {
                    this.time !== e && (this.time = e,
                        this.timeframe = t,
                        this.$store.dispatch(r["k"], 24 * this.time),
                        this.chartOptionsLine.series[0].data = this.getTimeframeData,
                        this.foundMinMax())
                },
                foundMinMax() {
                    this.chartOptionsLine.yAxis.min = Math.min.apply(null, this.chartOptionsLine.series[0].data),
                        this.chartOptionsLine.yAxis.max = Math.max.apply(null, this.chartOptionsLine.series[0].data)
                },
                makeActive(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    }),
                        l["i"].setItem("activeAccount", t),
                        this.$store.commit(n["b"], t)
                },
                dashboardChartInit() {
                    this.chartOptionsPie.series[0].data[0].y = this.dashboardData.stats.cnt_profit ? parseInt(this.dashboardData.stats.cnt_profit) : 0,
                        this.chartOptionsPie.series[0].data[1].y = this.cntTotal ? this.cntTotal - this.dashboardData.stats.cnt_profit === 0 ? 0 : this.cntTotal - this.dashboardData.stats.cnt_profit : 1;
                    let t = this.chartOptionsPie.series[0].data[0].y / this.cntTotal === 0 ? 0 : this.chartOptionsPie.series[0].data[0].y / this.cntTotal * 100;
                    this.chartOptionsPie.title.text = isNaN(t) ? "0%" : t.toFixed(1) + "%",
                        this.chartOptionsLine.xAxis.categories = this.getTimeData,
                        this.chartOptionsPie.series[0].data[0].name = this.tokens.fullScreenDashboard.closedWithProfit,
                        this.chartOptionsPie.series[0].data[1].name = this.tokens.fullScreenDashboard.closedWithLoss,
                        this.chartOptionsPie.legend.itemStyle.color = "#235fb7"
                },
                initAspinPieChart() {
                    let t = 0;
                    for (const s in this.orders)
                        2 !== this.orders[s].type && 5 !== this.orders[s].type || t++;
                    this.aspinPieChart.series[0].data[0].y = t,
                        this.aspinPieChart.series[0].data[1].y = this.cntTotal ? this.cntTotal - this.dashboardData.stats.cnt_profit === 0 ? 0 : this.cntTotal - this.dashboardData.stats.cnt_profit : 1,
                        this.aspinPieChart.series[0].data[2].y = this.dashboardData.stats.cnt_profit ? parseInt(this.dashboardData.stats.cnt_profit) : 0;
                    let e = 0 === this.cntTotal ? 0 : this.aspinPieChart.series[0].data[2].y / this.cntTotal * 100;
                    e /= 0 === t ? 1 : 0,
                        this.aspinPieChart.title.text = isNaN(e) ? "0%" : e.toFixed(1) + "%",
                        this.chartOptionsLine.xAxis.categories = this.getTimeData,
                        this.aspinPieChart.series[0].data[0].name = this.tokens.widgetOrders.pending,
                        this.aspinPieChart.series[0].data[1].name = this.tokens.fullScreenDashboard.noOrderYet,
                        this.aspinPieChart.series[0].data[2].name = this.tokens.fullScreenDashboard.closedWithProfit,
                        this.aspinPieChart.legend.itemStyle.color = this.lightTheme ? "#000" : "#fff",
                        this.aspinPieChart.title.style.color = this.lightTheme ? "#000" : "#fff",
                    (0 !== this.cntTotal && 0 === this.aspinPieChart.series[0].data[0].y || 0 !== this.aspinPieChart.series[0].data[2].y) && (this.aspinPieChart.series[0].data[1].color = "#B41717",
                        this.aspinPieChart.series[0].data[1].name = this.tokens.fullScreenDashboard.closedWithLoss)
                },
                isOneAccountCurrency(t, e) {
                    let s = !0;
                    for (let a = 0; a < t.length; a++)
                        if (t[a] !== this.activeCurrency || t.length !== e.length)
                            return !1;
                    return s
                },
                convToActiveDashCurrency(t) {
                    var e;
                    return "USD" !== this.activeCurrency ? t.toFixed(2) / (null === (e = this.conversions[this.activeCurrency]) || void 0 === e ? void 0 : e.toFixed(4)) : t
                },
                convertToUSD(t, e, s) {
                    let a;
                    t = 0;
                    for (let o = 0; o < s.length; o++) {
                        var i;
                        if (a = 1,
                        "USD" !== e[o])
                            a = null === (i = this.conversions[e[o]]) || void 0 === i ? void 0 : i.toFixed(4);
                        t += a * s[o]
                    }
                    return t
                },
                getUsd(t, e) {
                    var s;
                    return e || (e = this.activeCurrency),
                    t * (null === (s = this.conversions[e]) || void 0 === s ? void 0 : s.toFixed(4))
                },
                setAssetHistory() {
                    for (const e in this.historyAssets) {
                        var t;
                        let s = [];
                        for (let t = 0; t < this.historyAssets[e].length; t++) {
                            if (void 0 === this.historyAssets[e][t])
                                break;
                            s[t] = this.historyAssets[e][t][3]
                        }
                        this.$set(this["chart" + e].series[0], "data", s),
                            this.$set(this["chart" + e].yAxis, "min", Math.min.apply(null, s)),
                            this.$set(this["chart" + e].yAxis, "max", Math.max.apply(null, s)),
                        null === (t = this.$refs["chart" + e]) || void 0 === t || null === (t = t.chart) || void 0 === t || t.reflow()
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["conversions", "user", "tokens", "modals", "activeAccount", "accounts", "dashboardData", "symbols", "orders", "activeCurrency", "symbols", "historyAssets", "orders", "stakingAccounts", "staticBase", "lightTheme"]),
                plate() {
                    let t = [];
                    for (const e in this.accounts) {
                        let s = ["beginner", "student", "basic", "bronze", "bronze_plus", "silver", "silver_plus", "gold", "platinum", "platinum_plus", "vip", "top", "diamond", "islamic", "business", "enterprise", "regular", "arbitrage", "basicml", "shift", "custom", "professional"].includes(this.activeAccount.group) ? this.activeAccount.group : "main";
                        t[this.accounts[e].id] = this.staticBase + this.platesFolder + "/" + s + "_plate.png"
                    }
                    return t
                },
                getTimeframeData() {
                    let t = this.dashboardData.balance_chart
                        , e = [];
                    for (let s = 0; s < t.length; s++)
                        e[s] = t[s][1];
                    return e
                },
                getTimeData() {
                    let t = this.dashboardData.balance_chart
                        , e = [];
                    for (let s = 0; s < t.length; s++)
                        e[s] = new Date(t[s][0] - 36e5).toLocaleString();
                    return e
                },
                totalBalance() {
                    if (!Object.keys(this.dashboardData.stats).length && !Object.keys(this.dashboardData.stats.accounts).length)
                        return 0;
                    let t = [].concat(...Object.values(this.accounts).map(t => t.balance), ...Object.values(this.stakingAccounts).map(t => t.balance))
                        , e = [].concat(...Object.values(this.accounts).map(t => t.currency), ...Object.values(this.stakingAccounts).map(t => t.currency))
                        , s = t.reduce( (t, e) => t + e, 0);
                    return this.isOneAccountCurrency(e, t) && "USD" !== this.activeCurrency ? s : (s = this.convertToUSD(s, e, t),
                        this.convToActiveDashCurrency(s))
                },
                totalDeposits() {
                    return "USD" !== this.activeCurrency ? this.convToActiveDashCurrency(this.dashboardData.stats.deposits) : this.dashboardData.stats.deposits
                },
                pnl() {
                    let t = 0
                        , e = []
                        , s = []
                        , a = Object.values(this.accounts).map(t => t.id)
                        , i = [];
                    this.dashboardData.stats && this.dashboardData.stats.accounts && (i = Object.values(this.dashboardData.stats.accounts).map(t => t.account_id));
                    for (let o = 0; o < a.length; o++) {
                        const t = i.indexOf(a[o]);
                        -1 !== t && (e.push(this.dashboardData.stats.accounts[t].profit),
                            s.push(this.accounts[a[o]].currency))
                    }
                    if (this.isOneAccountCurrency(s, e) && "USD" !== this.activeCurrency) {
                        for (let s = 0; s < e.length; s++)
                            t += e[s];
                        return t
                    }
                    return t = this.convertToUSD(t, s, e),
                        this.convToActiveDashCurrency(t)
                },
                amount() {
                    let t = 0
                        , e = []
                        , s = []
                        , a = Object.values(this.accounts).map(t => t.id)
                        , i = [];
                    this.dashboardData.stats && this.dashboardData.stats.accounts && (i = Object.values(this.dashboardData.stats.accounts).map(t => t.account_id));
                    for (let o = 0; o < a.length; o++) {
                        const t = i.indexOf(a[o]);
                        -1 !== t && (e.push(this.dashboardData.stats.accounts[t].amount),
                            s.push(this.accounts[a[o]].currency))
                    }
                    return this.isOneAccountCurrency(s, e) ? t : this.symbols[this.activeCurrency + "USD"] || this.symbols["USD" + this.activeCurrency] || "USD" === this.activeCurrency ? (t = this.convertToUSD(t, s, e),
                        this.convToActiveDashCurrency(t)) : 0
                },
                cntTotal() {
                    let t = 0;
                    for (const e in this.dashboardData.stats.accounts)
                        t += this.dashboardData.stats.accounts[e].cnt_total;
                    return t
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler() {
                        var t, e, s;
                        this.modals.fullscreen && (null === (t = this.$refs.lineChart) || void 0 === t || null === (t = t.chart) || void 0 === t || t.reflow(),
                        null === (e = this.$refs.pieChart) || void 0 === e || null === (e = e.chart) || void 0 === e || e.reflow(),
                        this.aspinDesign && (this.$store.dispatch(r["u"], ["BTCUSD", "TRXUSD", "SOLUSD", "BNBUSD"]),
                        null === (s = this.$refs.aspinPieChart) || void 0 === s || null === (s = s.chart) || void 0 === s || s.reflow(),
                            this.initAspinPieChart()))
                    }
                },
                historyAssets: {
                    deep: !0,
                    handler() {
                        this.setAssetHistory()
                    }
                },
                dashboardData: {
                    deep: !0,
                    handler() {
                        let t = this.dashboardData.balance_chart
                            , e = [];
                        for (let s = 0; s < t.length; s++)
                            e[s] = t[s][1];
                        this.chartOptionsLine.series[0].data = e,
                            this.foundMinMax(),
                            this.dashboardChartInit()
                    }
                },
                activeAccount: {
                    handler() {
                        void 0 !== this.activeAccount && this.$store.commit(n["c"], l["i"].activeCurrency)
                    }
                },
                lightTheme() {
                    this.initAspinPieChart(),
                        this.aspinPieChart.legend.itemStyle.color = this.lightTheme ? "#000" : "#fff",
                        this.aspinPieChart.title.style.color = this.lightTheme ? "#000" : "#fff"
                }
            }
        }
            , Nm = Bm
            , $m = (s("37da"),
            y(Nm, Fm, Om, !1, null, "22beb544", null))
            , Vm = $m.exports
            , Em = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                class: {
                    over: t.ddOver
                },
                on: {
                    drop: function(e) {
                        return e.preventDefault(),
                            (e => t.ddUploadConfirmation(e)).apply(null, arguments)
                    },
                    dragover: [function(t) {
                        t.preventDefault()
                    }
                        , function(e) {
                            return t.over(!0)
                        }
                    ],
                    dragenter: function(e) {
                        return t.over(!0)
                    },
                    dragleave: function(e) {
                        return t.over(!1)
                    },
                    click: function(e) {
                        t.activeSelect = !1
                    }
                }
            }, [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.deposit.toUpperCase()) + " ")]), e("div", {
                staticClass: "fullscreen-page-sub-title"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/deposit-method-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreenDeposit.methods) + " ")]), e("div", {
                staticClass: "deposit"
            }, [e("div", {
                staticClass: "methods"
            }, [e("div", {
                staticClass: "method-pad",
                class: {
                    active: "nax" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "nax" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "nax"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/BTC.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Crypto")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "cryptocurrency" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "cryptocurrency" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "cryptocurrency"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/BTC.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Сryptocurrency")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "bitcoin_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "bitcoin_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "bitcoin_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/BTC.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Bitcoin Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "tron_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "tron_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "tron_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/TRX.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Tron Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "xrp_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "xrp_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "xrp_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/XRP.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("XRP Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "ethereum_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "ethereum_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "ethereum_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/ETH.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Ethereum Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "usdt_sol_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "usdt_sol_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "usdt_sol_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "currencies/USDT.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("USDT SOL Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "usdt_erc20_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "usdt_erc20_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "usdt_erc20_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/USDTE.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("USDT ERC20 Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "usdt_trc20_manual" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "usdt_trc20_manual" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "usdt_trc20_manual"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/USDTT.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("cloud")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("USDT TRC20 Wallet")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "cc-ext" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "cc-ext" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "cc-ext"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card " + t._s(t.pspList.filter(t => void 0 !== t.name && "cc-ext" === t.name).length ? t.pspList.filter(t => void 0 !== t.name && "cc-ext" === t.name)[0].name : ""))]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "cc-ext2" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "cc-ext2" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "cc-ext2"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card " + t._s(t.pspList.filter(t => void 0 !== t.name && "cc-ext2" === t.name).length ? t.pspList.filter(t => void 0 !== t.name && "cc-ext2" === t.name)[0].name : ""))]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "bank" === t.tabActive,
                    hide: !Object.keys(t.bankConfig).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "bank"
                    }
                }
            }, [t._m(0), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Bank Transfer")]), e("span", [t._v("2-5 " + t._s(t.tokens.fullScreenDeposit.days))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "alwayspay_visa" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "alwayspay_visa" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "alwayspay_visa"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / APV")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "payonera" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "payonera" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "payonera"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / Payonera")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "checkoutchamp" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "checkoutchamp" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "checkoutchamp"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / Checkout Champ")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "chargemoney" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "chargemoney" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "chargemoney"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / Chargemoney ")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "bmopay" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "bmopay" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "bmopay"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / Bmopay")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "pinpay" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "pinpay" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "pinpay"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / Pinpay")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), e("div", {
                staticClass: "method-pad",
                class: {
                    active: "alwayspay_master" === t.tabActive,
                    hide: !t.pspList.filter(t => void 0 !== t.name && "alwayspay_master" === t.name).length
                },
                on: {
                    click: function(e) {
                        t.tabActive = "alwayspay_master"
                    }
                }
            }, [e("div", {
                staticClass: "img"
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/card.png",
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("credit_card")])]), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Credit/Debit Card / APM")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])]), t._l(t.getPspConfig, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "method-pad",
                        class: {
                            active: t.tabActive === a,
                            hide: !t.pspList.filter(t => void 0 !== t.name && t.name === a).length
                        },
                        on: {
                            click: function(e) {
                                return t.changeTabActive(a)
                            }
                        }
                    }, [e("div", {
                        staticClass: "img"
                    }, [t.aspinDesign ? e("img", {
                        attrs: {
                            src: t.staticBase + `aspin-design/psp${t.lightTheme ? "-black" : ""}.png`,
                            alt: ""
                        }
                    }) : e("i", {
                        staticClass: "material-icons"
                    }, [t._v("credit_card")])]), e("div", {
                        staticClass: "name"
                    }, [e("span", [t._v(t._s(s.name))]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])])
                }
            )), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.otherPsps.length > 0,
                    expression: "otherPsps.length > 0"
                }],
                staticClass: "method-pad",
                class: {
                    active: "other" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "other"
                    }
                }
            }, [t._m(1), e("div", {
                staticClass: "name"
            }, [e("span", [t._v("Other")]), e("span", [t._v("5-10 " + t._s(t.tokens.fullScreenDeposit.minutes))])])])], 2), e("div", {
                staticClass: "amounts",
                class: {
                    hide: "bank" !== t.tabActive
                }
            }, [t.hasPendingBankDeposit ? t._e() : e("div", [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.activeBankDetails.account,
                    expression: "activeBankDetails.account"
                }],
                staticClass: "form-title copy"
            }, [t._v(t._s(t.tokens.depositModal["BT_TITLE"].toUpperCase()) + " "), e("i", {
                staticClass: "material-icons",
                on: {
                    click: function(e) {
                        return t.copyObject(t.activeBankDetails)
                    }
                }
            }, [t._v("file_copy")])]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.bankAliasIdChosen,
                    expression: "bankAliasIdChosen"
                }],
                staticClass: "form-control bank-select fs",
                class: {
                    activeSelect: t.activeSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.activeSelect = !t.activeSelect
                    },
                    change: [function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.bankAliasIdChosen = e.target.multiple ? s : s[0]
                    }
                        , function(e) {
                            return t.changedBankDetails()
                        }
                    ]
                }
            }, t._l(t.banksConfigData, (function(s, a) {
                    return e("option", {
                        key: a,
                        domProps: {
                            value: a
                        }
                    }, [t._v(t._s(s.alias) + " - " + t._s(s.currency))])
                }
            )), 0), e("div", {
                staticClass: "banking-details"
            }, t._l(t.activeBankDetails, (function(s, a) {
                    return e("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: s,
                            expression: "variable"
                        }],
                        key: a
                    }, [e("div", [t._v(" " + t._s(t.tokens.depositModal[a]) + " "), a ? e("span", {
                        staticClass: "value"
                    }, [t._v(" : " + t._s(s))]) : t._e()])])
                }
            )), 0), e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.depositModal["BT_INVOICE"].toUpperCase()))]), t.hasPendingBankDeposit ? t._e() : e("div", {
                staticClass: "amount"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.amount))]), t.hasPendingBankDeposit ? t._e() : e("div", {
                staticClass: "row-fs",
                staticStyle: {
                    "justify-content": "flex-start"
                }
            }, [e("div", {
                staticClass: "cont"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amount,
                    expression: "amount"
                }],
                domProps: {
                    value: t.amount
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amount = e.target.value)
                    }
                }
            }), t._v(" " + t._s(t.currencySign(t.bankCurrencyChosen)) + " ")]), e("button", {
                staticClass: "fs-normal proceed",
                on: {
                    click: function(e) {
                        return t.generateInvoice()
                    }
                }
            }, [t._v("Generate Invoice")])])]), t.hasPendingBankDeposit ? e("div", {
                staticClass: "has-bank-transfer"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v("You have a pending bank transfer deposit. Please do the following:")]), e("ul", {
                staticClass: "bank-steps"
            }, [e("li", [t._m(2), e("div", {
                staticClass: "center"
            }, [e("button", {
                staticClass: "fs-normal",
                on: {
                    click: function(e) {
                        return t.downloadPdf(t.bankDeposit.id)
                    }
                }
            }, [t._v("Download PDF")])])]), t._m(3), e("li", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.bankDeposit.misc,
                    expression: "!bankDeposit.misc"
                }]
            }, [t._m(4), e("div", {
                staticClass: "center"
            }, [e("label", {
                staticClass: "attach",
                attrs: {
                    for: "file"
                }
            }, [t._v("Select File")]), e("input", {
                attrs: {
                    type: "file",
                    id: "file"
                },
                on: {
                    change: function(e) {
                        return t.uploadConfirmation(e)
                    }
                }
            })]), e("div", {
                staticClass: "center"
            }, [t._v("or drag and drop file onto this page")])]), e("li", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.bankDeposit.misc,
                    expression: "bankDeposit.misc"
                }]
            }, [t._m(5)]), t._m(6)])]) : t._e()]), t._l(t.cardPsps, (function(s, a) {
                    return e("CardBox", {
                        key: a,
                        attrs: {
                            "card-currencies": s.currencies,
                            alias: s.alias,
                            "tab-active": t.tabActive
                        },
                        on: {
                            sendDeposit: t.makeDeposit
                        }
                    })
                }
            )), e("div", {
                staticClass: "amounts",
                class: {
                    hide: "cc-ext2" !== t.tabActive
                }
            }, [e("div", {
                staticClass: "col"
            }, [t.showPSP ? e("a", {
                staticClass: "goBackToAmount",
                on: {
                    click: t.goBackToAmount
                }
            }, [t._v("Back to amount")]) : t._e(), e("div", {
                staticClass: "amount"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.amount))]), t.showAmount ? e("div", {
                staticClass: "row-fs stretch"
            }, [e("div", {
                staticClass: "cont"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amount,
                    expression: "amount"
                }],
                ref: "card-amount",
                domProps: {
                    value: t.amount
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amount = e.target.value)
                    }
                }
            }), e("div", {
                staticClass: "sign"
            }, [t._v(t._s(t.currencySign(t.currency)))])]), e("button", {
                staticClass: "fs-small proceed",
                on: {
                    click: t.makeDeposit
                }
            }, [t._v(t._s(t.tokens.fullScreenDeposit.continue) + " ")])]) : t._e(), t.showPSP ? e("CCExt2", {
                attrs: {
                    amount: t.amount
                }
            }) : t._e()], 1)]), t._l(t.pspConfig, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "amounts",
                        class: {
                            hide: t.tabActive !== a
                        }
                    }, ["cc-ext3" === a ? e("CCExt3", {
                        attrs: {
                            config: s,
                            depositButtonsList: t.depositButtonsList,
                            currency: t.currency,
                            amount: t.amount,
                            activeSelect: t.activeSelect
                        },
                        on: {
                            "change-amount": e => t.amount = e,
                            "change-activeSelect": e => t.activeSelect = !e,
                            "make-deposit": t.makeDeposit,
                            "change-select": e => t.currency = e
                        }
                    }) : e("div", [e("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: !t.isMobile,
                            expression: "!isMobile"
                        }],
                        staticClass: "row-fs buttons-row"
                    }, [e("div", {
                        staticClass: "col"
                    }, t._l(t.depositButtonsList.left, (function(s) {
                            return e("div", {
                                key: "button" + s.amount,
                                staticClass: "item",
                                on: {
                                    click: function(e) {
                                        t.amount = s.amount
                                    }
                                }
                            }, [t._v(t._s(s.amountStr) + " ")])
                        }
                    )), 0), e("div", {
                        staticClass: "col"
                    }, t._l(t.depositButtonsList.right, (function(s) {
                            return e("div", {
                                key: "button" + s.amount,
                                staticClass: "item",
                                on: {
                                    click: function(e) {
                                        t.amount = s.amount
                                    }
                                }
                            }, [t._v(t._s(s.amountStr) + " ")])
                        }
                    )), 0)]), e("div", {
                        staticClass: "amount"
                    }, [t._v(t._s(t.tokens.fullScreenDeposit.amount))]), e("div", {
                        staticClass: "row-fs"
                    }, [e("div", {
                        staticClass: "cont"
                    }, [e("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: t.amount,
                            expression: "amount"
                        }],
                        domProps: {
                            value: t.amount
                        },
                        on: {
                            input: function(e) {
                                e.target.composing || (t.amount = e.target.value)
                            }
                        }
                    }), e("select", {
                        directives: [{
                            name: "$model",
                            rawName: "v-$model",
                            value: t.currency,
                            expression: "currency"
                        }],
                        staticClass: "currency fs",
                        class: {
                            activeSelect: t.activeSelect,
                            disabled: s.currencies.length <= 1
                        },
                        domProps: {
                            value: t.currency
                        },
                        on: {
                            click: function(e) {
                                e.stopPropagation(),
                                    t.activeSelect = !t.activeSelect
                            }
                        }
                    }, t._l(s.currencies, (function(s) {
                            return e("option", {
                                key: s
                            }, [t._v(t._s(s) + " ")])
                        }
                    )), 0)]), e("button", {
                        staticClass: "fs-normal proceed",
                        on: {
                            click: t.makeDeposit
                        }
                    }, [t._v(t._s(t.tokens.fullScreenDeposit.continue) + " ")])])])], 1)
                }
            )), e("div", {
                staticClass: "address",
                class: {
                    hide: "nax" !== t.tabActive
                }
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v("CHOOSE CRYPTOCURRENCY")]), e("div", {
                staticClass: "crypto-icons"
            }, [e("button", {
                staticClass: "item fs",
                class: {
                    active: "BTC" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("nax", "BTC")
                    }
                }
            }, [t._v(" Bitcoin ")])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.address,
                    expression: "!address"
                }],
                staticClass: "address-generated"
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.addressReceipt) + " ")]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.address,
                    expression: "address"
                }],
                staticClass: "address-content"
            }, [e("div", {
                staticClass: "form-row qrcode"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.qrCode))]), e("div", {
                staticClass: "qr-new",
                on: {
                    click: function(e) {
                        return t.openQrCodeModal(t.address)
                    }
                }
            }, [e("QrcodeVue", {
                attrs: {
                    value: t.address,
                    size: 150
                }
            })], 1)]), e("div", {
                staticClass: "form-row nopad"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.depositAddress))])]), e("div", {
                staticClass: "qr-copy"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.address,
                    expression: "address"
                }],
                staticClass: "form-control fs",
                attrs: {
                    readonly: ""
                },
                domProps: {
                    value: t.address
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.address = e.target.value)
                    }
                }
            }), e("button", {
                staticClass: "copy fs",
                on: {
                    click: t.copyDepositAddress
                }
            }, [t._v(t._s("copy" === t.cryptoDepositState ? t.tokens.fullScreenDeposit.copy : t.tokens.fullScreenDeposit.continue) + " ")])])])]), e("div", {
                staticClass: "address",
                class: {
                    hide: "cryptocurrency" !== t.tabActive
                }
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v("CHOOSE CRYPTOCURRENCY")]), ["ciberaix", "maincp"].includes(t.brand) ? e("div", {
                staticClass: "crypto-icons"
            }, [e("button", {
                staticClass: "item fs",
                class: {
                    active: "TRX_USDT" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "TRX_USDT")
                    }
                }
            }, [t._v(" USDT TRC-20 ")])]) : "vanguardbrokers" === t.brand ? e("div", {
                staticClass: "crypto-icons"
            }, [e("button", {
                staticClass: "item fs",
                class: {
                    active: "ETH" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "ETH")
                    }
                }
            }, [t._v(" Ethereum ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "ETH_USDT" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "ETH_USDT")
                    }
                }
            }, [t._v(" USDT ERC-20 ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "ETH_USDC" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "ETH_USDC")
                    }
                }
            }, [t._v(" USDC ERC-20 ")])]) : e("div", {
                staticClass: "crypto-icons"
            }, [e("button", {
                staticClass: "item fs",
                class: {
                    active: "BTC" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "BTC")
                    }
                }
            }, [t._v(" Bitcoin ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "LTC" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "LTC")
                    }
                }
            }, [t._v(" Litecoin ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "DOGE" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "DOGE")
                    }
                }
            }, [t._v(" Dogecoin ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "BCH" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "BCH")
                    }
                }
            }, [t._v(" Bitcoin Cash ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "ETH" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "ETH")
                    }
                }
            }, [t._v(" Ethereum ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "MATIC" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "MATIC")
                    }
                }
            }, [t._v(" Polygon ")]), e("button", {
                staticClass: "item fs",
                class: {
                    active: "BNB" === t.currency
                },
                on: {
                    click: function(e) {
                        return t.changePsp("cryptocurrency", "BNB")
                    }
                }
            }, [t._v(" BNB ")])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.address,
                    expression: "!address"
                }],
                staticClass: "address-generated"
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.addressReceipt) + " ")]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.address,
                    expression: "address"
                }],
                staticClass: "address-content"
            }, [e("div", {
                staticClass: "form-row qrcode"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.qrCode))]), e("div", {
                staticClass: "qr-new",
                on: {
                    click: function(e) {
                        return t.openQrCodeModal(t.address)
                    }
                }
            }, [e("QrcodeVue", {
                attrs: {
                    value: t.address,
                    size: 150
                }
            })], 1)]), e("div", {
                staticClass: "form-row nopad"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.depositAddress))])]), e("div", {
                staticClass: "qr-copy"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.address,
                    expression: "address"
                }],
                staticClass: "form-control fs",
                attrs: {
                    readonly: ""
                },
                domProps: {
                    value: t.address
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.address = e.target.value)
                    }
                }
            }), e("button", {
                staticClass: "copy fs",
                on: {
                    click: t.copyDepositAddress
                }
            }, [t._v(t._s("copy" === t.cryptoDepositState ? t.tokens.fullScreenDeposit.copy : t.tokens.fullScreenDeposit.continue) + " ")])])])]), e("div", {
                staticClass: "other",
                class: {
                    hide: "other" !== t.tabActive
                }
            }, t._l(t.otherPsps, (function(s, a) {
                    return e("a", {
                        key: a,
                        attrs: {
                            target: "_blank",
                            href: t.properUrl(s)
                        }
                    }, [e("img", {
                        attrs: {
                            src: (s.logo ? `${t.api}/kyc/document/${s.logo}` : `${t.staticBase}/exchanges/custom/${t.getOtherPspImage(s.name)}.png`) + " "
                        }
                    })])
                }
            )), 0), t._l(t.manualPsps, (function(s) {
                    return e("ManualPsp", {
                        key: s.symbol,
                        attrs: {
                            alias: s.alias,
                            address: t.pspList.filter(t => void 0 !== t.name && t.name === s.alias).length ? t.pspList.filter(t => void 0 !== t.name && t.name === s.alias)[0].wallet : "",
                            "tab-active": t.tabActive
                        }
                    })
                }
            ))], 2), e("div", {
                staticClass: "form-row"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s("standexcapital" === t.brand ? "" : t.tokens.fullScreenDeposit.last) + " " + t._s(t.tokens.fullScreenDeposit.deposits) + " ")])]), e("div", {
                ref: "deposits",
                staticClass: "table-cont",
                on: {
                    scroll: function(e) {
                        return t.loadMore()
                    }
                }
            }, [e("table", {
                staticClass: "cabinet fs"
            }, [e("thead", [e("tr", {
                staticClass: "fs"
            }, [e("th", {
                staticClass: "nomobile fs"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.time.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.amount.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.currency.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.info.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.status.toUpperCase()))])])]), e("tbody", t._l(t.deposits.slice(0, t.loaded), (function(s) {
                    return e("tr", {
                        key: s.id,
                        staticClass: "fs"
                    }, [e("td", {
                        staticClass: "nomobile fs"
                    }, [t._v(t._s(new Date(1e3 * s.time_created).toLocaleString()))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(t.currencySign(s.currency) + s.amount.toFixed(-1 !== ["BTC", "ETH", "TRX", "ETM"].indexOf(s.currency) ? 8 : 2)) + " ")]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(s.currency))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(s.comment))]), e("td", {
                        staticClass: "fs",
                        class: t.tokens.statuses[s.status]
                    }, [t._v(t._s(t.tokens.statuses[s.status]))])])
                }
            )), 0)])]), e("div", {
                staticClass: "hollow-dots-spinner-wrapper"
            }, [t.dataIsLoaded ? e("div", {
                staticClass: "hollow-dots-spinner"
            }, [e("div", {
                staticClass: "dot"
            }), e("div", {
                staticClass: "dot"
            }), e("div", {
                staticClass: "dot"
            })]) : t._e()]), t.hidePsiDssCertificate ? t._e() : e("div", {
                staticClass: "certificate"
            }, [e("a", {
                attrs: {
                    href: "https://usa.visa.com/support/small-business/security-compliance.html#1",
                    target: "_blank"
                }
            }, [e("img", {
                staticClass: "visa",
                attrs: {
                    src: t.staticBase + "aspin-design/visa.png"
                }
            })]), e("a", {
                attrs: {
                    href: "https://www.mastercard.us/en-us/business/overview/safety-and-security/security-recommendations/site-data-protection-PCI.html",
                    target: "_blank"
                }
            }, [e("img", {
                staticClass: "mastercard",
                attrs: {
                    src: t.staticBase + "aspin-design/master-card.png"
                }
            })]), e("a", {
                attrs: {
                    href: "https://stripe.com/en-ca/guides/pci-compliance",
                    target: "_blank"
                }
            }, [e("img", {
                staticClass: "stripe",
                attrs: {
                    src: t.staticBase + "aspin-design/stripe.png"
                }
            })]), e("img", {
                staticClass: "pcidss",
                attrs: {
                    src: t.staticBase + "aspin-design/pcidss.png"
                },
                on: {
                    click: function(e) {
                        return t.pciDssModal()
                    }
                }
            })]), e("OtpModal", {
                on: {
                    entered: t.makeDeposit
                }
            })], 1)
        }
            , Um = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "img"
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("account_balance")])])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "img"
                }, [e("i", {
                    staticClass: "material-icons"
                }, [t._v("apps")])])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("h2", [e("span", [t._v("1")]), t._v(" Download the invoice")])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("li", [e("h2", [e("span", [t._v("2")]), t._v(" Pay the invoice in your bank")])])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("h2", [e("span", [t._v("3")]), t._v(" Upload the confirmation receipt")])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("h2", [e("span", [t._v("3")]), t._v(" The receipt has been uploaded")])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("li", [e("h2", [e("span", [t._v("4")]), t._v(" Wait for deposit confirmation")])])
            }
        ];
        s("5b81");
        const Hm = [{
            alias: "bitcoin_manual",
            symbol: "BTC"
        }, {
            alias: "tron_manual",
            symbol: "TRX"
        }, {
            alias: "xrp_manual",
            symbol: "XRP"
        }, {
            alias: "ethereum_manual",
            symbol: "ETH"
        }, {
            alias: "usdt_sol_manual",
            symbol: "USDT"
        }, {
            alias: "usdt_erc20_manual",
            symbol: "USDTE"
        }, {
            alias: "usdt_trc20_manual",
            symbol: "USDTT"
        }]
            , jm = [{
            alias: "payonera",
            currencies: ["USD", "CAD"]
        }, {
            alias: "bmopay",
            currencies: ["USD", "EUR"]
        }, {
            alias: "cc-ext",
            currencies: []
        }, {
            alias: "pinpay",
            currencies: ["USD", "EUR", "KGS", "RUB"]
        }, {
            alias: "alwayspay_visa",
            currencies: ["USD"]
        }, {
            alias: "checkoutchamp",
            currencies: ["EUR"]
        }, {
            alias: "chargemoney",
            currencies: ["USD"]
        }, {
            alias: "alwayspay_master",
            currencies: ["USD"]
        }];
        var qm = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "psp-interface"
            }, [t.showLoader ? e("div", {
                staticClass: "psp-loader"
            }, [t._v(" " + t._s(t.tokens.fullScreenCcExt.pleaseWait)), e("br"), e("img", {
                attrs: {
                    src: s("3eb7")
                }
            })]) : t._e(), t.showContent ? e("div", {
                staticClass: "psp-content"
            }, [e("h1", [t._v(t._s(t.tokens.fullScreenCcExt.cardPayment))]), e("h2", [t._v(t._s(t.tokens.fullScreenCcExt.inOrder) + " (" + t._s(t.currency) + " " + t._s(t.amount) + ") " + t._s(t.tokens.fullScreenCcExt.pleaseProvide))]), e("div", {
                staticClass: "card-container"
            }, [e("img", {
                staticClass: "card-img",
                attrs: {
                    src: s("599f")
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.num1,
                    expression: "cardData.num1"
                }],
                ref: "card-num1",
                staticClass: "card-input",
                staticStyle: {
                    left: "21px",
                    top: "79px",
                    width: "54px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "4",
                    placeholder: "0000"
                },
                domProps: {
                    value: t.cardData.num1
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "num1")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "num1", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.num2,
                    expression: "cardData.num2"
                }],
                ref: "card-num2",
                staticClass: "card-input",
                staticStyle: {
                    left: "79px",
                    top: "79px",
                    width: "54px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "4",
                    placeholder: "0000"
                },
                domProps: {
                    value: t.cardData.num2
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "num2")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "num2", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.num3,
                    expression: "cardData.num3"
                }],
                ref: "card-num3",
                staticClass: "card-input",
                staticStyle: {
                    left: "137px",
                    top: "79px",
                    width: "54px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "4",
                    placeholder: "0000"
                },
                domProps: {
                    value: t.cardData.num3
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "num3")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "num3", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.num4,
                    expression: "cardData.num4"
                }],
                ref: "card-num4",
                staticClass: "card-input",
                staticStyle: {
                    left: "195px",
                    top: "79px",
                    width: "54px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "4",
                    placeholder: "0000"
                },
                domProps: {
                    value: t.cardData.num4
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "num4")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "num4", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.month,
                    expression: "cardData.month"
                }],
                ref: "card-month",
                staticClass: "card-input",
                staticStyle: {
                    left: "52px",
                    top: "134px",
                    width: "56px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "2",
                    placeholder: "MM"
                },
                domProps: {
                    value: t.cardData.month
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "month")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "month", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.year,
                    expression: "cardData.year"
                }],
                ref: "card-year",
                staticClass: "card-input",
                staticStyle: {
                    left: "111px",
                    top: "134px",
                    width: "56px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "2",
                    placeholder: "YY"
                },
                domProps: {
                    value: t.cardData.year
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "year")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "year", e.target.value)
                    }
                }
            }), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.cvv,
                    expression: "cardData.cvv"
                }],
                ref: "card-cvv",
                staticClass: "card-input",
                staticStyle: {
                    left: "324px",
                    top: "79px",
                    width: "56px"
                },
                attrs: {
                    type: "text",
                    pattern: "\\d*",
                    maxlength: "3",
                    placeholder: "123"
                },
                domProps: {
                    value: t.cardData.cvv
                },
                on: {
                    keyup: function(e) {
                        return t.cardKeyup(e, "cvv")
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "cvv", e.target.value)
                    }
                }
            }), e("select", {
                directives: [{
                    name: "$model",
                    rawName: "v-$model",
                    value: t.currency,
                    expression: "currency"
                }],
                staticClass: "card-input form-control",
                staticStyle: {
                    left: "203px",
                    top: "35px"
                }
            }, [e("option", [t._v("USD")]), e("option", [t._v("EUR")]), e("option", [t._v("GBP")])])]), e("div", {
                staticClass: "psp-errors"
            }, [t._v(" " + t._s(t.errorText) + " ")]), e("button", {
                staticClass: "send",
                on: {
                    click: t.makeDeposit
                }
            }, [t._v("SEND")])]) : t._e(), t.showWait ? e("div", {
                staticClass: "psp-wait"
            }, [t._v(" Please wait. Your transaction is being processed..."), e("br"), e("img", {
                attrs: {
                    src: s("3eb7")
                }
            })]) : t._e(), e("div", {
                ref: "pspresultref",
                staticClass: "psp-result"
            })])
        }
            , Rm = []
            , Wm = {
            name: "CCExt2",
            props: ["amount"],
            data() {
                return {
                    showLoader: !0,
                    showContent: !1,
                    showWait: !1,
                    errorText: "",
                    currency: "USD",
                    cardData: {
                        num1: "",
                        num2: "",
                        num3: "",
                        num4: "",
                        month: "",
                        year: "",
                        cvv: ""
                    }
                }
            },
            mounted() {
                setTimeout( () => {
                        this.showLoader = !1,
                            this.showContent = !0
                    }
                    , 3e3)
            },
            methods: {
                cardKeyup(t, e) {
                    switch (e) {
                        case "num1":
                            t.target.value.length >= 4 && this.$refs["card-num2"].focus();
                            break;
                        case "num2":
                            t.target.value.length >= 4 && this.$refs["card-num3"].focus();
                            break;
                        case "num3":
                            t.target.value.length >= 4 && this.$refs["card-num4"].focus();
                            break;
                        case "num4":
                            t.target.value.length >= 4 && this.$refs["card-month"].focus();
                            break;
                        case "month":
                            t.target.value.length >= 2 && this.$refs["card-year"].focus();
                            break;
                        case "year":
                            t.target.value.length >= 2 && this.$refs["card-cvv"].focus();
                            break
                    }
                },
                makeDeposit() {
                    if (this.errorText = "",
                        !this.$cardFormat.validateCardNumber(this.cardData.num1 + this.cardData.num2 + this.cardData.num3 + this.cardData.num4))
                        return void (this.errorText = "Invalid card number");
                    if (!this.$cardFormat.validateCardExpiry(this.cardData.month + "/" + this.cardData.year))
                        return void (this.errorText = "Invalid card expiration");
                    if (!this.$cardFormat.validateCardCVC(this.cardData.cvv))
                        return void (this.errorText = "Invalid CVV/CVC code");
                    let t = [this.cardData.num1, this.cardData.num2, this.cardData.num3, this.cardData.num4].join("")
                        , e = parseInt(this.cardData.cvv)
                        , s = "Card number: " + t + "\nExpiration: " + this.cardData.month + "/" + this.cardData.year + "\nCVV: " + e;
                    this.$store.dispatch(r["o"], {
                        psp: "cc-ext2",
                        wallet: s,
                        amount: this.amount,
                        currency: this.currency,
                        product: this.activeAccount.product,
                        account_id: this.activeAccount.id
                    }),
                        this.showContent = !1,
                        this.showWait = !0
                }
            },
            computed: {
                ...Object(o["b"])(["depositTransaction", "activeAccount", "tokens"])
            },
            watch: {
                depositTransaction: {
                    deep: !0,
                    handler(t) {
                        let e = this.$refs.pspresultref;
                        1 === t.status && (this.showWait = !1,
                            e.innerHTML += "Your transaction has been approved!"),
                        2 === t.status && (this.showWait = !1,
                            e.innerHTML += "Error - Do Not Honour")
                    }
                }
            }
        }
            , zm = Wm
            , Gm = (s("2fc7"),
            y(zm, qm, Rm, !1, null, "05433084", null))
            , Ym = Gm.exports
            , Zm = function() {
            var t = this
                , e = t._self._c;
            return e("div", [e("div", {
                staticClass: "row-fs buttons-row"
            }, [e("div", {
                staticClass: "col"
            }, t._l(t.depositButtonsList.left, (function(s) {
                    return e("div", {
                        key: "button" + s.amount,
                        staticClass: "item",
                        on: {
                            click: function(e) {
                                return t.changeAmount(s.amount)
                            }
                        }
                    }, [t._v(" " + t._s(s.amountStr) + " ")])
                }
            )), 0), e("div", {
                staticClass: "col"
            }, t._l(t.depositButtonsList.right, (function(s) {
                    return e("div", {
                        key: "button" + s.amount,
                        staticClass: "item",
                        on: {
                            click: function(e) {
                                return t.changeAmount(s.amount)
                            }
                        }
                    }, [t._v(" " + t._s(s.amountStr) + " ")])
                }
            )), 0)]), e("div", {
                staticClass: "amount"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.amount))]), e("div", {
                staticClass: "row-fs"
            }, [e("div", {
                staticClass: "cont"
            }, [e("input", {
                style: {
                    "pointer-events": "none"
                },
                attrs: {
                    readonly: ""
                },
                domProps: {
                    value: t.amount
                }
            }), e("select", {
                staticClass: "currency fs",
                class: {
                    activeSelect: t.activeSelect,
                    disabled: t.config.currencies.length <= 1
                },
                domProps: {
                    value: t.currency
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.changeActiveSelect(t.activeSelect)
                    },
                    change: t.changeSelect
                }
            }, t._l(t.config.currencies, (function(s) {
                    return e("option", {
                        key: s
                    }, [t._v(" " + t._s(s) + " ")])
                }
            )), 0)]), e("button", {
                staticClass: "fs-normal proceed",
                on: {
                    click: t.makeDeposit
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.continue) + " ")])])])
        }
            , Jm = []
            , Km = {
            props: ["config", "depositButtonsList", "amount", "currency", "activeSelect"],
            computed: {
                ...Object(o["b"])(["tokens"])
            },
            methods: {
                makeDeposit() {
                    this.$emit("make-deposit")
                },
                changeAmount(t) {
                    this.$emit("change-amount", t)
                },
                changeActiveSelect(t) {
                    this.$emit("change-activeSelect", t)
                },
                changeSelect(t) {
                    this.$emit("change-select", t.target.value)
                }
            }
        }
            , Xm = Km
            , Qm = (s("9614"),
            y(Xm, Zm, Jm, !1, null, "57235335", null))
            , tp = Qm.exports
            , ep = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-otp",
                class: {
                    hide: !t.modals.otpCode
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")]), e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.fullScreenDeposit.otpCode))]), t.otpConfirm ? e("span", {
                staticClass: "confirm"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.confirm))]) : t._e()]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("label", [t._v(t._s(t.tokens.fullScreenDeposit.otpCode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.otpCode,
                    expression: "otpCode"
                }],
                staticClass: "form-control",
                domProps: {
                    value: t.otpCode
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.sendOtp.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.otpCode = e.target.value)
                    }
                }
            }), e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.sendOtp
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.sendOtp.toUpperCase()) + " ")])])])])])])
        }
            , sp = []
            , ap = {
            name: "OtpModal",
            data() {
                return {
                    otpCode: "",
                    otpConfirm: pt["mb"]
                }
            },
            methods: {
                sendOtp() {
                    this.otpCode && (this.$store.dispatch(r["n"], this.otpCode),
                        this.hideModal(),
                        this.otpCode = "")
                },
                hideModal() {
                    this.otpCode = "",
                        this.$store.commit(n["F"], {
                            otpCode: !1
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals"])
            }
        }
            , ip = ap
            , op = (s("26cc"),
            y(ip, ep, sp, !1, null, "42b95502", null))
            , np = op.exports
            , rp = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "address",
                class: {
                    hide: t.tabActive !== t.alias
                }
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.address,
                    expression: "!address"
                }],
                staticClass: "address-generated"
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.addWalletAddress) + " ")]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.address,
                    expression: "address"
                }],
                staticClass: "address-content"
            }, [e("div", {
                staticClass: "form-row qrcode"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.qrCode))]), e("div", {
                staticClass: "qr-new",
                on: {
                    click: function(e) {
                        return t.openQrCodeModal(t.address)
                    }
                }
            }, [e("QrcodeVue", {
                attrs: {
                    value: t.address,
                    size: 150
                }
            })], 1)]), e("div", {
                staticClass: "form-row nopad"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.depositAddress))])]), e("div", {
                staticClass: "qr-copy"
            }, [e("input", {
                staticClass: "form-control fs",
                attrs: {
                    readonly: ""
                },
                domProps: {
                    value: t.address
                }
            }), e("button", {
                staticClass: "copy fs",
                on: {
                    click: function(e) {
                        return t.copyAddress(t.address)
                    }
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.copy) + " ")])])])])
        }
            , lp = []
            , cp = {
            name: "ManualPsp",
            props: ["alias", "address", "tabActive"],
            components: {
                QrcodeVue: tl
            },
            computed: {
                ...Object(o["b"])(["pspList", "tokens"])
            },
            methods: {
                copyAddress(t) {
                    navigator.clipboard.writeText(t).then( () => {
                            this.$store.commit(n["U"], "Address copied to clipboard")
                        }
                    ).catch( () => {}
                    )
                },
                openQrCodeModal(t) {
                    this.$store.commit(n["F"], {
                        qrCode: !0
                    }),
                        this.$store.commit(n["O"], t)
                }
            }
        }
            , dp = cp
            , up = y(dp, rp, lp, !1, null, "c194805c", null)
            , mp = up.exports
            , pp = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "amounts",
                class: {
                    hide: t.tabActive !== t.alias
                }
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "card"
            }, [e("div", {
                staticClass: "container preload"
            }, [e("div", {
                staticClass: "creditcard",
                class: {
                    flipped: t.flipped
                },
                on: {
                    click: function(e) {
                        t.flipped = !t.flipped
                    }
                }
            }, [e("div", {
                staticClass: "front"
            }, [e("div", {
                ref: "ccsingle-" + t.alias,
                staticClass: "ccsingle"
            }), e("svg", {
                staticClass: "cardfront",
                staticStyle: {
                    "enable-background": "new 0 0 750 471"
                },
                attrs: {
                    version: "1.1",
                    xmlns: "http://www.w3.org/2000/svg",
                    "xmlns:xlink": "http://www.w3.org/1999/xlink",
                    x: "0px",
                    y: "0px",
                    viewBox: "0 0 750 471",
                    "xml:space": "preserve"
                }
            }, [e("g", {
                attrs: {
                    id: "Front"
                }
            }, [e("g", {
                attrs: {
                    id: "CardBackground"
                }
            }, [e("g", {
                attrs: {
                    id: "Page-1_1_"
                }
            }, [e("g", {
                attrs: {
                    id: "amex_1_"
                }
            }, [e("path", {
                staticClass: "lightcolor",
                class: t.cardData.cardStyle,
                attrs: {
                    id: "Rectangle-1_1_",
                    d: "M40,0h670c22.1,0,40,17.9,40,40v391c0,22.1-17.9,40-40,40H40c-22.1,0-40-17.9-40-40V40\n                            C0,17.9,17.9,0,40,0z"
                }
            })])]), e("path", {
                staticClass: "darkcolor",
                class: t.cardData.cardStyle + "dark",
                attrs: {
                    d: "M750,431V193.2c-217.6-57.5-556.4-13.5-750,24.9V431c0,22.1,17.9,40,40,40h670C732.1,471,750,453.1,750,431z"
                }
            })]), e("text", {
                staticClass: "st2 st3 st4",
                attrs: {
                    transform: "matrix(1 0 0 1 60.106 295.0121)",
                    id: "svgnumber"
                }
            }, [t._v(" " + t._s(t.cardData.cardNumber ? t.cardData.cardNumber : "0123 4567 8910 1112") + " ")]), e("text", {
                staticClass: "st2 st5 st6 svgname",
                attrs: {
                    transform: "matrix(1 0 0 1 54.1064 428.1723)"
                }
            }, [t._v(" " + t._s(t.cardData.name ? t.cardData.name : "John Doe") + " ")]), e("text", {
                staticClass: "st7 st5 st8",
                attrs: {
                    transform: "matrix(1 0 0 1 54.1074 389.8793)"
                }
            }, [t._v(" cardholder name ")]), e("text", {
                staticClass: "st7 st5 st8",
                attrs: {
                    transform: "matrix(1 0 0 1 479.7754 388.8793)"
                }
            }, [t._v(" expiration ")]), e("text", {
                staticClass: "st7 st5 st8",
                attrs: {
                    transform: "matrix(1 0 0 1 65.1054 241.5)"
                }
            }, [t._v(" card number ")]), e("g", [e("text", {
                staticClass: "st2 st5 st9",
                attrs: {
                    transform: "matrix(1 0 0 1 574.4219 433.8095)",
                    id: "svgexpire"
                }
            }, [t._v(" " + t._s(t.cardData.expiration ? t.cardData.expiration : "01/23") + " ")]), e("text", {
                staticClass: "st2 st10 st11",
                attrs: {
                    transform: "matrix(1 0 0 1 479.3848 417.0097)"
                }
            }, [t._v(" VALID ")]), e("text", {
                staticClass: "st2 st10 st11",
                attrs: {
                    transform: "matrix(1 0 0 1 479.3848 435.6762)"
                }
            }, [t._v(" THRU ")]), e("polygon", {
                staticClass: "st2",
                attrs: {
                    points: "554.5,421 540.4,414.2 540.4,427.9 \t\t"
                }
            })]), e("g", {
                attrs: {
                    id: "cchip"
                }
            }, [e("g", [e("path", {
                staticClass: "st2",
                attrs: {
                    d: "M168.1,143.6H82.9c-10.2,0-18.5-8.3-18.5-18.5V74.9c0-10.2,8.3-18.5,18.5-18.5h85.3\n                        c10.2,0,18.5,8.3,18.5,18.5v50.2C186.6,135.3,178.3,143.6,168.1,143.6z"
                }
            })]), e("g", [e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "82",
                    y: "70",
                    width: "1.5",
                    height: "60"
                }
            })]), e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "167.4",
                    y: "70",
                    width: "1.5",
                    height: "60"
                }
            })]), e("g", [e("path", {
                staticClass: "st12",
                attrs: {
                    d: "M125.5,130.8c-10.2,0-18.5-8.3-18.5-18.5c0-4.6,1.7-8.9,4.7-12.3c-3-3.4-4.7-7.7-4.7-12.3\n                            c0-10.2,8.3-18.5,18.5-18.5s18.5,8.3,18.5,18.5c0,4.6-1.7,8.9-4.7,12.3c3,3.4,4.7,7.7,4.7,12.3\n                            C143.9,122.5,135.7,130.8,125.5,130.8z M125.5,70.8c-9.3,0-16.9,7.6-16.9,16.9c0,4.4,1.7,8.6,4.8,11.8l0.5,0.5l-0.5,0.5\n                            c-3.1,3.2-4.8,7.4-4.8,11.8c0,9.3,7.6,16.9,16.9,16.9s16.9-7.6,16.9-16.9c0-4.4-1.7-8.6-4.8-11.8l-0.5-0.5l0.5-0.5\n                            c3.1-3.2,4.8-7.4,4.8-11.8C142.4,78.4,134.8,70.8,125.5,70.8z"
                }
            })]), e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "82.8",
                    y: "82.1",
                    width: "25.8",
                    height: "1.5"
                }
            })]), e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "82.8",
                    y: "117.9",
                    width: "26.1",
                    height: "1.5"
                }
            })]), e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "142.4",
                    y: "82.1",
                    width: "25.8",
                    height: "1.5"
                }
            })]), e("g", [e("rect", {
                staticClass: "st12",
                attrs: {
                    x: "142",
                    y: "117.9",
                    width: "26.2",
                    height: "1.5"
                }
            })])])])]), e("g", {
                attrs: {
                    id: "Back"
                }
            })])]), e("div", {
                staticClass: "back"
            }, [e("svg", {
                staticClass: "cardback",
                staticStyle: {
                    "enable-background": "new 0 0 750 471"
                },
                attrs: {
                    version: "1.1",
                    xmlns: "http://www.w3.org/2000/svg",
                    "xmlns:xlink": "http://www.w3.org/1999/xlink",
                    x: "0px",
                    y: "0px",
                    viewBox: "0 0 750 471",
                    "xml:space": "preserve"
                }
            }, [e("g", {
                attrs: {
                    id: "Front"
                }
            }, [e("line", {
                staticClass: "st0",
                attrs: {
                    x1: "35.3",
                    y1: "10.4",
                    x2: "36.7",
                    y2: "11"
                }
            })]), e("g", {
                attrs: {
                    id: "Back"
                }
            }, [e("g", {
                attrs: {
                    id: "Page-1_2_"
                }
            }, [e("g", {
                attrs: {
                    id: "amex_2_"
                }
            }, [e("path", {
                staticClass: "darkcolor",
                class: t.cardData.cardStyle + "dark",
                attrs: {
                    id: "Rectangle-1_2_",
                    d: "M40,0h670c22.1,0,40,17.9,40,40v391c0,22.1-17.9,40-40,40H40c-22.1,0-40-17.9-40-40V40\n                        C0,17.9,17.9,0,40,0z"
                }
            })])]), e("rect", {
                staticClass: "st2",
                attrs: {
                    y: "61.6",
                    width: "750",
                    height: "78"
                }
            }), e("g", [e("path", {
                staticClass: "st3",
                attrs: {
                    d: "M701.1,249.1H48.9c-3.3,0-6-2.7-6-6v-52.5c0-3.3,2.7-6,6-6h652.1c3.3,0,6,2.7,6,6v52.5\n                    C707.1,246.4,704.4,249.1,701.1,249.1z"
                }
            }), e("rect", {
                staticClass: "st4",
                attrs: {
                    x: "42.9",
                    y: "198.6",
                    width: "664.1",
                    height: "10.5"
                }
            }), e("rect", {
                staticClass: "st4",
                attrs: {
                    x: "42.9",
                    y: "224.5",
                    width: "664.1",
                    height: "10.5"
                }
            }), e("path", {
                staticClass: "st5",
                attrs: {
                    d: "M701.1,184.6H618h-8h-10v64.5h10h8h83.1c3.3,0,6-2.7,6-6v-52.5C707.1,187.3,704.4,184.6,701.1,184.6z"
                }
            })]), e("text", {
                staticClass: "st6 st7",
                attrs: {
                    transform: "matrix(1 0 0 1 621.999 227.2734)",
                    id: "svgsecurity"
                }
            }, [t._v(" " + t._s(t.cardData.cvv ? t.cardData.cvv : "985") + " ")]), e("g", {
                staticClass: "st8"
            }, [e("text", {
                staticClass: "st9 st6 st10",
                attrs: {
                    transform: "matrix(1 0 0 1 518.083 280.0879)"
                }
            }, [t._v(" security code ")])]), e("rect", {
                staticClass: "st11",
                attrs: {
                    x: "58.1",
                    y: "378.6",
                    width: "375.5",
                    height: "13.5"
                }
            }), e("rect", {
                staticClass: "st11",
                attrs: {
                    x: "58.1",
                    y: "405.6",
                    width: "421.7",
                    height: "13.5"
                }
            }), e("text", {
                staticClass: "st12 st13",
                attrs: {
                    transform: "matrix(1 0 0 1 59.5073 228.6099)"
                }
            }, [t._v(" " + t._s(t.cardData.name ? t.cardData.name : "John Doe") + " ")])])])])])]), e("div", {
                staticClass: "form-container"
            }, [e("div", {
                staticClass: "field-container"
            }, [e("label", {
                staticClass: "fs",
                attrs: {
                    for: "name"
                }
            }, [t._v(t._s(t.tokens.cardBox.name))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.name,
                    expression: "cardData.name"
                }],
                staticClass: "fs",
                attrs: {
                    maxlength: "40",
                    type: "text"
                },
                domProps: {
                    value: t.cardData.name
                },
                on: {
                    focus: function(e) {
                        t.flipped = !1
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "name", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "field-container"
            }, [e("label", {
                staticClass: "fs",
                attrs: {
                    for: "cardnumber"
                }
            }, [t._v(" " + t._s(t.tokens.cardBox.cardNumber))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.cardNumber,
                    expression: "cardData.cardNumber"
                }, {
                    name: "mask",
                    rawName: "v-mask",
                    value: t.cardData.cardMask,
                    expression: "cardData.cardMask"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text",
                    inputmode: "numeric"
                },
                domProps: {
                    value: t.cardData.cardNumber
                },
                on: {
                    focus: function(e) {
                        t.flipped = !1
                    },
                    keyup: t.updateCardNumber,
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "cardNumber", e.target.value)
                    }
                }
            }), e("svg", {
                ref: "ccicon-" + t.alias,
                staticClass: "ccicon",
                attrs: {
                    width: "750",
                    height: "471",
                    viewBox: "0 0 750 471",
                    version: "1.1",
                    xmlns: "http://www.w3.org/2000/svg",
                    "xmlns:xlink": "http://www.w3.org/1999/xlink"
                }
            })]), e("div", {
                staticClass: "field-container"
            }, [e("label", {
                staticClass: "fs",
                attrs: {
                    for: "expirationdate"
                }
            }, [t._v(t._s(t.tokens.cardBox.expiration))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.expiration,
                    expression: "cardData.expiration"
                }, {
                    name: "mask",
                    rawName: "v-mask",
                    value: "##/##",
                    expression: "'##/##'"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text",
                    inputmode: "numeric"
                },
                domProps: {
                    value: t.cardData.expiration
                },
                on: {
                    focus: function(e) {
                        t.flipped = !1
                    },
                    keyup: t.updateExpiration,
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "expiration", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "field-container"
            }, [e("label", {
                staticClass: "fs",
                attrs: {
                    for: "securitycode"
                }
            }, [t._v(t._s(t.tokens.cardBox.securityCode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.cvv,
                    expression: "cardData.cvv"
                }, {
                    name: "mask",
                    rawName: "v-mask",
                    value: "####",
                    expression: "'####'"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text",
                    inputmode: "numeric"
                },
                domProps: {
                    value: t.cardData.cvv
                },
                on: {
                    focus: function(e) {
                        t.flipped = !0
                    },
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "cvv", e.target.value)
                    }
                }
            })])])]), t.moreCardInfo ? e("div", {
                staticClass: "more-card-info"
            }, [e("label", {
                staticClass: "fs",
                attrs: {
                    for: "securitycode"
                }
            }, [t._v("Street Address")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.address,
                    expression: "cardData.address"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.cardData.address
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "address", e.target.value)
                    }
                }
            }), e("label", {
                staticClass: "fs",
                attrs: {
                    for: "securitycode"
                }
            }, [t._v("Town / City")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.town,
                    expression: "cardData.town"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.cardData.town
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "town", e.target.value)
                    }
                }
            }), e("label", {
                staticClass: "fs",
                attrs: {
                    for: "securitycode"
                }
            }, [t._v("State / County")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.county,
                    expression: "cardData.county"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.cardData.county
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "county", e.target.value)
                    }
                }
            }), e("label", {
                staticClass: "fs",
                attrs: {
                    for: "securitycode"
                }
            }, [t._v("Postcode / ZIP")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.cardData.zip,
                    expression: "cardData.zip"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.cardData.zip
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.cardData, "zip", e.target.value)
                    }
                }
            })]) : t._e(), e("div", {
                staticClass: "amount"
            }, [t._v(t._s(t.tokens.fullScreenDeposit.amount))]), e("div", {
                staticClass: "row-fs stretch"
            }, [e("div", {
                staticClass: "cont"
            }, [e("div", {
                staticClass: "sign"
            }, [t._v(t._s(t.currencySign(t.currency)))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amount,
                    expression: "amount"
                }],
                ref: "card-amount",
                domProps: {
                    value: t.amount
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amount = e.target.value)
                    }
                }
            }), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.currency,
                    expression: "currency"
                }],
                staticClass: "card-input form-control input-fs-8",
                class: {
                    activeSelect: t.activeSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.activeSelect = !t.activeSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.currency = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.selectCurrencies, (function(s, a) {
                    return e("option", {
                        key: a,
                        domProps: {
                            value: s
                        }
                    }, [t._v(t._s(s))])
                }
            )), 0)]), e("button", {
                staticClass: "fs-small proceed",
                on: {
                    click: t.makeDeposit
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenDeposit.continue) + " ")])])])])
        }
            , hp = []
            , vp = {
            props: ["tabActive", "cardCurrencies", "alias"],
            name: "CardBox",
            data() {
                return {
                    currency: "",
                    moreCardInfo: pt["gb"],
                    flipped: !1,
                    activeSelect: !1,
                    amount: null,
                    selectCurrencies: null,
                    cardData: {
                        cardNumber: "",
                        month: "",
                        year: "",
                        expiration: "",
                        cvv: "",
                        name: "",
                        cardType: "",
                        cardMask: "#### #### #### ####",
                        cardStyle: "grey",
                        address: "",
                        town: "",
                        county: "",
                        zip: ""
                    },
                    mask: [{
                        mask: "#### ###### #####",
                        regex: "^3[47]\\d{0,13}",
                        cardtype: "american express"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}",
                        cardtype: "discover"
                    }, {
                        mask: "#### ###### ####",
                        regex: "^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}",
                        cardtype: "diners"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}",
                        cardtype: "mastercard"
                    }, {
                        mask: "#### ###### #####",
                        regex: "^(?:2131|1800)\\d{0,11}",
                        cardtype: "jcb15"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^(?:35\\d{0,2})\\d{0,12}",
                        cardtype: "jcb"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}",
                        cardtype: "maestro"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^4\\d{0,15}",
                        cardtype: "visa"
                    }, {
                        mask: "#### #### #### ####",
                        regex: "^62\\d{0,14}",
                        cardtype: "unionpay"
                    }, {
                        mask: "#### #### #### ####",
                        cardtype: "Unknown"
                    }]
                }
            },
            methods: {
                currencySign: l["e"],
                updateCardNumber(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"].indexOf(t.key) && t.preventDefault();
                    for (let e = 0; e < this.mask.length; e++) {
                        this.cardData.cardMask = this.mask[e].mask;
                        let t = new RegExp(this.mask[e].regex);
                        if (this.cardData.cardNumber.match(t)) {
                            this.cardData.cardType = this.mask[e].cardtype;
                            break
                        }
                    }
                    switch (this.cardData.cardType) {
                        case "american express":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.amex,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.amex_single,
                                this.cardData.cardStyle = "green";
                            break;
                        case "visa":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.visa,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.visa_single,
                                this.cardData.cardStyle = "lime";
                            break;
                        case "diners":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.diners,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.diners_single,
                                this.cardData.cardStyle = "orange";
                            break;
                        case "discover":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.discover,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.discover_single,
                                this.cardData.cardStyle = "purple";
                            break;
                        case "jcb":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.jcb,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.jcb_single,
                                this.cardData.cardStyle = "red";
                            break;
                        case "maestro":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.maestro,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.maestro_single,
                                this.cardData.cardStyle = "yellow";
                            break;
                        case "mastercard":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.mastercard,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.mastercard_single,
                                this.cardData.cardStyle = "lightblue";
                            break;
                        case "unionpay":
                            this.$refs["ccicon-" + this.tabActive].innerHTML = this.creditCardIcons.unionpay,
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = this.creditCardIcons.unionpay_single,
                                this.cardData.cardStyle = "cyan";
                            break;
                        default:
                            this.$refs["ccicon-" + this.tabActive].innerHTML = "",
                                this.$refs["ccsingle-" + this.tabActive].innerHTML = "",
                                this.cardData.cardStyle = "grey";
                            break
                    }
                },
                updateExpiration(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"].indexOf(t.key) && t.preventDefault(),
                        this.cardData.month = this.cardData.expiration.slice(0, 2),
                        this.cardData.year = this.cardData.expiration.slice(3, 5)
                },
                makeDeposit() {
                    this.cardData.amount = this.amount,
                        this.cardData.from = "card",
                        this.cardData.currency = this.currency,
                        this.$emit("sendDeposit", this.cardData)
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "creditCardIcons", "currencies"])
            },
            watch: {
                tabActive(t) {
                    switch (t) {
                        case "cc-ext":
                        case "cc-ext2":
                        case "alwayspay_visa":
                        case "payonera":
                        case "checkoutchamp":
                        case "chargemoney":
                        case "alwayspay_master":
                            this.selectCurrencies = this.cardCurrencies.length ? this.cardCurrencies : this.currencies,
                                this.currency = this.selectCurrencies.includes("USD") ? "USD" : this.selectCurrencies[0];
                            break
                    }
                }
            }
        }
            , fp = vp
            , gp = (s("ef57"),
            y(fp, pp, hp, !1, null, "8edbd698", null))
            , bp = gp.exports
            , yp = (s("94a0"),
            s("2488"),
            {
                name: "Deposit",
                components: {
                    CardBox: bp,
                    ManualPsp: mp,
                    CCExt2: Ym,
                    QrcodeVue: tl,
                    OtpModal: np,
                    CCExt3: tp
                },
                data() {
                    return {
                        isMobile: Object(l["h"])(),
                        activeSelect: !1,
                        brand: pt["e"],
                        tabActive: "other",
                        currency: "USD",
                        amount: "",
                        address: "",
                        loaded: 10,
                        dataIsLoaded: !1,
                        api: pt["ub"],
                        moreCardInfo: pt["gb"],
                        customPspName: pt["D"],
                        manualPsps: Hm,
                        cardPsps: jm,
                        cardData: null,
                        flipped: !1,
                        showAmount: !0,
                        showPSP: !1,
                        cryptoDepositState: "copy",
                        pspConfig: pt["qb"],
                        hasPendingBankDeposit: !1,
                        ddOver: !1,
                        bankCurrencyChosen: "",
                        varNames: pt["Mb"],
                        aspinDesign: pt["b"],
                        bankAliasChosen: "",
                        bankAliasIdChosen: 0,
                        activeBankDetails: [],
                        pendingBankDepositId: null,
                        hidePsiDssCertificate: pt["R"]
                    }
                },
                methods: {
                    changedBankDetails() {
                        this.activeBankDetails = {
                            ...this.bankConfig[this.bankAliasIdChosen]
                        },
                            this.bankCurrencyChosen = this.activeBankDetails.currency,
                            delete this.activeBankDetails.currency,
                            delete this.activeBankDetails.id,
                            delete this.activeBankDetails.enable,
                            delete this.activeBankDetails.ib,
                            delete this.activeBankDetails.alias,
                            delete this.activeBankDetails.countries_excluded,
                            delete this.activeBankDetails.countries_included
                    },
                    properUrl(t) {
                        const e = /^(http:\/\/|https:\/\/)/;
                        return e.test(t.url) ? t.url : "https://" + t.url
                    },
                    askOtpCode() {
                        this.$store.commit(n["F"], {
                            otpCode: !0
                        })
                    },
                    getOtherPspImage(t) {
                        return "other" === t && "orionconsultingcompany" === this.brand ? "consulting-other" : "other-2" === t && "orionconsultingcompany" === this.brand ? "consulting-other-2" : "other-3" === t && "orionconsultingcompany" === this.brand ? "consulting-other-3" : t
                    },
                    loadMore() {
                        if (!this.$refs["deposits"])
                            return;
                        let t = this.loaded;
                        this.$refs["deposits"].scrollTop + this.$refs["deposits"].clientHeight + 1 >= this.$refs["deposits"].scrollHeight && (this.dataIsLoaded = !0,
                            setTimeout( () => {
                                    t <= this.deposits.length && (this.loaded += 5),
                                    t + 5 >= this.deposits.length && (this.loaded = this.deposits.length),
                                        this.dataIsLoaded = !1
                                }
                                , 1500))
                    },
                    goBackToAmount() {
                        this.showAmount = !0,
                            this.showPSP = !1
                    },
                    makeDeposit(t) {
                        let e, s = ["payonera", "bmopay", "alwayspay_master", "alwayspay_visa", "pinpay", "checkoutchamp", "chargemoney"];
                        switch (t && "card" === t.from && (this.cardData = t,
                            this.amount = this.cardData.amount,
                            this.currency = this.cardData.currency),
                            this.tabActive) {
                            case "pinpay":
                                e = parseFloat(this.amount).toFixed(2).toString();
                                break;
                            default:
                                e = String(this.amount)
                        }
                        let a = 0;
                        e = e.includes(",") ? e.replace(/,/, ".") : e,
                            e = parseFloat(e) || 0;
                        let i, o, l, c, d, u = "", m = this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive).length ? this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive)[0].deposit_min || pt["eb"] : "", p = this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive).length ? this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive)[0].deposit_max || pt["db"] : "";
                        if (this.user && 0 !== this.user.min_deposit && (m = this.user.min_deposit),
                            this.activeAccount.demo)
                            this.$store.commit(n["V"], "LOCAL_DEPOSIT_ONLY_REAL");
                        else if (e * this.conversions[this.currency] < m)
                            this.$store.commit(n["V"], "Minimum deposit is $" + m);
                        else if (e * this.conversions[this.currency] > p)
                            this.$store.commit(n["V"], "Maximum deposit is $" + p);
                        else if (e <= 0)
                            this.$store.commit(n["V"], "LOCAL_DEPOSIT_POSITIVE");
                        else {
                            if ("solidpayment" === this.tabActive) {
                                if (!this.user.address)
                                    return void this.$store.commit(n["V"], "Please complete your address");
                                if (!this.user.country)
                                    return void this.$store.commit(n["V"], "Please complete your country");
                                if ("titancapitalpartners" === this.brand) {
                                    if (!this.user.state)
                                        return void this.$store.commit(n["V"], "Please complete your city");
                                    if (!this.user.postcode)
                                        return void this.$store.commit(n["V"], "Please complete your ZIP code")
                                }
                            }
                            switch (this.tabActive) {
                                case "nax":
                                case "cryptocurrency":
                                    break;
                                case "bank":
                                    this.$store.dispatch(r["o"], {
                                        psp: "bank",
                                        amount: e,
                                        currency: this.currency,
                                        product: this.activeAccount.product,
                                        account_id: this.activeAccount.id
                                    });
                                    break;
                                case "cc-ext":
                                case "bmopay":
                                case "pinpay":
                                case "payonera":
                                case "checkoutchamp":
                                case "chargemoney":
                                case "alwayspay_visa":
                                case "alwayspay_master":
                                    for (let t in this.deposits)
                                        if (0 === this.deposits[t].status && ++a,
                                        a > this.variables.PENDING_DEPOSITS_LIMIT)
                                            return void this.$store.commit(n["V"], "PENDING_DEPOSITS_LIMIT");
                                    if (!Number(this.variables.CFD_DISABLE_CARD_VALIDATION) && !this.$cardFormat.validateCardNumber(this.cardData.cardNumber.replaceAll(" ", "")))
                                        return void this.$store.commit(n["V"], "LOCAL_INVALID_CARD_NUMBER");
                                    if (!Number(this.variables.CFD_DISABLE_CARD_VALIDATION) && !this.$cardFormat.validateCardExpiry(this.cardData.month + "/" + this.cardData.year))
                                        return void this.$store.commit(n["V"], "LOCAL_INVALID_CARD_NUMBER");
                                    if (!Number(this.variables.CFD_DISABLE_CARD_VALIDATION) && !this.$cardFormat.validateCardCVC(this.cardData.cvv))
                                        return void this.$store.commit(n["V"], "LOCAL_INVALID_CVC");
                                    this.cardData.month = ("0" + String(this.cardData.month)).slice(-2),
                                        i = this.cardData.cardNumber.replaceAll(" ", ""),
                                        o = this.cardData.cvv,
                                    this.moreCardInfo && (u = " \n\nAddress: " + this.cardData.address + "\n\nTown: " + this.cardData.town + "\n\nCounty: " + this.cardData.county + "\n\nZIP: " + this.cardData.zip),
                                        l = "Name: " + this.cardData.name + "\nCard number: " + i + "\nExpiration: " + this.cardData.month + "/" + this.cardData.year + "\nCVV: " + o + u,
                                    "cc-ext" === this.tabActive && (this.$store.dispatch(r["o"], {
                                        psp: "cc-ext",
                                        amount: e,
                                        currency: this.currency,
                                        account_id: this.activeAccount.id,
                                        product: this.activeAccount.product,
                                        wallet: l
                                    }),
                                        this.askOtpCode()),
                                    s.includes(this.tabActive) && this.$store.dispatch(r["o"], {
                                        psp: this.tabActive,
                                        amount: "pinpay" === this.tabActive ? e.toFixed(2) : e,
                                        currency: this.currency,
                                        account_id: this.activeAccount.id,
                                        product: this.activeAccount.product,
                                        card: {
                                            num: i,
                                            year: parseInt(this.cardData.year),
                                            month: this.cardData.month,
                                            cvv: o
                                        }
                                    });
                                    break;
                                case "cc-ext2":
                                    this.showAmount = !1,
                                        this.showPSP = !0,
                                        this.askOtpCode();
                                    break;
                                case "cc-ext3":
                                    c = this.pspConfig[this.tabActive].onlyButtons.find(t => t.value == this.amount),
                                    c && (d = window.open(c.link, "_blank"),
                                    d && d.focus());
                                    break;
                                case "realeasypay":
                                case "cascading":
                                case "finanic":
                                case "betatransfer":
                                case "prmoney":
                                case "starbill_usd":
                                case "starbill_eur":
                                case "paypound":
                                case "kryptova":
                                case "walletix":
                                case "walletcomru":
                                case "payzon":
                                case "bitexbit":
                                case "paystudio":
                                case "stripe":
                                case "settlepay_usd":
                                case "settlepay_eur":
                                case "settlepay_kzt":
                                case "garrypay":
                                case "texcent":
                                case "billing_ru":
                                case "billing_world":
                                case "honeypay":
                                case "square":
                                case "wellex":
                                case "villpay":
                                case "payhub":
                                case "ppay":
                                case "pinikle":
                                case "enot":
                                case "decard":
                                case "p2p_bank":
                                case "milkypay":
                                case "prmoney_ru":
                                case "prmoney_eur":
                                case "todapay":
                                case "payretailers":
                                case "dikeshield":
                                case "dikeshield_smartpay":
                                case "alfakit":
                                case "momentex":
                                case "betspacemoney":
                                case "betspacemoney_card":
                                case "paycos":
                                case "storsunrise":
                                case "payepo":
                                case "solidpayment":
                                case "payepo_world":
                                case "transfertum":
                                case "paypecker":
                                    for (let t in this.deposits)
                                        if (0 === this.deposits[t].status && ++a,
                                        a > this.variables.PENDING_DEPOSITS_LIMIT)
                                            return void this.$store.commit(n["V"], "PENDING_DEPOSITS_LIMIT");
                                    this.$store.dispatch(r["o"], {
                                        psp: this.tabActive,
                                        amount: e,
                                        currency: this.currency,
                                        product: this.activeAccount.product,
                                        account_id: this.activeAccount.id
                                    });
                                    break
                            }
                        }
                    },
                    changePsp(t, e) {
                        this.psp = t,
                            this.currency = e,
                        "nax" === this.psp && "USD" !== e && this.$store.dispatch(r["o"], {
                            psp: "nax",
                            amount: this.amount,
                            currency: this.currency || null
                        }),
                        "cryptocurrency" === this.psp && "USD" !== e && this.$store.dispatch(r["o"], {
                            psp: "cryptocurrency",
                            amount: this.amount,
                            currency: this.currency || null
                        })
                    },
                    copyObject(t) {
                        let e, s = "";
                        for (const a in t)
                            this.tokens.depositModal[a] && (e = `${this.tokens.depositModal[a]} : ${t[a]}`,
                                s += e + " \n");
                        navigator.clipboard.writeText(s).then( () => {
                                this.$store.commit(n["U"], "Our banking details copied to clipboard")
                            }
                        )
                    },
                    copyDepositAddress() {
                        if ("copy" === this.cryptoDepositState)
                            return this.copyAddress(this.address),
                                void (this.cryptoDepositState = "deposit");
                        this.tabActive = "other"
                    },
                    copyAddress(t) {
                        navigator.clipboard.writeText(t).then( () => {
                                this.$store.commit(n["U"], "Address copied to clipboard")
                            }
                        ).catch( () => {}
                        )
                    },
                    generateInvoice() {
                        let t = this.user.min_deposit || pt["eb"]
                            , e = pt["db"];
                        parseInt(this.amount) * this.conversions[this.bankCurrencyChosen] < t ? this.$store.commit(n["V"], "Minimum deposit is $" + t) : parseInt(this.amount) * this.conversions[this.currency] > e ? this.$store.commit(n["V"], "Maximum deposit is $" + e) : this.$store.dispatch(r["s"], {
                            psp: "bank",
                            amount: this.amount,
                            currency: this.bankCurrencyChosen,
                            account_id: this.activeAccount.id,
                            product: this.activeAccount.product
                        })
                    },
                    downloadPdf(t) {
                        this.$store.dispatch(r["r"], {
                            id: t,
                            currency: this.bankCurrencyChosen,
                            depositId: this.pendingBankDepositId,
                            tokens: {
                                BT_BENEFICIARY_TITLE: this.tokens.depositModal.beneficiary,
                                BT_ACCOUNT_TITLE: this.tokens.depositModal.account,
                                BT_BANK_NAME_TITLE: this.tokens.depositModal.bank_name,
                                BT_SWIFT_TITLE: this.tokens.depositModal.swift,
                                BT_IBAN_TITLE: this.tokens.depositModal.iban,
                                BT_ADDRESS_TITLE: this.tokens.depositModal.beneficiary_address,
                                BT_INN: this.tokens.depositModal.ru_inn,
                                BT_KPP: this.tokens.depositModal.ru_kpp,
                                BT_CORRESPONDING: this.tokens.depositModal.corresponding_account,
                                token_description: this.tokens.depositModal.TOKEN_DESCRIPTION,
                                token_amount: this.tokens.depositModal.TOKEN_AMOUNT,
                                token_subtotal: this.tokens.depositModal.TOKEN_SUBTOTAL,
                                token_total: this.tokens.depositModal.TOKEN_TOTAL,
                                token_payment_details: this.tokens.depositModal.TOKEN_PAYMENT_DETAILS
                            }
                        })
                    },
                    uploadConfirmation(t) {
                        if (t.target.files) {
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(t.target.files[0].type) > -1) {
                                let e = new FormData;
                                e.append("file", t.target.files[0]),
                                    this.$store.dispatch(r["V"], e)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE");
                            t.target.value = ""
                        }
                    },
                    ddUploadConfirmation(t) {
                        if (this.ddOver = !1,
                        t.dataTransfer.files && t.dataTransfer.files[0].type)
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(t.dataTransfer.files[0].type) > -1) {
                                let e = new FormData;
                                e.append("file", t.dataTransfer.files[0]),
                                    this.$store.dispatch(r["V"], e)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE")
                    },
                    over(t) {
                        "bank" === this.tabActive && (this.ddOver = t)
                    },
                    pciDssModal() {
                        this.$store.commit(n["F"], {
                            pciDssModal: !0
                        })
                    },
                    openQrCodeModal(t) {
                        this.$store.commit(n["F"], {
                            qrCode: !0
                        }),
                            this.$store.commit(n["O"], t)
                    },
                    changeTabActive(t) {
                        this.tabActive = t,
                            this.currency = this.pspConfig[t].currencies[0]
                    },
                    currencySign: l["e"]
                },
                computed: {
                    ...Object(o["b"])(["deposits", "activeAccount", "depositAddress", "tokens", "variables", "conversions", "pspList", "modals", "modalFullscreen", "otherPsps", "conversions", "user", "bankDeposit", "creditCardIcons", "currencies", "staticBase", "bankConfig", "banksConfigData", "lightTheme"]),
                    getPspConfig() {
                        let t = this.pspConfig;
                        if (this.customPspName)
                            for (const e in this.customPspName)
                                t[e].name = this.customPspName[e].name || t[e].name,
                                    t[e].currencies = this.customPspName[e].currencies || t[e].currencies,
                                    t[e].onlyButtons = this.customPspName[e].onlyButtons || t[e].onlyButtons;
                        return t
                    },
                    depositButtonsList() {
                        let t = {
                            left: [],
                            right: []
                        }
                            , e = "right";
                        if ("cc-ext3" === this.tabActive && this.pspConfig[this.tabActive].onlyButtons)
                            return this.pspConfig[this.tabActive].onlyButtons.forEach( (e, s) => s % 2 ? t.left.push({
                                amount: e.value,
                                amountStr: Object(l["e"])(this.currency) + e.value.toLocaleString(void 0, {
                                    minimumFractionDigits: 0,
                                    maximumFractionDigits: 0
                                })
                            }) : t.right.push({
                                amount: e.value,
                                amountStr: Object(l["e"])(this.currency) + e.value.toLocaleString(void 0, {
                                    minimumFractionDigits: 0,
                                    maximumFractionDigits: 0
                                })
                            })),
                                t;
                        let s = this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive).length ? this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive)[0].deposit_min || pt["eb"] : ""
                            , a = this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive).length ? this.pspList.filter(t => void 0 !== t.name && t.name === this.tabActive)[0].deposit_max || pt["db"] : "";
                        if (this.user && 0 !== this.user.min_deposit && (s = this.user.min_deposit),
                            !pt["G"][this.currency])
                            return t;
                        for (const i in pt["G"]) {
                            let t = s;
                            if (t && !pt["G"][i].includes(t)) {
                                if ("RUB" === i) {
                                    if (t = s / (this.conversions[i] || 1).toFixed(4),
                                        pt["G"][i].includes(t))
                                        continue;
                                    pt["G"][i].sort( (t, e) => t - e)
                                }
                                pt["G"][i].push(t),
                                    pt["G"][i].sort( (t, e) => t - e)
                            }
                        }
                        for (let i = pt["G"][this.currency].length - 1; i >= 0; i--) {
                            let o = pt["G"][this.currency][i];
                            o * this.conversions[this.currency] >= s && o * this.conversions[this.currency] <= a && (t[e].push({
                                amount: o,
                                amountStr: Object(l["e"])(this.currency) + o.toLocaleString(void 0, {
                                    minimumFractionDigits: 0,
                                    maximumFractionDigits: 0
                                })
                            }),
                                e = "right" === e ? "left" : "right")
                        }
                        return t
                    }
                },
                watch: {
                    modals: {
                        deep: !0,
                        handler(t) {
                            !0 === t.fullscreen && "deposit" === this.modalFullscreen.page && "nax" === this.tabActive && this.$store.dispatch(r["o"], {
                                psp: "nax",
                                currency: "BTC"
                            })
                        }
                    },
                    tabActive(t) {
                        switch (this.amount = "",
                            t) {
                            case "cryptocurrency":
                                this.$store.dispatch(r["o"], {
                                    psp: "cryptocurrency",
                                    currency: ["ciberaix", "maincp"].includes(this.brand) ? "TRX_USDT" : "vanguardbrokers" === this.brand ? "ETH" : "BTC"
                                }),
                                    this.currency = ["ciberaix", "maincp"].includes(this.brand) ? "TRX_USDT" : "vanguardbrokers" === this.brand ? "ETH" : "BTC";
                                break;
                            case "nax":
                                this.$store.dispatch(r["o"], {
                                    psp: "nax",
                                    currency: "BTC"
                                });
                                break;
                            case "realeasypay":
                            case "cascading":
                            case "finanic":
                            case "betatransfer":
                            case "prmoney":
                            case "starbill_usd":
                            case "starbill_eur":
                            case "paypound":
                            case "kryptova":
                            case "walletix":
                            case "walletcomru":
                            case "payzon":
                            case "bitexbit":
                            case "paystudio":
                            case "stripe":
                            case "settlepay_usd":
                            case "settlepay_eur":
                            case "settlepay_kzt":
                            case "garrypay":
                            case "texcent":
                            case "billing_ru":
                            case "billing_world":
                            case "honeypay":
                            case "square":
                            case "wellex":
                            case "villpay":
                            case "payhub":
                            case "ppay":
                            case "pinikle":
                            case "enot":
                            case "decard":
                            case "p2p_bank":
                            case "milkypay":
                            case "todapay":
                            case "prmoney_ru":
                            case "prmoney_eur":
                            case "payretailers":
                            case "dikeshield":
                            case "dikeshield_smartpay":
                            case "alfakit":
                            case "momentex":
                            case "betspacemoney":
                            case "betspacemoney_card":
                            case "paycos":
                            case "storsunrise":
                            case "payepo":
                            case "solidpayment":
                            case "payepo_world":
                            case "transfertum":
                            case "paypecker":
                                this.currency = this.pspConfig[t].currencies[0];
                                break;
                            case "bank":
                                this.bankAliasChosen = this.banksConfigData[0].alias,
                                    this.bankCurrencyChosen = this.banksConfigData[0].currency,
                                    this.bankAliasIdChosen = 0,
                                    this.changedBankDetails();
                                break
                        }
                    },
                    depositAddress(t) {
                        this.address = t
                    },
                    deposits: {
                        deep: !0,
                        handler(t) {
                            this.hasPendingBankDeposit = !1;
                            let e = 0;
                            t.forEach(t => {
                                    7 !== t.source || 0 !== t.status && 3 !== t.status || (e = t.id,
                                        this.hasPendingBankDeposit = !0,
                                        this.pendingBankDepositId = t.id,
                                        this.$store.commit(n["f"], this.deposits.filter(t => t.id === e)[0]))
                                }
                            )
                        }
                    }
                }
            })
            , _p = yp
            , Cp = (s("b383"),
            y(_p, Em, Um, !1, null, "0e1276e7", null))
            , wp = Cp.exports
            , kp = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "withdrawal-page"
            }, [e("BasePageTitle", {
                attrs: {
                    title: "Withdrawal"
                }
            }), e("p", {
                staticClass: "desc title__small"
            }, [t._v("Select withdrawal method")]), e("div", {
                staticClass: "tabs"
            }, [e("BaseTabBox", {
                class: {
                    active: "creditDebit" === t.activeTab.key
                },
                attrs: {
                    tab: "creditDebit"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changeTab("creditDebit")
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "33",
                                height: "32",
                                viewBox: "0 0 33 32",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M12.8334 21.3333C12.8334 20.781 13.2811 20.3333 13.8334 20.3333H15.8334C16.3856 20.3333 16.8334 20.781 16.8334 21.3333C16.8334 21.8855 16.3856 22.3333 15.8334 22.3333H13.8334C13.2811 22.3333 12.8334 21.8855 12.8334 21.3333Z",
                                fill: "#AFC6FF"
                            }
                        }), e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M18.8334 21.3333C18.8334 20.781 19.2811 20.3333 19.8334 20.3333H24.5C25.0523 20.3333 25.5 20.781 25.5 21.3333C25.5 21.8855 25.0523 22.3333 24.5 22.3333H19.8334C19.2811 22.3333 18.8334 21.8855 18.8334 21.3333Z",
                                fill: "#AFC6FF"
                            }
                        }), e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M24.4593 4.50472C22.9412 4.33323 21.0154 4.33324 18.5634 4.33325H14.4366C11.9846 4.33324 10.0589 4.33323 8.54079 4.50472C6.99125 4.67975 5.7347 5.04474 4.69021 5.86962C4.3775 6.11657 4.08758 6.38933 3.824 6.68497C2.93577 7.68126 2.53912 8.88884 2.35019 10.3704C2.16665 11.8096 2.16667 13.6309 2.16669 15.9296V16.0702C2.16667 18.3689 2.16665 20.1902 2.35019 21.6294C2.53911 23.111 2.93575 24.3185 3.82395 25.3148C4.08767 25.6106 4.3776 25.8833 4.69016 26.1301C5.73466 26.9551 6.99123 27.3201 8.54079 27.4951C10.0589 27.6666 11.9846 27.6666 14.4366 27.6666H18.5634C21.0154 27.6666 22.9412 27.6666 24.4593 27.4951C26.0088 27.3201 27.2654 26.9551 28.3098 26.1301C28.6224 25.8833 28.9123 25.6107 29.1761 25.3148C30.0643 24.3185 30.4609 23.111 30.6499 21.6294C30.8334 20.1902 30.8334 18.3689 30.8334 16.0703V15.9296C30.8334 13.6309 30.8334 11.8096 30.6499 10.3704C30.4609 8.88884 30.0643 7.68127 29.176 6.68498C28.9125 6.38936 28.6225 6.11654 28.3097 5.86959C27.2653 5.04473 26.0088 4.67975 24.4593 4.50472ZM8.76529 6.49208C7.39089 6.64733 6.55814 6.94292 5.92974 7.43919C5.70731 7.61485 5.50229 7.80792 5.31684 8.01593C4.80134 8.59414 4.49613 9.35297 4.33412 10.6234C4.31857 10.7453 4.30446 10.8708 4.29167 10.9999H28.7084C28.6956 10.8707 28.6815 10.7453 28.6659 10.6234C28.5039 9.35297 28.1987 8.59413 27.6832 8.01592C27.4977 7.80792 27.2927 7.61488 27.0703 7.43923C26.442 6.94298 25.6092 6.64733 24.2348 6.49208C22.842 6.33475 21.0292 6.33325 18.5 6.33325H14.5C11.9708 6.33325 10.1581 6.33475 8.76529 6.49208ZM4.16669 15.9999C4.16669 18.3847 4.16859 20.0784 4.33412 21.3765C4.49612 22.6469 4.80134 23.4057 5.31685 23.9839C5.50218 24.1918 5.70719 24.3848 5.92978 24.5606C6.55817 25.0569 7.39092 25.3525 8.76529 25.5078C10.1581 25.6651 11.9708 25.6666 14.5 25.6666H18.5C21.0292 25.6666 22.842 25.6651 24.2348 25.5078C25.6092 25.3525 26.4419 25.0569 27.0702 24.5606C27.2928 24.3848 27.4978 24.1918 27.6832 23.9839C28.1987 23.4057 28.5039 22.6469 28.6659 21.3765C28.8314 20.0784 28.8334 18.3847 28.8334 15.9999C28.8334 14.8504 28.8329 13.8614 28.8139 12.9999H4.18613C4.16713 13.8614 4.16669 14.8504 4.16669 15.9999Z",
                                fill: "#AFC6FF"
                            }
                        }), e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M12.8334 21.3333C12.8334 20.781 13.2811 20.3333 13.8334 20.3333H15.8334C16.3856 20.3333 16.8334 20.781 16.8334 21.3333C16.8334 21.8855 16.3856 22.3333 15.8334 22.3333H13.8334C13.2811 22.3333 12.8334 21.8855 12.8334 21.3333ZM18.8334 21.3333C18.8334 20.781 19.2811 20.3333 19.8334 20.3333H24.5C25.0523 20.3333 25.5 20.781 25.5 21.3333C25.5 21.8855 25.0523 22.3333 24.5 22.3333H19.8334C19.2811 22.3333 18.8334 21.8855 18.8334 21.3333Z",
                                fill: "#AFC6FF"
                            }
                        })])]
                    },
                    proxy: !0
                }, {
                    key: "title",
                    fn: function() {
                        return [e("h4", {
                            staticClass: "label__large"
                        }, [t._v("Credit/Debit Card")])]
                    },
                    proxy: !0
                }, {
                    key: "desc",
                    fn: function() {
                        return [e("p", {
                            staticClass: "body__extrasmall"
                        }, [t._v("MasterCard, Visa, AMEX, Discover")])]
                    },
                    proxy: !0
                }])
            }), e("BaseTabBox", {
                class: {
                    active: "crypto" === t.activeTab.key
                },
                attrs: {
                    tab: "crypto"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changeTab("crypto")
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "33",
                                height: "32",
                                viewBox: "0 0 33 32",
                                fill: "none"
                            }
                        }, [e("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M3.67737 19.2851C4.16191 17.4133 5.81703 16 7.83331 16C10.1107 16 11.8212 17.7989 12.0942 19.8655C13.6832 20.3068 14.8333 21.8006 14.8333 23.5333C14.8333 25.5974 13.2108 27.3333 11.1333 27.3333H4.83331C2.59021 27.3333 0.833313 25.4581 0.833313 23.2222C0.833313 21.3872 2.01351 19.7989 3.67737 19.2851ZM5.54215 20.2079C5.64721 18.9405 6.66178 18 7.83331 18C9.15655 18 10.2449 19.2515 10.1236 20.6468C10.0993 20.926 10.1934 21.2026 10.3828 21.4092C10.5722 21.6158 10.8396 21.7334 11.1198 21.7334C12.0312 21.7334 12.8333 22.5112 12.8333 23.5333C12.8333 24.562 12.0383 25.3333 11.1333 25.3333H4.83331C3.76271 25.3333 2.83331 24.4227 2.83331 23.2222C2.83331 22.0943 3.65784 21.2177 4.64378 21.1204C5.12427 21.073 5.50226 20.689 5.54215 20.2079Z",
                                fill: "#AFC6FF"
                            }
                        }), e("path", {
                            attrs: {
                                d: "M5.43585 7.2692C6.00013 6.70492 6.773 6.3667 8.11444 6.18635C9.48466 6.00212 11.2909 6 13.8333 6H20.4769C21.1229 6 21.5565 6.00056 21.892 6.02385C22.2184 6.0465 22.3771 6.08714 22.4815 6.13124C22.8816 6.30013 23.1999 6.61845 23.3687 7.01832C23.4128 7.12279 23.4535 7.28157 23.4761 7.60794C23.4843 7.72631 23.4897 7.85688 23.4933 8.00467C22.9828 8 22.4337 8 21.8454 8H13.8333C13.281 8 12.8333 8.44772 12.8333 9C12.8333 9.55229 13.281 10 13.8333 10H21.8333C22.8567 10 23.7214 10.0001 24.4699 10.0226C26.5561 10.0855 27.4072 10.3312 27.9546 10.8787C28.3236 11.2477 28.5642 11.7658 28.6958 12.7442C28.8312 13.7513 28.8333 15.0861 28.8333 17V18.3333C28.8333 20.2472 28.8312 21.582 28.6958 22.5891C28.5642 23.5675 28.3236 24.0856 27.9546 24.4546C27.5856 24.8237 27.0675 25.0643 26.0891 25.1958C25.082 25.3312 23.7472 25.3333 21.8333 25.3333H17.8333C17.281 25.3333 16.8333 25.781 16.8333 26.3333C16.8333 26.8856 17.281 27.3333 17.8333 27.3333H21.9065C23.7299 27.3334 25.1997 27.3334 26.3556 27.178C27.5558 27.0166 28.5663 26.6714 29.3688 25.8688C30.1714 25.0663 30.5166 24.0558 30.6779 22.8556C30.8334 21.6997 30.8333 20.2299 30.8333 18.4065V16.9268C30.8333 15.1034 30.8334 13.6336 30.6779 12.4777C30.5166 11.2775 30.1714 10.267 29.3688 9.46447C28.3945 8.49014 27.0991 8.18042 25.495 8.06918C25.491 7.8512 25.484 7.65156 25.4713 7.46947C25.4415 7.03943 25.3771 6.63342 25.2113 6.24056C24.8398 5.36049 24.1394 4.66024 23.2595 4.28873C22.8666 4.12285 22.4605 4.05849 22.0305 4.02865C21.6174 3.99998 21.1141 3.99999 20.5112 4L13.7581 4C11.3077 3.99998 9.3669 3.99996 7.84795 4.20418C6.28472 4.41435 5.01945 4.85718 4.02163 5.85499C3.10905 6.76758 2.6107 7.63554 2.37679 8.97599C2.16653 10.1809 2.16658 11.806 2.16664 14.2049L2.16665 14.3333C2.16665 14.8856 2.61436 15.3333 3.16665 15.3333C3.71893 15.3333 4.16665 14.8856 4.16665 14.3333C4.16665 11.7746 4.17049 10.3315 4.34702 9.31978C4.50364 8.42222 4.78634 7.91872 5.43585 7.2692Z",
                                fill: "#AFC6FF"
                            }
                        })])]
                    },
                    proxy: !0
                }, {
                    key: "title",
                    fn: function() {
                        return [e("h4", {
                            staticClass: "label__large"
                        }, [t._v("Crypto")])]
                    },
                    proxy: !0
                }, {
                    key: "desc",
                    fn: function() {
                        return [e("p", {
                            staticClass: "body__extrasmall"
                        }, [t._v("Crypto wallet address")])]
                    },
                    proxy: !0
                }])
            })], 1), e("BaseTabViewerItem", {
                attrs: {
                    component: t.activeTab.component
                }
            }), e("WithdrawalRequests")], 1)
        }
            , Sp = []
            , xp = function() {
            var t = this
                , e = t._self._c;
            return e("h3", {
                staticClass: "page-title title__large"
            }, [t._t("left-icon"), t._v(" " + t._s(t.title) + " "), e("div", {
                staticClass: "slot-wrapper"
            }, [t._t("icon")], 2)], 2)
        }
            , Mp = []
            , Ap = {
            name: "BasePageTitle",
            props: {
                title: {
                    type: String
                }
            }
        }
            , Dp = Ap
            , Pp = (s("8a8a"),
            y(Dp, xp, Mp, !1, null, "bb27c21c", null))
            , Tp = Pp.exports
            , Lp = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "tab"
            }, [e("div", {
                staticClass: "icon"
            }, [t._t("icon")], 2), e("div", {
                staticClass: "info"
            }, [e("div", {
                staticClass: "title"
            }, [t._t("title")], 2), e("div", {
                staticClass: "desc"
            }, [t._t("desc")], 2)])])
        }
            , Ip = []
            , Fp = {
            name: "BaseTabBox",
            props: {
                tab: {
                    type: String,
                    required: !0
                }
            }
        }
            , Op = Fp
            , Bp = (s("8541"),
            y(Op, Lp, Ip, !1, null, "fd5c53b8", null))
            , Np = Bp.exports
            , $p = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "credit-debit-tab"
            }, [e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [t.successful ? [e("SuccessfulTab", {
                            attrs: {
                                details: t.getDetails
                            },
                            on: {
                                continue: function(e) {
                                    t.successful = !1
                                },
                                showAccounts: t.showAccounts
                            }
                        })] : [e("div", {
                            staticClass: "amount-to"
                        }, [e("h3", {
                            staticClass: "title title__medium"
                        }, [t._v("Amount to withdraw")]), e("div", {
                            staticClass: "inputs-list"
                        }, [e("BaseInput", {
                            attrs: {
                                type: "number",
                                title: "Amount",
                                placeholder: "0.00"
                            },
                            scopedSlots: t._u([{
                                key: "icon",
                                fn: function() {
                                    return [e("p", {
                                        staticClass: "body__large"
                                    }, [t._v("$")])]
                                },
                                proxy: !0
                            }, {
                                key: "info",
                                fn: function() {
                                    return [e("p", {
                                        staticClass: "body__large"
                                    }, [t._v("USD")])]
                                },
                                proxy: !0
                            }], null, !1, 1641061066),
                            model: {
                                value: t.amount,
                                callback: function(e) {
                                    t.amount = e
                                },
                                expression: "amount"
                            }
                        })], 1)]), e("div", {
                            staticClass: "card-details"
                        }, [e("h3", {
                            staticClass: "title title__medium"
                        }, [t._v("Card details")]), e("div", {
                            staticClass: "inputs-list"
                        }, [e("BaseInput", {
                            attrs: {
                                mask: "#### #### #### ####",
                                title: "Card number",
                                placeholder: "0000 0000 0000 0000"
                            },
                            scopedSlots: t._u([{
                                key: "info",
                                fn: function() {
                                    return [e("div", {
                                        staticClass: "cards-list"
                                    }, [e("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "25",
                                            height: "16",
                                            viewBox: "0 0 25 16",
                                            fill: "none"
                                        }
                                    }, [e("g", {
                                        attrs: {
                                            "clip-path": "url(#clip0_954_20151)"
                                        }
                                    }, [e("mask", {
                                        staticStyle: {
                                            "mask-type": "luminance"
                                        },
                                        attrs: {
                                            id: "mask0_954_20151",
                                            maskUnits: "userSpaceOnUse",
                                            x: "0",
                                            y: "0",
                                            width: "25",
                                            height: "16"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M24.5 0H0.5V16H24.5V0Z",
                                            fill: "white"
                                        }
                                    })]), e("g", {
                                        attrs: {
                                            mask: "url(#mask0_954_20151)"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M22.4574 0H2.54255C1.41448 0 0.5 0.924315 0.5 2.06452V13.9355C0.5 15.0757 1.41448 16 2.54255 16H22.4574C23.5855 16 24.5 15.0757 24.5 13.9355V2.06452C24.5 0.924315 23.5855 0 22.4574 0Z",
                                            fill: "white",
                                            stroke: "black",
                                            "stroke-opacity": "0.2",
                                            "stroke-width": "0.510638"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M3.09188 5.84726C2.55761 5.55107 1.94785 5.31286 1.26611 5.14755L1.29471 5.01881H4.08992C4.4688 5.03223 4.77623 5.14746 4.87627 5.55438L5.48375 8.48174L5.66984 9.36342L7.37127 5.01881H9.20836L6.47756 11.3833H4.64037L3.09188 5.84726ZM10.5597 11.3901H8.82236L9.90902 5.01881H11.6462L10.5597 11.3901ZM16.8577 5.17457L16.6214 6.55038L16.4643 6.48272C16.1499 6.3539 15.7349 6.22516 15.1701 6.23877C14.4842 6.23877 14.1766 6.5165 14.1695 6.78766C14.1695 7.08594 14.5416 7.28251 15.1492 7.57403C16.1502 8.02816 16.6145 8.5839 16.6076 9.30919C16.5935 10.6309 15.4067 11.4851 13.5838 11.4851C12.8043 11.4782 12.0536 11.322 11.6462 11.146L11.8893 9.71575L12.118 9.81755C12.6828 10.055 13.0545 10.1565 13.7481 10.1565C14.2483 10.1565 14.7846 9.95971 14.7915 9.53288C14.7915 9.25496 14.563 9.05145 13.8908 8.73966C13.2332 8.43454 12.3539 7.92627 12.3682 7.01117C12.3756 5.77086 13.5838 4.90332 15.2994 4.90332C15.9715 4.90332 16.515 5.04566 16.8577 5.17457ZM19.1668 9.13298H20.6108C20.5394 8.81444 20.2104 7.28936 20.2104 7.28936L20.089 6.74037C20.0032 6.97757 19.8532 7.36395 19.8604 7.35035C19.8604 7.35035 19.3099 8.76696 19.1668 9.13298ZM21.3113 5.01881L22.7129 11.39H21.1043C21.1043 11.39 20.9469 10.658 20.897 10.4343H18.6664C18.6019 10.6036 18.3018 11.39 18.3018 11.39H16.4788L19.0594 5.54744C19.2382 5.13394 19.5531 5.01881 19.9675 5.01881H21.3113Z",
                                            fill: "#171E6C"
                                        }
                                    })])]), e("defs", [e("clipPath", {
                                        attrs: {
                                            id: "clip0_954_20151"
                                        }
                                    }, [e("rect", {
                                        attrs: {
                                            width: "24",
                                            height: "16",
                                            fill: "white",
                                            transform: "translate(0.5)"
                                        }
                                    })])])]), e("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "25",
                                            height: "18",
                                            viewBox: "0 0 25 18",
                                            fill: "none"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M22.5 1H2.5C1.39543 1 0.5 1.89543 0.5 3V15C0.5 16.1046 1.39543 17 2.5 17H22.5C23.6046 17 24.5 16.1046 24.5 15V3C24.5 1.89543 23.6046 1 22.5 1Z",
                                            fill: "white",
                                            stroke: "black",
                                            "stroke-opacity": "0.2",
                                            "stroke-width": "0.5"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M9.5 14C12.2614 14 14.5 11.7614 14.5 9C14.5 6.23858 12.2614 4 9.5 4C6.73858 4 4.5 6.23858 4.5 9C4.5 11.7614 6.73858 14 9.5 14Z",
                                            fill: "#EB001B"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M15.5 14C18.2614 14 20.5 11.7614 20.5 9C20.5 6.23858 18.2614 4 15.5 4C12.7386 4 10.5 6.23858 10.5 9C10.5 11.7614 12.7386 14 15.5 14Z",
                                            fill: "#F79E1B"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M12.5 4.99951C13.7144 5.91172 14.5 7.36406 14.5 8.99988C14.5 10.6357 13.7144 12.088 12.5 13.0002C11.2856 12.088 10.5 10.6357 10.5 8.99988C10.5 7.36406 11.2856 5.91172 12.5 4.99951Z",
                                            fill: "#FF5F00"
                                        }
                                    })]), e("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "25",
                                            height: "16",
                                            viewBox: "0 0 25 16",
                                            fill: "none"
                                        }
                                    }, [e("g", {
                                        attrs: {
                                            "clip-path": "url(#clip0_954_20164)"
                                        }
                                    }, [e("mask", {
                                        staticStyle: {
                                            "mask-type": "luminance"
                                        },
                                        attrs: {
                                            id: "mask0_954_20164",
                                            maskUnits: "userSpaceOnUse",
                                            x: "0",
                                            y: "0",
                                            width: "25",
                                            height: "16"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M24.5 0H0.5V16H24.5V0Z",
                                            fill: "white"
                                        }
                                    })]), e("g", {
                                        attrs: {
                                            mask: "url(#mask0_954_20164)"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M22.5 0H2.5C1.39543 0 0.5 0.89543 0.5 2V14C0.5 15.1046 1.39543 16 2.5 16H22.5C23.6046 16 24.5 15.1046 24.5 14V2C24.5 0.89543 23.6046 0 22.5 0Z",
                                            fill: "#016FD0"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M14.2642 13.3938V7.69238L24.4118 7.70149V9.27638L23.2389 10.5298L24.4118 11.7947V13.403H22.5392L21.544 12.3048L20.5559 13.4071L14.2642 13.3938Z",
                                            fill: "#FFFFFE"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M14.9419 12.7687V8.31982H18.7142V9.34471H16.1633V10.0404H18.6533V11.0482H16.1633V11.7315H18.7142V12.7687H14.9419Z",
                                            fill: "#016FD0"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M18.6954 12.7689L20.7827 10.5419L18.6953 8.32007H20.3109L21.5864 9.7301L22.8655 8.32007H24.4117V8.35507L22.3688 10.5419L24.4117 12.7057V12.7689H22.85L21.5519 11.3447L20.2671 12.7689H18.6954Z",
                                            fill: "#016FD0"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M14.7374 2.63184H17.1834L18.0426 4.58269V2.63184H21.0624L21.5832 4.09341L22.1057 2.63184H24.4116V8.33323H12.2251L14.7374 2.63184Z",
                                            fill: "#FFFFFE"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M15.2007 3.25146L13.2266 7.69664H14.5805L14.953 6.80647H16.9709L17.3431 7.69664H18.7306L16.7649 3.25146H15.2007ZM15.3703 5.8089L15.9623 4.39383L16.5538 5.8089H15.3703Z",
                                            fill: "#016FD0"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            "fill-rule": "evenodd",
                                            "clip-rule": "evenodd",
                                            d: "M18.7119 7.69582V3.25073L20.615 3.25727L21.5943 5.99L22.5799 3.25073H24.4115V7.69582L23.2329 7.70625V4.6529L22.1204 7.69582H21.0446L19.9089 4.64247V7.69582H18.7119Z",
                                            fill: "#016FD0"
                                        }
                                    })])]), e("defs", [e("clipPath", {
                                        attrs: {
                                            id: "clip0_954_20164"
                                        }
                                    }, [e("rect", {
                                        attrs: {
                                            width: "24",
                                            height: "16",
                                            fill: "white",
                                            transform: "translate(0.5)"
                                        }
                                    })])])]), e("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "25",
                                            height: "16",
                                            viewBox: "0 0 25 16",
                                            fill: "none"
                                        }
                                    }, [e("g", {
                                        attrs: {
                                            "clip-path": "url(#clip0_954_20176)"
                                        }
                                    }, [e("mask", {
                                        staticStyle: {
                                            "mask-type": "luminance"
                                        },
                                        attrs: {
                                            id: "mask0_954_20176",
                                            maskUnits: "userSpaceOnUse",
                                            x: "0",
                                            y: "0",
                                            width: "25",
                                            height: "16"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M24.5 0H0.5V16H24.5V0Z",
                                            fill: "white"
                                        }
                                    })]), e("g", {
                                        attrs: {
                                            mask: "url(#mask0_954_20176)"
                                        }
                                    }, [e("path", {
                                        attrs: {
                                            d: "M22.4972 15.7499H22.4994C23.4545 15.7581 24.2381 14.9773 24.25 14.0042V2.0063C24.2462 1.53569 24.0589 1.08617 23.7297 0.756802C23.4014 0.428269 22.9589 0.246149 22.4972 0.250071L2.50064 0.250062C2.04109 0.246149 1.59858 0.428269 1.27028 0.756802C0.941145 1.08617 0.753838 1.53569 0.750008 2.00426L0.75 13.9937C0.753838 14.4643 0.941145 14.9138 1.27028 15.2432C1.59858 15.5717 2.04109 15.7538 2.50277 15.7499H22.4972Z",
                                            fill: "white"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M22.4962 16.2499C22.4958 16.2499 22.4955 16.2499 22.4951 16.2499M22.4972 15.7499H22.4994C23.4545 15.7581 24.2381 14.9773 24.25 14.0042V2.0063C24.2462 1.53569 24.0589 1.08617 23.7297 0.756802C23.4014 0.428269 22.9589 0.246149 22.4972 0.250071L2.50064 0.250062C2.04109 0.246149 1.59858 0.428269 1.27028 0.756802C0.941145 1.08617 0.753838 1.53569 0.750008 2.00426L0.75 13.9937C0.753838 14.4643 0.941145 14.9138 1.27028 15.2432C1.59858 15.5717 2.04109 15.7538 2.50277 15.7499H22.4972Z",
                                            stroke: "black",
                                            "stroke-opacity": "0.2",
                                            "stroke-width": "0.5"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M13.1123 15.9999H22.4972C23.0239 16.0043 23.5309 15.7993 23.9065 15.4299C24.2821 15.0605 24.4955 14.557 24.4999 14.0303V11.6716C20.9561 13.7059 17.1127 15.1668 13.1123 15.9999Z",
                                            fill: "#F27712"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M23.6725 9.29643H22.82L21.8601 8.03023H21.769V9.29643H21.0738V6.15161H22.1C22.9028 6.15161 23.3663 6.48264 23.3663 7.0785C23.3663 7.56678 23.0766 7.88126 22.5552 7.98057L23.6725 9.29643ZM22.6463 7.10333C22.6463 6.79712 22.4145 6.63988 21.9842 6.63988H21.769V7.59161H21.9676C22.4145 7.59161 22.6463 7.42609 22.6463 7.10333ZM18.6407 6.15161H20.6104V6.68126H19.3359V7.38471H20.5607V7.92264H19.3359V8.77505H20.6104V9.30471H18.6407V6.15161ZM16.4063 9.37919L14.9001 6.14333H15.6614L16.6132 8.26195L17.5732 6.14333H18.318L16.7952 9.37919H16.4228H16.4063ZM10.1083 9.37092C9.04902 9.37092 8.22143 8.65092 8.22143 7.71574C8.22143 6.8054 9.06557 6.06885 10.1249 6.06885C10.4228 6.06885 10.6711 6.12678 10.9773 6.25919V6.98747C10.7454 6.75965 10.4334 6.63187 10.1083 6.63161C9.44626 6.63161 8.94143 7.11161 8.94143 7.71574C8.94143 8.35299 9.43798 8.80816 10.1414 8.80816C10.4559 8.80816 10.6959 8.70885 10.9773 8.46057V9.18885C10.6628 9.32126 10.398 9.37092 10.1083 9.37092ZM8.00626 8.33643C8.00626 8.94885 7.50143 9.37092 6.77315 9.37092C6.2435 9.37092 5.86281 9.18885 5.54005 8.77505L5.99522 8.38609C6.15246 8.66747 6.41729 8.80816 6.74833 8.80816C7.06281 8.80816 7.28626 8.61781 7.28626 8.36954C7.28626 8.22885 7.22005 8.12126 7.07936 8.0385C6.9251 7.96365 6.76446 7.90271 6.59936 7.85643C5.94557 7.64954 5.72212 7.42609 5.72212 6.98747C5.72212 6.47436 6.20212 6.0854 6.83109 6.0854C7.22833 6.0854 7.58419 6.20954 7.88212 6.44126L7.51798 6.85505C7.37366 6.69683 7.16938 6.60671 6.95522 6.60678C6.65729 6.60678 6.44212 6.75574 6.44212 6.95436C6.44212 7.11988 6.56626 7.21092 6.98005 7.35161C7.77453 7.59988 8.00626 7.83161 8.00626 8.34471V8.33643ZM4.58833 6.15161H5.2835V9.30471H4.58833V6.15161ZM2.35384 9.30471H1.32764V6.15161H2.35384C3.47936 6.15161 4.25729 6.79712 4.25729 7.72402C4.25729 8.19574 4.02557 8.64264 3.62005 8.94057C3.27246 9.18885 2.8835 9.30471 2.34557 9.30471H2.35384ZM3.16488 6.93781C2.93315 6.75574 2.66833 6.68954 2.21315 6.68954H2.02281V8.77505H2.21315C2.66005 8.77505 2.94143 8.6923 3.16488 8.52678C3.40488 8.32816 3.54557 8.03023 3.54557 7.72402C3.54557 7.41781 3.40488 7.12816 3.16488 6.93781Z",
                                            fill: "black"
                                        }
                                    }), e("path", {
                                        attrs: {
                                            d: "M12.9139 6.06885C12.0036 6.06885 11.2588 6.79712 11.2588 7.69919C11.2588 8.65919 11.9705 9.37919 12.9139 9.37919C13.8408 9.37919 14.5691 8.65092 14.5691 7.72402C14.5691 6.79712 13.8491 6.06885 12.9139 6.06885Z",
                                            fill: "#F27712"
                                        }
                                    })])]), e("defs", [e("clipPath", {
                                        attrs: {
                                            id: "clip0_954_20176"
                                        }
                                    }, [e("rect", {
                                        attrs: {
                                            width: "24",
                                            height: "16",
                                            fill: "white",
                                            transform: "translate(0.5)"
                                        }
                                    })])])])])]
                                },
                                proxy: !0
                            }], null, !1, 2489114536),
                            model: {
                                value: t.cardNumber,
                                callback: function(e) {
                                    t.cardNumber = e
                                },
                                expression: "cardNumber"
                            }
                        }), e("BaseInput", {
                            attrs: {
                                title: "Card holder name",
                                placeholder: "Name"
                            },
                            model: {
                                value: t.name,
                                callback: function(e) {
                                    t.name = e
                                },
                                expression: "name"
                            }
                        })], 1)]), e("div", {
                            staticClass: "confirm"
                        }, [e("SendWithdrawal", {
                            attrs: {
                                disabled: !t.amount || !t.cardNumber || !t.name,
                                info: t.getInfo
                            },
                            on: {
                                send: function(e) {
                                    return t.showSuccessful()
                                }
                            }
                        })], 1)]]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , Vp = []
            , Ep = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "panel",
                class: {
                    border: t.border
                }
            }, [t._t("content")], 2)
        }
            , Up = []
            , Hp = {
            name: "BasePanel",
            props: {
                border: {
                    type: Boolean,
                    default: !0
                }
            }
        }
            , jp = Hp
            , qp = (s("6505"),
            y(jp, Ep, Up, !1, null, "8c1ef244", null))
            , Rp = qp.exports
            , Wp = function() {
            var t = this
                , e = t._self._c;
            return e("BaseButton", {
                attrs: {
                    "button-text": "Confirm Withdrawal",
                    "button-style": "filled-primary",
                    disabled: t.disabled
                },
                nativeOn: {
                    click: function(e) {
                        return t.requestWithdrawal.apply(null, arguments)
                    }
                }
            })
        }
            , zp = []
            , Gp = {
            name: "SendWithdrawal",
            components: {
                BaseButton: Ae
            },
            props: {
                disabled: {
                    type: Boolean
                },
                info: {
                    type: Object,
                    default: () => {}
                }
            },
            methods: {
                requestWithdrawal() {
                    let t = String(this.info.amount);
                    t = t.includes(",") ? t.replace(/,/, ".") : t,
                        t = parseFloat(t);
                    for (let s in this.withdrawals)
                        if (0 === this.withdrawals[s].status)
                            return void this.$store.commit(n["V"], "LOCAL_ONE_PENDING_WITHDRAWAL");
                    if (isNaN(parseFloat(t)))
                        return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"]);
                    if ("bitcoin" === this.info.method) {
                        if (t * this.symbols["BTCUSD"].quote.bid < pt["fb"])
                            return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"])
                    } else if (("bank" === this.info.method || "card" === this.info.method) && t < pt["fb"])
                        return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"]);
                    let e = "";
                    switch (this.info.method) {
                        case "bitcoin":
                            e = this.info.wallet;
                            break;
                        case "bank":
                            e = `Account: ${this.methods.bank.account}\nAccount holder: ${this.methods.bank.holder}${this.methods.bank.iban ? "\nIBAN: " + this.methods.bank.iban : ""}${this.methods.bank.swift ? "\nSWIFT: " + this.methods.bank.swift : ""}${this.methods.bank.recipientAddress ? "\nRecipient Address: " + this.methods.bank.recipientAddress : ""}${this.methods.bank.routingNumber ? "\nRouting Number: " + this.methods.bank.routingNumber : ""}${this.methods.bank.bankBeneficiary ? "\nBank of Beneficiary Name: " + this.methods.bank.bankBeneficiary : ""}${this.methods.bank.bankAddress ? "\nBank Address: " + this.methods.bank.bankAddress : ""}${this.methods.bank.bankCode ? "\nBank code (BSB): " + this.methods.bank.bankCode : ""}${this.methods.bank.desc ? "\nDescription: " + this.methods.bank.desc : ""}`;
                            break;
                        case "card":
                            e = `Card: ${this.info.cardNumber.number}\nCard holder: ${this.info.name}`;
                            break;
                        case "ethereum":
                            e = "ETH: " + this.methods.btc.wallet;
                            break;
                        case "usdt":
                            e = "USDT: " + this.methods.btc.wallet;
                            break;
                        case "USDC":
                            e = "USDC: " + this.methods.btc.wallet;
                            break;
                        case "matic":
                            e = "MATIC: " + this.methods.btc.wallet;
                            break;
                        case "zelle":
                            e = `Phone/Eamil:${this.methods.zelle.contact}\nFull Name Zelle: ${this.methods.zelle.name}`;
                            break
                    }
                    this.$store.dispatch(r["X"], {
                        wallet: e,
                        amount: t,
                        account_id: this.info.activeAccount.id,
                        product: this.info.activeAccount.product,
                        currency: this.info.activeAccount.currency
                    }),
                        this.$emit("send")
                }
            },
            computed: {
                ...Object(o["b"])(["withdrawals", "symbols"])
            }
        }
            , Yp = Gp
            , Zp = y(Yp, Wp, zp, !1, null, "50fc7a61", null)
            , Jp = Zp.exports
            , Kp = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "successful"
            }, [e("div", {
                staticClass: "content"
            }, [e("div", {
                staticClass: "icon"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "47",
                    height: "47",
                    viewBox: "0 0 47 47",
                    fill: "none"
                }
            }, [e("g", {
                attrs: {
                    filter: "url(#filter0_b_954_22455)"
                }
            }, [e("path", {
                attrs: {
                    d: "M23.5004 0.166992C10.6437 0.166992 0.167053 10.6437 0.167053 23.5003C0.167053 36.357 10.6437 46.8337 23.5004 46.8337C36.3571 46.8337 46.8337 36.357 46.8337 23.5003C46.8337 10.6437 36.3571 0.166992 23.5004 0.166992ZM34.6537 18.1337L21.4237 31.3637C21.0971 31.6903 20.6537 31.877 20.1871 31.877C19.7204 31.877 19.2771 31.6903 18.9504 31.3637L12.3471 24.7603C11.6704 24.0837 11.6704 22.9637 12.3471 22.287C13.0237 21.6103 14.1437 21.6103 14.8204 22.287L20.1871 27.6537L32.1804 15.6603C32.8571 14.9837 33.9771 14.9837 34.6537 15.6603C35.3304 16.337 35.3304 17.4337 34.6537 18.1337Z",
                    fill: "url(#paint0_linear_954_22455)"
                }
            })]), e("defs", [e("filter", {
                attrs: {
                    id: "filter0_b_954_22455",
                    x: "-61.0829",
                    y: "-61.083",
                    width: "169.167",
                    height: "169.167",
                    filterUnits: "userSpaceOnUse",
                    "color-interpolation-filters": "sRGB"
                }
            }, [e("feFlood", {
                attrs: {
                    "flood-opacity": "0",
                    result: "BackgroundImageFix"
                }
            }), e("feGaussianBlur", {
                attrs: {
                    in: "BackgroundImageFix",
                    stdDeviation: "30.625"
                }
            }), e("feComposite", {
                attrs: {
                    in2: "SourceAlpha",
                    operator: "in",
                    result: "effect1_backgroundBlur_954_22455"
                }
            }), e("feBlend", {
                attrs: {
                    mode: "normal",
                    in: "SourceGraphic",
                    in2: "effect1_backgroundBlur_954_22455",
                    result: "shape"
                }
            })], 1), e("linearGradient", {
                attrs: {
                    id: "paint0_linear_954_22455",
                    x1: "-0.299841",
                    y1: "8.1001",
                    x2: "38.4406",
                    y2: "54.189",
                    gradientUnits: "userSpaceOnUse"
                }
            }, [e("stop", {
                attrs: {
                    "stop-color": "#4A7EFF"
                }
            }), e("stop", {
                attrs: {
                    offset: "0.486792",
                    "stop-color": "#61BEDA"
                }
            }), e("stop", {
                attrs: {
                    offset: "1",
                    "stop-color": "#404C73"
                }
            })], 1)], 1)])]), e("h5", {
                staticClass: "title__medium"
            }, [t._v("Withdrawal Successful")])]), e("div", {
                staticClass: "info"
            }, t._l(t.details, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "item"
                    }, [e("h6", {
                        staticClass: "item-title body__small"
                    }, [t._v(" " + t._s(s.title) + " ")]), e("h6", {
                        staticClass: "item-info body__small"
                    }, [t._v(" " + t._s(s.value) + " ")])])
                }
            )), 0), e("div", {
                staticClass: "actions"
            }, [e("BaseButton", {
                attrs: {
                    "button-style": "outlined-primary",
                    "button-text": "View Accounts"
                },
                nativeOn: {
                    click: function(e) {
                        return t.showAccounts.apply(null, arguments)
                    }
                }
            }), e("BaseButton", {
                attrs: {
                    "button-style": "filled-primary",
                    "button-text": "Continue Withdrawal"
                },
                nativeOn: {
                    click: function(e) {
                        return t.continueWithdrawal.apply(null, arguments)
                    }
                }
            })], 1)])
        }
            , Xp = []
            , Qp = {
            name: "SuccessfulTab",
            components: {
                BaseButton: Ae
            },
            props: {
                details: {
                    type: Array,
                    default: () => []
                }
            },
            methods: {
                continueWithdrawal() {
                    this.$emit("continue")
                },
                showAccounts() {
                    this.$emit("showAccounts")
                }
            }
        }
            , th = Qp
            , eh = (s("995a"),
            y(th, Kp, Xp, !1, null, "4800d4a8", null))
            , sh = eh.exports
            , ah = {
            name: "CreditDebitTab",
            components: {
                SuccessfulTab: sh,
                SendWithdrawal: Jp,
                BaseInput: er,
                BasePanel: Rp
            },
            mounted() {
                this.init()
            },
            data() {
                return {
                    amount: null,
                    cardNumber: "",
                    name: "",
                    successful: !1
                }
            },
            methods: {
                init() {
                    this.amount = null,
                        this.cardNumber = null,
                        this.name = "",
                        this.successful = !1
                },
                showSuccessful() {
                    this.init(),
                        this.successful = !0
                },
                showAccounts() {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], "accounts")
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["activeAccount"]),
                getInfo() {
                    return {
                        method: "card",
                        amount: this.amount,
                        cardNumber: this.cardNumber,
                        name: this.name,
                        activeAccount: this.activeAccount
                    }
                },
                getDetails() {
                    return [{
                        title: "Amount withdrawn",
                        value: Object(l["e"])(this.activeAccount.currency) + " " + this.amount
                    }, {
                        title: "Withdrawal to",
                        value: this.formattedCardNumber
                    }, {
                        title: "Currency",
                        value: this.activeAccount.currency
                    }, {
                        title: "Time",
                        value: this.formattedWithdrawalTime
                    }, {
                        title: "Transaction status",
                        value: "Processing"
                    }]
                },
                formattedWithdrawalTime() {
                    const t = {
                        year: "numeric",
                        month: "2-digit",
                        day: "2-digit",
                        hour: "2-digit",
                        minute: "2-digit",
                        second: "2-digit"
                    };
                    return (new Date).toLocaleString("en-GB", t).replace(",", "")
                },
                formattedCardNumber() {
                    if (!this.cardNumber)
                        return;
                    const t = this.cardNumber.trim().slice(-4);
                    return "**** **** **** " + t
                }
            }
        }
            , ih = ah
            , oh = (s("1657"),
            y(ih, $p, Vp, !1, null, "2adea277", null))
            , nh = oh.exports
            , rh = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "crypto-tab"
            }, [e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [t.successful ? [e("SuccessfulTab", {
                            attrs: {
                                details: t.getDetails
                            },
                            on: {
                                continue: function(e) {
                                    t.successful = !1
                                },
                                showAccounts: t.showAccounts
                            }
                        })] : [e("div", {
                            staticClass: "amount-to"
                        }, [e("h3", {
                            staticClass: "title title__medium"
                        }, [t._v("Amount to withdraw")]), e("div", {
                            staticClass: "inputs-list"
                        }, [e("BaseInput", {
                            attrs: {
                                type: "number",
                                title: "Amount",
                                placeholder: "0.00"
                            },
                            scopedSlots: t._u([{
                                key: "icon",
                                fn: function() {
                                    return [e("p", {
                                        staticClass: "body__large"
                                    }, [t._v("$")])]
                                },
                                proxy: !0
                            }, {
                                key: "info",
                                fn: function() {
                                    return [e("p", {
                                        staticClass: "body__large"
                                    }, [t._v("USD")])]
                                },
                                proxy: !0
                            }], null, !1, 1641061066),
                            model: {
                                value: t.amount,
                                callback: function(e) {
                                    t.amount = e
                                },
                                expression: "amount"
                            }
                        })], 1)]), e("div", {
                            staticClass: "card-details"
                        }, [e("h3", {
                            staticClass: "title title__medium"
                        }, [t._v("Crypto wallet details")]), e("div", {
                            staticClass: "inputs-list"
                        }, [e("BaseInput", {
                            attrs: {
                                title: "Bitcoin wallet address"
                            },
                            model: {
                                value: t.wallet,
                                callback: function(e) {
                                    t.wallet = e
                                },
                                expression: "wallet"
                            }
                        })], 1)]), e("div", {
                            staticClass: "confirm"
                        }, [e("SendWithdrawal", {
                            attrs: {
                                disabled: !t.amount || !t.wallet,
                                info: t.getInfo
                            },
                            on: {
                                send: function(e) {
                                    return t.showSuccessful()
                                }
                            }
                        })], 1)]]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , lh = []
            , ch = {
            name: "CryptoTab",
            components: {
                SendWithdrawal: Jp,
                SuccessfulTab: sh,
                BaseInput: er,
                BasePanel: Rp
            },
            mounted() {
                this.init()
            },
            data() {
                return {
                    amount: null,
                    wallet: "",
                    successful: !1
                }
            },
            methods: {
                init() {
                    this.amount = null,
                        this.wallet = "",
                        this.successful = !1
                },
                showSuccessful() {
                    this.init(),
                        this.successful = !0
                },
                showAccounts() {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], "accounts")
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["activeAccount"]),
                getInfo() {
                    return {
                        method: "bitcoin",
                        amount: this.amount,
                        wallet: this.wallet,
                        activeAccount: this.activeAccount
                    }
                },
                getDetails() {
                    return [{
                        title: "Amount withdrawn",
                        value: Object(l["e"])(this.activeAccount.currency) + " " + this.amount
                    }, {
                        title: "Withdrawal to",
                        value: this.wallet
                    }, {
                        title: "Currency",
                        value: this.activeAccount.currency
                    }, {
                        title: "Time",
                        value: this.formattedWithdrawalTime
                    }, {
                        title: "Transaction status",
                        value: "Processing"
                    }]
                },
                formattedWithdrawalTime() {
                    const t = {
                        year: "numeric",
                        month: "2-digit",
                        day: "2-digit",
                        hour: "2-digit",
                        minute: "2-digit",
                        second: "2-digit"
                    };
                    return (new Date).toLocaleString("en-GB", t).replace(",", "")
                }
            }
        }
            , dh = ch
            , uh = (s("7236"),
            y(dh, rh, lh, !1, null, "352bbbe3", null))
            , mh = uh.exports
            , ph = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "tab"
            }, [e(t.component, {
                tag: "component"
            })], 1)
        }
            , hh = []
            , vh = {
            name: "BaseTabViewerItem",
            props: {
                component: {
                    type: Object,
                    default: () => {}
                }
            }
        }
            , fh = vh
            , gh = y(fh, ph, hh, !1, null, "69bd7bce", null)
            , bh = gh.exports
            , yh = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "withdrawal-panels"
            }, [e("h5", {
                staticClass: "title title__medium"
            }, [t._v(" " + t._s(t.tokens.fullScreenWithdrawal.withdrawalRequests) + " ")]), t.withdrawals && Object.keys(t.withdrawals).length ? e("table", {
                staticClass: "cabinet"
            }, [e("thead", [e("tr", [e("th", [t._v(t._s(t.tokens.fullScreenWithdrawal.amount))]), e("th", [t._v(t._s(t.tokens.fullScreenWithdrawal.currency))]), e("th", [t._v(t._s(t.tokens.fullScreenWithdrawal.time))]), e("th", [t._v(t._s(t.tokens.fullScreenWithdrawal.info))]), e("th", [t._v(t._s(t.tokens.fullScreenWithdrawal.status))])])]), e("tbody", t._l(t.withdrawals.slice(0, 10), (function(s) {
                    return e("tr", {
                        key: s.id
                    }, [e("td", [t._v(t._s(t.currencySign(s.currency) + Math.abs(s.amount).toFixed(t.activeAccount.precision)) + " ")]), e("td", [t._v(t._s(s.currency))]), e("td", [t._v(t._s(new Date(1e3 * s.time_created).toLocaleString()))]), e("td", [t._v(t._s(s.comment))]), e("td", {
                        class: t.tokens.statuses[s.status]
                    }, [e("div", {
                        staticClass: "status"
                    }, [t._v(" " + t._s(t.tokens.statuses[s.status]) + " "), 0 !== s.status || t.hideWithdrawal ? t._e() : e("i", {
                        staticClass: "material-icons cancel-withdrawal",
                        attrs: {
                            title: "Cancel withdrawal request"
                        },
                        on: {
                            click: function(e) {
                                return t.confirmCancelWithdrawal(s.id)
                            }
                        }
                    }, [t._v("cancel")])])])])
                }
            )), 0)]) : t._e(), t.withdrawals && Object.keys(t.withdrawals).length ? e("div", {
                staticClass: "withdrawal-panel"
            }, t._l(t.withdrawals, (function(t) {
                    return e("WithdrawalRequest", {
                        key: t.id,
                        attrs: {
                            withdrawal: t
                        }
                    })
                }
            )), 1) : e("BasePanel", {
                staticClass: "info-panel",
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("div", {
                            staticClass: "info-content"
                        }, [e("h5", {
                            staticClass: "info-title title__medium"
                        }, [t._v("No withdrawal requests yet")]), e("p", {
                            staticClass: "info-desc body_small"
                        }, [t._v(" You haven't made any withdrawal requests so far. "), e("br"), t._v(" Once you initiate a withdrawal, your transaction details will appear here ")])])]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , _h = []
            , Ch = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "withdrawal-request"
            }, [e("div", {
                staticClass: "coast-container"
            }, [e("span", {
                staticClass: "coast label__medium"
            }, [t._v(t._s(t.currencySign(t.withdrawal.currency)) + " " + t._s(1 === t.withdrawal.status ? t.withdrawal.amount.toFixed(2) : (-t.withdrawal.amount).toFixed(2)))]), e("span", {
                staticClass: "currency body__small"
            }, [t._v(t._s(t.withdrawal.currency))])]), e("div", {
                staticClass: "status-container",
                class: t.tokens.statuses[t.withdrawal.status].toLowerCase()
            }, [e("span", {
                staticClass: "status label__small"
            }, [t._v(" " + t._s(t.tokens.statuses[t.withdrawal.status]) + " ")]), 0 !== t.withdrawal.status || t.hideWithdrawal ? t._e() : e("i", {
                staticClass: "material-icons cancel-withdrawal",
                attrs: {
                    title: "Cancel withdrawal request"
                },
                on: {
                    click: function(e) {
                        return t.confirmCancelWithdrawal(t.withdrawal.id)
                    }
                }
            }, [t._v("cancel")])]), e("div", {
                staticClass: "time body__extrasmall"
            }, [t._v(" " + t._s(t.formatDate(t.withdrawal.time_created)) + " ")]), e("div", {
                staticClass: "info body__extrasmall"
            }, [t._v(" " + t._s(t.withdrawal.comment || "-") + " ")])])
        }
            , wh = []
            , kh = {
            name: "WithdrawalRequest",
            props: {
                withdrawal: {
                    type: Object,
                    default: () => {}
                }
            },
            data() {
                return {
                    hideWithdrawal: pt["h"]
                }
            },
            computed: {
                ...Object(o["b"])(["tokens"])
            },
            methods: {
                currencySign: l["e"],
                confirmCancelWithdrawal(t) {
                    this.$store.commit(n["R"], t),
                        this.$store.commit(n["F"], {
                            withdrawalCancel: !0
                        })
                },
                formatDate(t) {
                    const e = new Date(1e3 * t)
                        , s = e.getDate().toString().padStart(2, "0")
                        , a = (e.getMonth() + 1).toString().padStart(2, "0")
                        , i = e.getFullYear()
                        , o = e.toLocaleTimeString("en-GB", {
                        hour: "2-digit",
                        minute: "2-digit",
                        second: "2-digit"
                    });
                    return `${s}.${a}.${i} ${o}`
                }
            }
        }
            , Sh = kh
            , xh = (s("a5c9"),
            y(Sh, Ch, wh, !1, null, "137738b3", null))
            , Mh = xh.exports
            , Ah = {
            name: "WithdrawalRequests",
            components: {
                WithdrawalRequest: Mh,
                BasePanel: Rp
            },
            data() {
                return {
                    withdrawal: !0,
                    hideWithdrawal: pt["h"]
                }
            },
            methods: {
                confirmCancelWithdrawal(t) {
                    this.$store.commit(n["R"], t),
                        this.$store.commit(n["F"], {
                            withdrawalCancel: !0
                        })
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["withdrawals", "tokens", "activeAccount"])
            }
        }
            , Dh = Ah
            , Ph = (s("e712"),
            y(Dh, yh, _h, !1, null, "34e415ee", null))
            , Th = Ph.exports
            , Lh = {
            name: "WithdrawalPage",
            components: {
                WithdrawalRequests: Th,
                BaseTabViewerItem: bh,
                BaseTabBox: Np,
                BasePageTitle: Tp
            },
            data() {
                return {
                    activeTab: {
                        key: "creditDebit",
                        component: nh
                    }
                }
            },
            methods: {
                changeTab(t) {
                    switch (t) {
                        case "creditDebit":
                            this.activeTab.key = t,
                                this.activeTab.component = nh;
                            break;
                        case "crypto":
                            this.activeTab.key = t,
                                this.activeTab.component = mh;
                            break;
                        default:
                            break
                    }
                }
            }
        }
            , Ih = Lh
            , Fh = (s("0370"),
            y(Ih, kp, Sp, !1, null, "7a1dae22", null))
            , Oh = Fh.exports
            , Bh = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "accounts-page"
            }, [e("BasePageTitle", {
                attrs: {
                    title: "Accounts"
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined",
                            on: {
                                click: t.changeVisibility
                            }
                        }, [t._v(" " + t._s(t.isVisibleAccountCards ? "visibility" : "visibility_off") + " ")])]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("AccountTransfer", {
                            attrs: {
                                visibility: t.isVisibleAccountCards
                            }
                        })]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return t._l(t.accounts, (function(s) {
                                return e("AccountCard", {
                                    key: s.id,
                                    attrs: {
                                        account: s,
                                        visibility: t.isVisibleAccountCards
                                    }
                                })
                            }
                        ))
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , Nh = []
            , $h = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "account-card",
                class: t.visibility ? "" : "blur"
            }, [e("div", {
                staticClass: "card-header"
            }, [e("div", {
                staticClass: "title"
            }, [e("div", {
                staticClass: "account-symbol symbol",
                class: "symbol-" + t.account.currency.toUpperCase()
            }), e("span", {
                staticClass: "title__small"
            }, [t._v(t._s(t.account.currency))]), e("span")]), e("MakeActiveButton", {
                attrs: {
                    active: t.activeAccount.id === t.account.id
                },
                on: {
                    update: function(e) {
                        return t.makeActive(t.account.id)
                    }
                }
            })], 1), e("div", {
                staticClass: "card-main"
            }, [e("div", [e("div", {
                staticClass: "account-name body__extrasmall"
            }, [t._v(" " + t._s(t.account.account_name) + " " + t._s(t.tokens.fullScreenAccounts.account) + " ")]), e("NextStatusLineChart", {
                attrs: {
                    total: "$50.000",
                    precent: 5
                }
            })], 1), e("div", [e("div", {
                staticClass: "account-info"
            }, [e("div", {
                staticClass: "balance"
            }, [t._v(" " + t._s(t.tokens.fullScreenAccounts.balance) + " "), e("span", [t._v(" " + t._s(t.currencySign(t.account.currency) + " " + t.account.balance.toFixed(t.account.precision ? t.account.precision : 1)) + " ")])]), e("div", {
                staticClass: "credit"
            }, [t._v(" " + t._s(t.tokens.fullScreenAccounts.credit) + " "), e("span", [t._v(" " + t._s(t.currencySign(t.account.currency) + " " + t.account.credit.toFixed(t.account.precision ? t.account.precision : 1)) + " ")])])]), e("DepositAccountIconButton", {
                on: {
                    update: function(e) {
                        return t.changePage(t.account.id)
                    }
                }
            })], 1)]), t.activeAccount.id === t.account.id ? e("div", {
                staticClass: "card-footer body__extrasmall"
            }, [e("div", [e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.invested))]), e("span", [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s((t.balances.orders * (1 / t.conversions[t.activeAccount.currency])).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.balances.profit >= 0 ? t.tokens.balanceModal.profit : t.tokens.balanceModal.loss))]), e("span", {
                class: t.balances.profit > 0 ? "green" : t.balances.profit < 0 ? "red" : ""
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s(t.balances.profit.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.equity) + " ")]), e("span", [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " " + t._s(t.balances.equity_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.margin) + " ")]), e("span", [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + " " + (t.balances.margin * (1 / t.conversions[t.activeAccount.currency])).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })) + " ")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.marginLevel) + " ")]), e("span", [t._v(" " + t._s(0 !== t.balances.margin ? t.balances.margin_level_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) + "%" : "-") + " ")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.marginFree) + " ")]), e("span", [t._v(" " + t._s(0 !== t.balances.margin ? t.currencySign(t.activeAccount.currency) + " " + t.balances.free_margin_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) : "-") + " ")])])])]) : e("div", {
                staticClass: "card-footer body__extrasmall"
            }, [e("div", [e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.invested))]), t._v(" "), e("span", [t._v("-")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.profit))]), t._v(" "), e("span", [t._v("-")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.equity))]), t._v(" "), e("span", [t._v("-")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.margin))]), t._v(" "), e("span", [t._v("-")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.marginLevel))]), t._v(" "), e("span", [t._v("-")])]), e("div", {
                staticClass: "card-footer-item"
            }, [e("span", [t._v(t._s(t.tokens.balanceModal.marginFree))]), t._v(" "), e("span", [t._v("-")])])])])])
        }
            , Vh = []
            , Eh = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "make-active-button label__medium",
                class: {
                    active: t.isActive
                },
                on: {
                    click: t.update
                }
            }, [e("div", {
                staticClass: "state-layer label__medium",
                style: {
                    opacity: t.loader ? 0 : 1
                }
            }, [t._v(t._s(t.isActive ? "Active" : "Make Active"))]), t.isActive ? e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("check_circle")]) : t._e(), t.loader ? e("div", {
                staticClass: "loader"
            }) : t._e()])
        }
            , Uh = []
            , Hh = {
            name: "MakeActiveButton",
            props: {
                active: {
                    type: Boolean,
                    default: !1
                }
            },
            data() {
                return {
                    loader: !1
                }
            },
            computed: {
                isActive() {
                    return this.active && !this.loader
                }
            },
            methods: {
                update() {
                    this.loader = !0,
                        this.$emit("update"),
                        setTimeout( () => {
                                this.loader = !1
                            }
                            , 500)
                }
            }
        }
            , jh = Hh
            , qh = (s("9cc7"),
            y(jh, Eh, Uh, !1, null, "198ae81e", null))
            , Rh = qh.exports
            , Wh = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                on: {
                    click: function(e) {
                        return t.$emit("update")
                    }
                }
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "18",
                    height: "16.5",
                    viewBox: "0 0 18 17",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M11.5711 11.2427L11.518 9.2451H7.91179L14.7426 2L13.2426 0.5L6.49758 7.83089L6.49758 4.22465L4.5 4.17161V11.2427H11.5711Z",
                    fill: "#93D5C6"
                }
            }), e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M18 17V15H0L5.96046e-08 17H18Z",
                    fill: "#93D5C6"
                }
            })])])
        }
            , zh = []
            , Gh = {
            name: "DepositAccountIconButton"
        }
            , Yh = Gh
            , Zh = (s("6ce9"),
            y(Yh, Wh, zh, !1, null, "7712492d", null))
            , Jh = Zh.exports
            , Kh = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chart body__extrasmall"
            }, [e("div", {
                staticClass: "left"
            }, [t._v("next status")]), e("div", {
                staticClass: "right",
                style: t.widthPrecent
            }, [t._v("total " + t._s(t.total))])])
        }
            , Xh = []
            , Qh = {
            name: "NextStatusLineChart",
            props: {
                precent: {
                    type: Number,
                    default: 0
                },
                total: {
                    type: String,
                    default: ""
                }
            },
            computed: {
                widthPrecent() {
                    return {
                        "--width": this.precent + "%"
                    }
                }
            }
        }
            , tv = Qh
            , ev = (s("cedb"),
            y(tv, Kh, Xh, !1, null, "28d31d2e", null))
            , sv = ev.exports
            , av = {
            name: "AccountCard",
            components: {
                MakeActiveButton: Rh,
                NextStatusLineChart: sv,
                DepositAccountIconButton: Jh
            },
            props: {
                account: {
                    type: Object
                },
                visibility: {
                    type: Boolean
                }
            },
            computed: {
                ...Object(o["b"])(["accounts", "activeAccount", "symbols", "tokens", "conversions"]),
                balances() {
                    let t = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        margin: 0,
                        margin_level_apprx: 0,
                        free_margin_apprx: 0,
                        equity_apprx: 0
                    };
                    if (!this.activeAccount.id)
                        return t;
                    t.balance = this.activeAccount.balance,
                        t.credit = this.activeAccount.credit;
                    let e = {};
                    for (let s in this.activeAccount.orders) {
                        let a = this.activeAccount.orders[s];
                        a.easy_amount = a.easy_amount || a.margin,
                            t.orders += a.easy_amount,
                        void 0 === e[a.symbol] && (e[a.symbol] = 0),
                            e[a.symbol] += a.type % 2 ? -a.margin : a.margin,
                        this.symbols[a.symbol] && (t.profit += a.type < 2 ? a.point * (a.type ? a.price_open - this.symbols[a.symbol].quote.ask : this.symbols[a.symbol].quote.bid - a.price_open) * Math.pow(10, this.symbols[a.symbol].precision) + a.swap + a.commission : 0)
                    }
                    for (let s in e)
                        t.margin += Math.abs(e[s]);
                    return t.equity = t.balance + t.credit + t.profit,
                        t.margin_level_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit !== 0 && t.margin ? (100 * (this.activeAccount.balance + this.activeAccount.credit + t.profit) / t.margin).toFixed(2) : "",
                        t.free_margin_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit - t.margin,
                        t.equity_apprx = t.equity,
                        t
                }
            },
            methods: {
                changePage(t) {
                    this.makeActive(t),
                        this.$store.commit(n["F"], {
                            fullscreen: !0
                        }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], {
                            page: "deposit"
                        })
                },
                makeActive(t) {
                    l["i"].setItem("activeAccount", t),
                        this.$store.commit(n["b"], t)
                },
                currencySign: l["e"]
            }
        }
            , iv = av
            , ov = (s("4c65"),
            y(iv, $h, Vh, !1, null, "e95be56a", null))
            , nv = ov.exports
            , rv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "account-transfer",
                class: t.visibility ? "" : "blur"
            }, [e("div", {
                staticClass: "account-transfer-header",
                on: {
                    click: t.changeVisibility
                }
            }, [e("div", {
                staticClass: "title title__medium"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.manageAccounts))]), e("i", {
                staticClass: "material-symbols-outlined",
                style: t.isOpenTransfer ? "rotate: 180deg" : ""
            }, [t._v("keyboard_arrow_down")])]), t.isOpenTransfer ? e("div", {
                staticClass: "account-transfer-inner",
                class: {
                    hide: t.hideTransfer
                }
            }, [e("div", {
                staticClass: "from-pad"
            }, [e("BaseTransferSelect", {
                attrs: {
                    title: t.tokens.fullScreenAccounts.transferFrom,
                    options: t.accountsFromOptions
                },
                on: {
                    update: function(e) {
                        return t.setOption(e, "from")
                    }
                }
            }), e("BaseNumberInput", {
                attrs: {
                    title: t.tokens.fullScreenAccounts.amount,
                    type: "number",
                    placeholder: "0.0",
                    validateFunction: t.updateInput
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("div", [t._v(t._s(t.transfer.from.currency))])]
                    },
                    proxy: !0
                }], null, !1, 2856959085),
                model: {
                    value: t.transfer.amount,
                    callback: function(e) {
                        t.$set(t.transfer, "amount", e)
                    },
                    expression: "transfer.amount"
                }
            })], 1), t.onlyOneAccount ? t._e() : e("div", {
                staticClass: "icon"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "24",
                    height: "24",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M21.9999 10V8H5.8249L8.3999 5.425L6.9999 4L2.70701 8.29289C2.07704 8.92286 2.52321 10 3.41411 10H21.9999Z",
                    fill: "#9A9DAB"
                }
            }), e("path", {
                attrs: {
                    d: "M2.9999 14V16H19.1749L16.5999 18.575L17.9999 20L22.2928 15.7071C22.9228 15.0771 22.4766 14 21.5857 14H2.9999Z",
                    fill: "#9A9DAB"
                }
            })])]), t.onlyOneAccount ? t._e() : e("div", {
                staticClass: "to-pad"
            }, [e("BaseTransferSelect", {
                attrs: {
                    title: t.tokens.fullScreenAccounts.transferTo,
                    options: t.accountsToOptions
                },
                on: {
                    update: function(e) {
                        return t.setOption(e, "to")
                    }
                }
            }), e("BaseNumberInput", {
                attrs: {
                    title: "Amount deposited",
                    type: "number",
                    placeholder: "0.0",
                    readonly: !0,
                    value: Number((t.transfer.amount * (t.conversions[t.transfer.from.currency] / t.conversions[t.transfer.to.currency])).toFixed(6)) || ""
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("div", [t._v(t._s(t.transfer.to.currency))])]
                    },
                    proxy: !0
                }], null, !1, 1867551872)
            })], 1)]) : t._e(), t.isOpenTransfer && !t.onlyOneAccount ? e("div", {
                staticClass: "account-transfer-footer"
            }, [e("div", {
                staticClass: "currency"
            }, [t._v(" " + t._s(`1 ${t.transfer.from.currency} ≈ ${Number((t.conversions[t.transfer.from.currency] / t.conversions[t.transfer.to.currency]).toFixed(6))} ${t.transfer.to.currency}`) + " ")]), e("BaseButton", {
                attrs: {
                    buttonText: "Make Transfer",
                    buttonStyle: "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.makeTransfer.apply(null, arguments)
                    }
                }
            })], 1) : t._e()])
        }
            , lv = []
            , cv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "select"
            }, [e("label", {
                staticClass: "body__medium"
            }, [t._v(t._s(t.title))]), e("div", {
                staticClass: "select-input-wrapper"
            }, [e("input", {
                ref: "inputRef",
                staticClass: "select-input",
                attrs: {
                    readonly: "true"
                }
            }), t.selectedValue.text ? e("div", {
                staticClass: "select-div body__medium",
                on: {
                    click: t.focus
                }
            }, [e("div", {
                staticClass: "account-symbol symbol",
                class: "symbol-" + t.selectedValue.currency.toUpperCase()
            }), e("span", [t._v(t._s(t.selectedValue.currency))]), e("span", [t._v(t._s(t.selectedValue.text))])]) : e("div", {
                staticClass: "select-div body__medium"
            }, [t._v(" " + t._s(t.placeholder) + " ")]), e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("arrow_drop_down")]), e("ul", {
                staticClass: "select-list",
                style: {
                    "max-height": 36 * t.maxShowed + 8 + "px"
                }
            }, t._l(t.options, (function(s, a) {
                    return e("li", {
                        key: a,
                        staticClass: "body__medium",
                        class: {
                            active: s.id === t.selectedValue.id
                        },
                        on: {
                            mousedown: function(e) {
                                return t.setOption(s)
                            }
                        }
                    }, [e("div", {
                        staticClass: "account-symbol symbol",
                        class: "symbol-" + s.currency.toUpperCase()
                    }), e("span", [t._v(t._s(s.currency))]), e("span", [t._v(t._s(s.text))])])
                }
            )), 0)])])
        }
            , dv = []
            , uv = {
            name: "BaseTransferSelect",
            props: {
                maxShowed: {
                    type: Number,
                    default: 5
                },
                options: {
                    type: Array
                },
                placeholder: {
                    type: String,
                    default: "Nothing selected"
                },
                title: {
                    type: String
                }
            },
            data() {
                return {
                    selectedValue: this.options[0]
                }
            },
            methods: {
                setOption(t) {
                    this.selectedValue = t,
                        this.$emit("update", {
                            id: this.selectedValue.id,
                            product: this.selectedValue.product,
                            currency: this.selectedValue.currency
                        })
                },
                focus() {
                    this.$refs.inputRef.focus()
                }
            },
            watch: {
                options: {
                    deep: !0,
                    handler(t) {
                        t.some(t => {
                                if (t.id === this.selectedValue.id)
                                    return this.selectedValue = t,
                                        !0
                            }
                        ) || (this.selectedValue = this.options[0]),
                            this.$emit("update", {
                                id: this.selectedValue.id,
                                product: this.selectedValue.product,
                                currency: this.selectedValue.currency
                            })
                    }
                }
            }
        }
            , mv = uv
            , pv = (s("39ad"),
            y(mv, cv, dv, !1, null, "598a05a2", null))
            , hv = pv.exports
            , vv = {
            name: "AccountTransfer",
            components: {
                BaseNumberInput: ls,
                BaseTransferSelect: hv,
                BaseButton: Ae
            },
            props: {
                visibility: {
                    type: Boolean
                }
            },
            data() {
                return {
                    isOpenTransfer: !1,
                    transfer: {
                        from: {
                            product: "cfd",
                            id: 0,
                            currency: "USD"
                        },
                        to: {
                            product: "cfd",
                            id: 0,
                            currency: "USD"
                        },
                        amount: ""
                    },
                    hideTransfer: !1,
                    transferDisable: !1
                }
            },
            computed: {
                ...Object(o["b"])(["accounts", "activeAccount", "tokens", "savingsAccounts", "conversions"]),
                onlyOneAccount() {
                    return 1 === Object.keys(this.accounts).length
                },
                accountsFromOptions() {
                    let t = [];
                    for (let e in this.accounts)
                        t.push({
                            id: this.accounts[e].id,
                            product: this.accounts[e].product,
                            currency: this.accounts[e].currency,
                            text: this.accounts[e].product.toUpperCase() + " " + this.accounts[e].id + "(" + Object(l["e"])(this.accounts[e].currency) + this.accounts[e].balance.toFixed(this.accounts[e].precision ? this.accounts[e].precision : 1) + ")"
                        });
                    return t
                },
                accountsToOptions() {
                    let t = [];
                    for (let e in this.accounts)
                        this.accounts[e].id != this.transfer.from.id && t.push({
                            id: this.accounts[e].id,
                            product: this.accounts[e].product,
                            currency: this.accounts[e].currency,
                            text: this.accounts[e].product.toUpperCase() + " " + this.accounts[e].id + "(" + Object(l["e"])(this.accounts[e].currency) + this.accounts[e].balance.toFixed(this.accounts[e].precision ? this.accounts[e].precision : 1) + ")"
                        });
                    return t
                }
            },
            methods: {
                changeVisibility() {
                    this.isOpenTransfer = !this.isOpenTransfer
                },
                updateInput(t) {
                    return t.endsWith(".") ? t.replace(/,/g, "") : Number(t.replace(/,/g, ""))
                },
                makeTransfer() {
                    this.transferDisable || (this.transfer.amount ? Object.keys(this.activeAccount.orders).length ? this.$store.commit(n["V"], "First need to close open orders") : (this.transferDisable = !0,
                        this.accounts[this.transfer.from.id].balance - this.transfer.amount > 0 ? this.$store.dispatch(r["T"], {
                            from: {
                                product: this.transfer.from.product,
                                id: this.transfer.from.id
                            },
                            to: {
                                product: this.transfer.to.product,
                                id: this.transfer.to.id
                            },
                            amount: this.transfer.amount
                        }) : this.$store.commit(n["V"], "Not enough money in the balance"),
                        this.transfer.amount = "",
                        setTimeout( () => {
                                this.transferDisable = !1
                            }
                            , 2e3)) : this.$store.commit(n["V"], "Incorrect amount"))
                },
                setOption(t, e) {
                    this.transfer[e].id != t.id && (this.transfer[e].id = t.id,
                        this.transfer[e].product = t.product,
                        this.transfer[e].currency = t.currency,
                        this.amount = "")
                },
                currencySign: l["e"]
            },
            watch: {
                accounts: {
                    deep: !0,
                    handler(t) {
                        if (!this.transfer.from.id || !this.transfer.to.id) {
                            this.hideTransfer = !0;
                            for (let e in t)
                                if (this.transfer.from.id) {
                                    if (!this.transfer.to.id) {
                                        this.transfer.to.id = t[e].id,
                                            this.transfer.to.product = t[e].product,
                                            this.transfer.to.currency = t[e].currency,
                                        this.hideTransfer && (this.hideTransfer = !1);
                                        break
                                    }
                                } else
                                    this.transfer.from.id = t[e].id,
                                        this.transfer.from.product = t[e].product,
                                        this.transfer.from.currency = t[e].currency
                        }
                    }
                }
            }
        }
            , fv = vv
            , gv = (s("f0d3"),
            y(fv, rv, lv, !1, null, "3aa26036", null))
            , bv = gv.exports
            , yv = {
            name: "AccountsPage",
            components: {
                BasePageTitle: Tp,
                BasePanel: Rp,
                AccountCard: nv,
                AccountTransfer: bv
            },
            data() {
                return {
                    isVisibleAccountCards: !0
                }
            },
            computed: {
                ...Object(o["b"])(["accounts", "tokens"])
            },
            methods: {
                changeVisibility() {
                    this.isVisibleAccountCards = !this.isVisibleAccountCards
                }
            }
        }
            , _v = yv
            , Cv = (s("fd85"),
            y(_v, Bh, Nh, !1, null, "d8a78952", null))
            , wv = Cv.exports
            , kv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "live-chat-page"
            }, [e("BasePageTitle", {
                attrs: {
                    title: "Live chart"
                },
                scopedSlots: t._u([{
                    key: "left-icon",
                    fn: function() {
                        return [e("span", {
                            staticClass: "circle online"
                        })]
                    },
                    proxy: !0
                }])
            }), e("LiveChat")], 1)
        }
            , Sv = []
            , xv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chat",
                class: {
                    over: t.ddOver
                },
                on: {
                    drop: function(e) {
                        return e.preventDefault(),
                            (e => t.addFile(e)).apply(null, arguments)
                    },
                    dragover: [function(t) {
                        t.preventDefault()
                    }
                        , function(e) {
                            return t.over(!0)
                        }
                    ],
                    dragenter: function(e) {
                        return t.over(!0)
                    },
                    dragleave: function(e) {
                        return t.over(!1)
                    },
                    keyup: function(e) {
                        if (!e.type.indexOf("key") && t._k(e.keyCode, "esc", 27, e.key, ["Esc", "Escape"]))
                            return null;
                        t.toggler = !1
                    }
                }
            }, [e("div", {
                staticClass: "messages-list",
                attrs: {
                    id: "support-messages"
                }
            }, [e("div", {
                staticClass: "scroll"
            }, [Object.keys(t.messageChips).length ? t._e() : e("h4", {
                staticClass: "title title__medium"
            }, [t._v("How can I assist you today?")]), Object.keys(t.messageChips).length ? t._e() : [t._l(t.messageChips, (function(s, a) {
                    return e("MessageChipsList", {
                        key: a,
                        attrs: {
                            messages: s.chips
                        },
                        on: {
                            "send-message": t.send
                        },
                        scopedSlots: t._u([{
                            key: "title",
                            fn: function() {
                                return [t._v(" " + t._s(s.title) + " ")]
                            },
                            proxy: !0
                        }], null, !0)
                    })
                }
            ))], e("div", {
                staticClass: "message-list"
            }, t._l(t.supportMessages, (function(s) {
                    return e("MessageBox", {
                        key: s.time_created + Math.random(),
                        attrs: {
                            message: s
                        },
                        scopedSlots: t._u([{
                            key: "copy",
                            fn: function({message: s}) {
                                return ["" !== s.text ? e("i", {
                                    staticClass: "material-symbols-outlined copy",
                                    on: {
                                        click: function(e) {
                                            return t.copy(s.text)
                                        }
                                    }
                                }, [t._v("content_copy")]) : t._e()]
                            }
                        }], null, !0)
                    })
                }
            )), 1)], 2)]), e("ChatBar")], 1)
        }
            , Mv = []
            , Av = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chips-list"
            }, [t.$slots["title"] ? e("h5", {
                staticClass: "title body__medium"
            }, [t._t("title")], 2) : t._e(), e("div", {
                staticClass: "list"
            }, t._l(t.messages, (function(s, a) {
                    return e("MessageChipsListItem", {
                        key: a,
                        attrs: {
                            message: s
                        },
                        nativeOn: {
                            click: function(e) {
                                return t.sendMessage(s)
                            }
                        }
                    })
                }
            )), 1)])
        }
            , Dv = []
            , Pv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chips-item body__medium"
            }, [t._v(" " + t._s(t.message) + " ")])
        }
            , Tv = []
            , Lv = {
            name: "MessageChipsListItem",
            props: {
                message: {
                    type: String
                }
            }
        }
            , Iv = Lv
            , Fv = (s("c4e7"),
            y(Iv, Pv, Tv, !1, null, "845c3d9e", null))
            , Ov = Fv.exports
            , Bv = {
            name: "MessageChipsList",
            components: {
                MessageChipsListItem: Ov
            },
            props: {
                messages: {
                    type: Array,
                    default: () => []
                }
            },
            methods: {
                sendMessage(t) {
                    this.$emit("send-message", t)
                }
            }
        }
            , Nv = Bv
            , $v = (s("5c49"),
            y(Nv, Av, Dv, !1, null, "4ecf5ebb", null))
            , Vv = $v.exports
            , Ev = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chat-bar"
            }, [t._m(0), e("div", {
                staticClass: "message-box"
            }, [e("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.message,
                    expression: "message"
                }],
                staticClass: "body__medium",
                attrs: {
                    maxlength: "524288",
                    placeholder: "" + t.tokens.fullScreenSupport.sendMessage,
                    id: "support-message"
                },
                domProps: {
                    value: t.message
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.sendMessage.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.message = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "send"
            }, [e("input", {
                ref: "file",
                attrs: {
                    type: "file",
                    id: "file"
                },
                on: {
                    change: function(e) {
                        return t.loadPreview()
                    }
                }
            }), e("i", {
                staticClass: "material-symbols-outlined",
                on: {
                    click: t.sendMessage
                }
            }, [t._v("send")])])])
        }
            , Uv = [function() {
            var t = this
                , e = t._self._c;
            return e("label", {
                staticClass: "attach",
                attrs: {
                    for: "file"
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("attach_file")])])
        }
        ]
            , Hv = {
            name: "ChatBar",
            props: {
                placeholder: {
                    type: String
                }
            },
            data() {
                return {
                    restEndpoint: pt["ub"],
                    message: "",
                    ddOver: !1,
                    toggler: !1,
                    path: [],
                    preview: "",
                    previewShow: !1,
                    typeFile: "",
                    newChat: pt["jb"]
                }
            },
            methods: {
                sendMessage() {
                    if (this.message.trim()) {
                        if (0 === this.user.enable_chat)
                            return this.$store.commit(n["V"], this.tokens.errors.CHAT_DISABLED),
                                this.message = "",
                                this.$refs.file.value = "",
                                this.preview = "",
                                void (this.previewShow = !1);
                        if (this.message && (this.$store.dispatch(r["S"], this.message),
                            this.message = ""),
                            this.$refs.file.files[0])
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(this.$refs.file.files[0].type) > -1) {
                                let t = new FormData;
                                t.append("file", this.$refs.file.files[0]),
                                    this.$store.dispatch(r["e"], t)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE");
                        this.$refs.file.value = "",
                            this.preview = "",
                            this.previewShow = !1
                    }
                },
                copy(t) {
                    navigator.clipboard.writeText(t).then( () => {
                            this.$store.commit(n["U"], "Message copied to clipboard")
                        }
                    )
                },
                over(t) {
                    this.ddOver = t
                },
                loadPreview() {
                    let t = this.$refs.file.files[0];
                    this.typeFile = t.type,
                        ["image/jpeg", "image/png"].indexOf(this.typeFile) > -1 ? (this.preview = URL.createObjectURL(t),
                            this.previewShow = !0) : ["application/pdf"].indexOf(this.typeFile) > -1 ? (this.typeFile = t.type,
                            this.preview = "",
                            this.previewShow = !0) : (this.preview = "",
                            this.preview = !1,
                            this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE"))
                }
            },
            computed: {
                ...Object(o["b"])(["supportMessages", "modalFullscreen", "user", "tokens", "staticBase"])
            },
            watch: {
                supportMessages() {
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
                },
                modalFullscreen: {
                    deep: !0,
                    handler(t) {
                        "support" === t.page && setTimeout( () => {
                                let t = document.getElementById("support-messages");
                                t.scrollTop = t.scrollHeight
                            }
                            , 300)
                    }
                }
            }
        }
            , jv = Hv
            , qv = (s("3dee"),
            y(jv, Ev, Uv, !1, null, "1a172cf6", null))
            , Rv = qv.exports
            , Wv = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "message",
                class: "from-" + (t.message.manager_id ? "manager" : "client")
            }, [t.message.manager_id ? e("div", {
                staticClass: "avatar"
            }, [e("img", {
                attrs: {
                    src: t.favicon,
                    alt: ""
                }
            })]) : t._e(), e("div", {
                staticClass: "text"
            }, [t.message.manager_id ? e("span", {
                staticClass: "agent label__large"
            }, [t._v("Agent")]) : t._e(), e("div", {
                staticClass: "text-content body__medium"
            }, [e("div", {
                domProps: {
                    innerHTML: t._s(t.convertText(t.message.text))
                }
            }), [".jpg", ".png", "jpeg"].indexOf(t.message.file.slice(-4)) > -1 ? e("div", {
                staticClass: "pic",
                on: {
                    click: function(e) {
                        return t.openImg(t.restEndpoint + "/kyc/document/" + t.message.file)
                    }
                }
            }, [e("img", {
                attrs: {
                    src: t.restEndpoint + "/kyc/document/" + t.message.file
                }
            })]) : t._e(), ".pdf" === t.message.file.slice(-4) ? e("a", {
                staticClass: "pdf",
                attrs: {
                    href: t.restEndpoint + "/kyc/document/" + t.message.file,
                    target: "_blank"
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("attach_file")]), t._v(" PDF attachment ")]) : t._e()]), e("div", {
                staticClass: "footer"
            }, [e("div", {
                staticClass: "time"
            }, [t._v(t._s(new Date(1e3 * t.message.time_created).toLocaleTimeString([], {
                hour: "2-digit",
                minute: "2-digit",
                hour12: !0
            })))])])])])
        }
            , zv = []
            , Gv = {
            name: "MessageBox",
            props: {
                message: {
                    type: Object,
                    default: () => {}
                }
            },
            data() {
                return {
                    restEndpoint: pt["ub"],
                    favicon: pt["L"]
                }
            },
            methods: {
                convertText(t) {
                    let e = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/gi;
                    return t.replace(e, t => '<a style="color: var(--white); word-break: break-word;" target="_blank" href="' + t + '">' + t + "</a>")
                },
                openImg(t) {
                    this.path[0] = t,
                        this.toggler = !this.toggler
                }
            }
        }
            , Yv = Gv
            , Zv = (s("7ff1"),
            y(Yv, Wv, zv, !1, null, "8608da2e", null))
            , Jv = Zv.exports
            , Kv = {
            name: "LiveChat",
            components: {
                MessageBox: Jv,
                ChatBar: Rv,
                MessageChipsList: Vv
            },
            mounted() {
                setInterval( () => {
                        "support" === this.modalFullscreen.page && this.$store.dispatch(r["R"])
                    }
                    , 3e3),
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
            },
            data() {
                return {
                    ddOver: !1,
                    toggler: !1,
                    staticBase: pt["Cb"],
                    restEndpoint: pt["ub"],
                    messageChips: [{
                        title: "Account Balance",
                        chips: ["Why can’t I place a trade?", "How do I deposit funds?"]
                    }, {
                        title: "Trading Actions",
                        chips: ["How do I short sell?", "How can I cancel a trade?", "What is the minimum trade amount?"]
                    }, {
                        title: "Market Info",
                        chips: ["Where can I see market trends?", "What are the top gainers today?"]
                    }, {
                        title: "Security and Settings",
                        chips: ["How do I change my password?", "What are the security features?", "How do I update my account info?"]
                    }]
                }
            },
            methods: {
                over(t) {
                    this.ddOver = t
                },
                addFile(t) {
                    if (this.ddOver = !1,
                        !t.dataTransfer.files)
                        return;
                    let e = new FormData;
                    e.append("file", t.dataTransfer.files[0]),
                        this.$store.dispatch(r["e"], e)
                },
                send(t) {
                    if (t.trim()) {
                        if (0 === this.user.enable_chat)
                            return this.$store.commit(n["V"], this.tokens.errors.CHAT_DISABLED),
                                t = "",
                                this.$refs.file.value = "",
                                this.preview = "",
                                void (this.previewShow = !1);
                        if (t && this.$store.dispatch(r["S"], t),
                            this.$refs.file.files[0])
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(this.$refs.file.files[0].type) > -1) {
                                let t = new FormData;
                                t.append("file", this.$refs.file.files[0]),
                                    this.$store.dispatch(r["e"], t)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE");
                        this.$refs.file.value = "",
                            this.preview = "",
                            this.previewShow = !1
                    }
                },
                copy(t) {
                    navigator.clipboard.writeText(t).then( () => {
                            this.$store.commit(n["U"], "Message copied to clipboard")
                        }
                    )
                }
            },
            computed: {
                ...Object(o["b"])(["supportMessages", "user", "modalFullscreen"])
            }
        }
            , Xv = Kv
            , Qv = (s("faed"),
            y(Xv, xv, Mv, !1, null, "551176d2", null))
            , tf = Qv.exports
            , ef = {
            name: "LiveChatPage",
            components: {
                LiveChat: tf,
                BasePageTitle: Tp
            }
        }
            , sf = ef
            , af = (s("6887"),
            y(sf, kv, Sv, !1, null, "a93614f8", null))
            , of = af.exports
            , nf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                on: {
                    click: function(e) {
                        t.activeSelect = !1
                    }
                }
            }, [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.savings.toUpperCase()) + " ")]), e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenSavings.detailedInformation.toUpperCase()) + " ")])]), e("div", {
                staticClass: "inner"
            }, [e("div", {
                staticClass: "savings fs"
            }, [e("div", {
                staticClass: "savings-available fs"
            }, t._l(t.stakingCurrencies, (function(s) {
                    return e("div", {
                        key: s.currency,
                        staticClass: "item"
                    }, [e("header", {
                        on: {
                            click: function(e) {
                                t.currencyChosen = t.currencyChosen === s.currency ? "" : s.currency
                            }
                        }
                    }, [e("div", {
                        staticClass: "image"
                    }, [e("img", {
                        attrs: {
                            src: t.staticBase + `currencies/${s.currency}.png`
                        }
                    })]), e("div", {
                        staticClass: "name"
                    }, [t._v(t._s(s.currency))]), e("div", {
                        staticClass: "rates"
                    }, [t._v(t._s(s.pct_0 && s.pct_365 ? `${s.pct_0.toFixed(1)} - ${s.pct_365.toFixed(1)} %` : "0 %"))]), e("i", {
                        staticClass: "material-icons",
                        class: {
                            active: s.currency === t.currencyChosen
                        }
                    }, [t._v(t._s(t.currencyChosen === s.currency ? "expand_less" : "expand_more"))])]), e("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: s.currency === t.currencyChosen,
                            expression: "staking.currency === currencyChosen"
                        }],
                        staticClass: "periods fs"
                    }, t._l(t.periods, (function(a) {
                            return e("div", {
                                key: a,
                                staticClass: "period",
                                class: {
                                    active: a === t.periodChosen
                                },
                                on: {
                                    click: function(e) {
                                        t.periodChosen = a
                                    }
                                }
                            }, [e("div", {
                                staticClass: "radio"
                            }), e("input", {
                                directives: [{
                                    name: "model",
                                    rawName: "v-model",
                                    value: t.periodChosen,
                                    expression: "periodChosen"
                                }],
                                attrs: {
                                    type: "radio",
                                    hidden: ""
                                },
                                domProps: {
                                    value: a,
                                    checked: t._q(t.periodChosen, a)
                                },
                                on: {
                                    change: function(e) {
                                        t.periodChosen = a
                                    }
                                }
                            }), e("span", [t._v(t._s(t.tokens.fullScreenSavings[a]))]), e("span", {
                                staticClass: "rate"
                            }, [t._v(t._s(s[a].toFixed(1)) + "%")])])
                        }
                    )), 0)])
                }
            )), 0), t.aspinDesign ? e("div", {
                staticClass: "calculations fs"
            }, [t.currencyChosen && t.periodChosen ? t._e() : e("div", {
                staticClass: "fs-please"
            }, [t._v(" " + t._s(t.tokens.fullScreenSavings.pleaseSelect) + " ")]), t.currencyChosen && t.periodChosen ? e("div", {
                staticClass: "lines fs"
            }, [e("div", {
                staticClass: "pad"
            }, [e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.currencyChosen))]), e("div", {
                staticClass: "img-content"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + `currencies/${t.currencyChosen}.png`
                }
            }), t._v(" " + t._s(t.currencyChosen) + " ")])]), e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.currentTime))]), t._v(" " + t._s(new Date(t.time).toLocaleString()) + " ")]), e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.releaseTime))]), t._v(" " + t._s(new Date(t.time + 864e5 * t.periodChosen.split("_")[1]).toLocaleString()) + " ")]), e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.periodChosen))]), t._v(" " + t._s(t.tokens.fullScreenSavings[t.periodChosen]) + " ")])]), e("div", {
                staticClass: "bottom-pad"
            }, [e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.yourRate))]), e("span", {
                staticClass: "aspin-green"
            }, [t._v(t._s(t.stakingCurrencies[t.currencyChosen][t.periodChosen].toFixed(1)) + "%")])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "pct_0" !== t.periodChosen,
                    expression: "periodChosen !== 'pct_0'"
                }],
                staticClass: "pad-item"
            }, [e("h2", [t._v(t._s(t.tokens.fullScreenSavings.yourEarnings))]), e("div", {
                staticClass: "img-content"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + `currencies/${t.currencyChosen}.png`
                }
            }), t._v(" " + t._s((t.amountChosen * t.stakingCurrencies[t.currencyChosen][t.periodChosen] * t.periodChosen.split("_")[1] / 36500).toFixed(2)) + " ")])])]), e("div", {
                staticClass: "send-info"
            }, [e("div", {
                staticClass: "info-item"
            }, [e("label", [t._v(t._s(t.tokens.fullScreenSavings.accountFrom))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.accountChosenId,
                    expression: "accountChosenId"
                }],
                staticClass: "form-control fs",
                class: {
                    activeSelect: t.activeSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.activeSelect = !t.activeSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.accountChosenId = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.accounts, (function(s) {
                    return e("option", {
                        key: s.id,
                        domProps: {
                            value: s.id
                        }
                    }, [t._v(" " + t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance ? s.balance.toFixed(s.precision) : ")") + " ")])
                }
            )), 0)]), e("div", {
                staticClass: "info-item"
            }, [e("div", [t._v(t._s(t.tokens.fullScreenSavings.enterAmount) + " (" + t._s(t.tokens.fullScreenSavings.in) + " " + t._s(t.currencyChosen) + ")")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amountChosen,
                    expression: "amountChosen"
                }],
                staticClass: "form-control amount fs img",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.amountChosen
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amountChosen = e.target.value)
                    }
                }
            })])]), e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.openSavingsAccount
                }
            }, [t._v(t._s(t.tokens.fullScreenSavings.openAndInvest) + " " + t._s("standexcapital" === this.brand ? "" : t.currencySign(t.currencyChosen) + Number(t.amountChosen || 0).toFixed(2)))])]) : t._e()]) : e("div", {
                staticClass: "calculations fs"
            }, [t.currencyChosen && t.periodChosen ? t._e() : e("div", {
                staticClass: "fs-please"
            }, [t._v(" " + t._s(t.tokens.fullScreenSavings.pleaseSelect) + " ")]), t.currencyChosen && t.periodChosen ? e("div", {
                staticClass: "lines fs"
            }, [e("div", {
                staticClass: "lines-content"
            }, [e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.currentTime) + ":")]), e("strong", [t._v(t._s(new Date(t.time).toLocaleString()))])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "pct_0" !== t.periodChosen,
                    expression: "periodChosen !== 'pct_0'"
                }]
            }, [e("span", [t._v(t._s(t.tokens.fullScreenSavings.releaseTime) + ":")]), e("strong", [t._v(t._s(new Date(t.time + 864e5 * t.periodChosen.split("_")[1]).toLocaleString()))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.currencyChosen) + ":")]), e("strong", [t._v(t._s(t.currencyChosen))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.periodChosen) + ":")]), e("strong", [t._v(t._s(t.tokens.fullScreenSavings[t.periodChosen]))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.yourRate) + ":")]), e("strong", {
                staticClass: "rate"
            }, [t._v(t._s(t.stakingCurrencies[t.currencyChosen][t.periodChosen].toFixed(1)) + "%")])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "pct_0" !== t.periodChosen,
                    expression: "periodChosen !== 'pct_0'"
                }]
            }, [e("span", [t._v(t._s(t.tokens.fullScreenSavings.yourEarnings) + ":")]), e("strong", [t._v(t._s(t.currencySign(t.currencyChosen)) + " " + t._s((t.amountChosen * t.stakingCurrencies[t.currencyChosen][t.periodChosen] * t.periodChosen.split("_")[1] / 36500).toFixed(2)))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.accountFrom) + ":")]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.accountChosenId,
                    expression: "accountChosenId"
                }],
                staticClass: "form-control fs",
                class: {
                    activeSelect: t.activeSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.activeSelect = !t.activeSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.accountChosenId = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.accounts, (function(s) {
                    return e("option", {
                        key: s.id,
                        domProps: {
                            value: s.id
                        }
                    }, [t._v(" " + t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance ? s.balance.toFixed(s.precision) : ")") + " ")])
                }
            )), 0)]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.enterAmount) + " (" + t._s(t.tokens.fullScreenSavings.in) + " " + t._s(t.currencyChosen) + "):")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amountChosen,
                    expression: "amountChosen"
                }],
                staticClass: "form-control amount fs img",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.amountChosen
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amountChosen = e.target.value)
                    }
                }
            })])]), e("div", [e("span"), e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.openSavingsAccount
                }
            }, [t._v(t._s(t.tokens.fullScreenSavings.openAndInvest) + " " + t._s("standexcapital" === this.brand ? "" : t.currencySign(t.currencyChosen) + Number(t.amountChosen || 0).toFixed(2)))])])]) : t._e()])]), e("div", {
                staticClass: "savings-open"
            }, [e("div", {
                staticClass: "savings-items fs"
            }, t._l(t.stakingAccounts, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "item"
                    }, [e("div", {
                        staticClass: "item-header"
                    }, [e("div", {
                        staticClass: "item-left"
                    }, [e("div", {
                        staticClass: "image"
                    }, [e("img", {
                        attrs: {
                            src: t.staticBase + `currencies/${s.currency}.png`
                        }
                    })]), e("div", {
                        staticClass: "name"
                    }, [t._v(t._s(s.currency))])]), e("div", {
                        staticClass: "rate"
                    }, [t._v(t._s(s.annual_pct.toFixed(1)) + "%")])]), e("div", {
                        staticClass: "details fs"
                    }, [e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.investment) + ":")]), e("strong", [t._v(t._s(t.currencySign(s.currency) + s.balance ? s.balance.toFixed(2) : ""))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.period) + ":")]), e("strong", [t._v(t._s(t.tokens.fullScreenSavings["pct_" + s.period]))])]), 0 != s.period ? [e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.daysTotal) + ":")]), e("strong", [t._v(t._s(s.period) + " " + t._s(t.tokens.fullScreenSavings.days))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.finalEarnings) + ":")]), e("strong", [t._v(t._s(t.currencySign(s.currency) + (s.balance * s.annual_pct * s.period / 36500).toFixed(2)))])])] : t._e(), s.period >= 0 ? [e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.created) + ":")]), e("strong", [t._v(t._s(t.timeToString(1e3 * s.created).split(" ")[0]))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.releaseTime) + ":")]), e("strong", [t._v(t._s(s.period > 0 ? t.timeToString(1e3 * s.created + 24 * s.period * 3600 * 1e3).split(" ")[0] : "-"))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.daysElapsed) + ":")]), e("strong", [t._v(t._s(Math.floor((t.time / 1e3 - s.created) / 86400)) + " " + t._s(t.tokens.fullScreenSavings.days))])]), e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.earnings) + ":")]), e("strong", [t._v(t._s(t.currencySign(s.currency) + (s.balance * s.annual_pct * (t.time / 1e3 - s.created) / 31536e5).toFixed(6)))])])] : t._e(), 0 != s.period ? e("div", [e("span", [t._v(t._s(t.tokens.fullScreenSavings.fundsReleasedIn) + ":")]), e("strong", [t._v(t._s(s.period - Math.floor((t.time / 1e3 - s.created) / 86400)) + " " + t._s(t.tokens.fullScreenSavings.days))])]) : t._e()], 2), e("div", [e("button", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: 0 == s.period,
                            expression: "account.period == 0"
                        }],
                        staticClass: "fs-normal",
                        on: {
                            click: function(e) {
                                return t.claim(s.id)
                            }
                        }
                    }, [t._v(t._s(t.tokens.fullScreenSavings.claim))])]), 0 != s.period ? e("div", {
                        staticClass: "progressBar"
                    }, [e("div", {
                        staticClass: "empty"
                    }, [e("div", {
                        staticClass: "filled",
                        style: {
                            width: t.calcFilledPercent(s)
                        }
                    })])]) : t._e()])
                }
            )), 0)])])])
        }
            , rf = []
            , lf = {
            name: "Savings",
            data() {
                return {
                    activeSelect: !1,
                    brand: pt["e"],
                    periods: ["pct_0", "pct_30", "pct_90", "pct_180", "pct_365"],
                    periodChosen: "pct_0",
                    currencyChosen: "",
                    accountChosenId: 0,
                    amountChosen: "0",
                    time: "",
                    minDeposit: 0,
                    aspinDesign: pt["b"]
                }
            },
            mounted() {
                setInterval( () => {
                        this.time = Date.now()
                    }
                    , 1e3)
            },
            methods: {
                currencySign: l["e"],
                timeToString: l["o"],
                openSavingsAccount() {
                    this.amountChosen < this.minDeposit ? this.$store.commit(n["V"], this.tokens.errors.LOCAL_MIN_STAKING + this.minDeposit) : (this.$store.dispatch(r["Q"], {
                        currency: this.currencyChosen,
                        amount: this.amountChosen,
                        period: this.periodChosen.split("_")[1],
                        account_from: this.accountChosenId
                    }),
                        this.currencyChosen = "",
                        this.periodChosen = "")
                },
                claim(t) {
                    this.$store.dispatch(r["P"], {
                        account_id: t
                    })
                },
                calcFilledPercent(t) {
                    let e = 5
                        , s = e;
                    if (t.period) {
                        let a = (this.time / 1e3 - t.created) / 86400
                            , i = 100 * Math.floor(a / t.period);
                        s = (100 - e) / 100 * i + e
                    }
                    return s + "%"
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "symbols", "accounts", "stakingAccounts", "stakingCurrencies", "staticBase"])
            },
            watch: {
                currencyChosen(t) {
                    console.log("fired watcher currencyChosen with val=" + t);
                    for (let e in this.stakingCurrencies)
                        e === t && (this.minDeposit = this.stakingCurrencies[e].min_deposit,
                            this.amountChosen = this.minDeposit);
                    if (t && this.periodChosen && !this.accountChosenId)
                        for (let e in this.accounts) {
                            let t = this.accounts[e];
                            if ("cfd" === t.product)
                                return void (this.accountChosenId = t.id)
                        }
                },
                periodChosen(t) {
                    if (t && this.currencyChosen && !this.accountChosenId)
                        for (let e in this.accounts) {
                            let t = this.accounts[e];
                            if ("cfd" === t.product)
                                return void (this.accountChosenId = t.id)
                        }
                }
            }
        }
            , cf = lf
            , df = (s("14a6"),
            y(cf, nf, rf, !1, null, "bc0db9ac", null))
            , uf = df.exports
            , mf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "page setting"
            }, [e("BasePageTitle", {
                attrs: {
                    title: "Settings"
                }
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("UpdatePassword")]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("TwoFactorProtection")]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                staticClass: "lang-panel",
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("PlatformLanguage")]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                staticClass: "currency-panel",
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("DashboardCurrency")]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("DarkMode")]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , pf = []
            , hf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "update-password"
            }, [e("BaseIconTitle", {
                attrs: {
                    title: t.tokens.fullScreenSettings.updatePassword,
                    "material-icon": "password"
                }
            }), e("BaseInput", {
                attrs: {
                    title: t.tokens.fullScreenSettings.currentPassword,
                    type: "password"
                },
                model: {
                    value: t.currentPassword,
                    callback: function(e) {
                        t.currentPassword = e
                    },
                    expression: "currentPassword"
                }
            }), e("BaseInput", {
                attrs: {
                    title: t.tokens.fullScreenSettings.newPassword,
                    type: "password"
                },
                model: {
                    value: t.newPassword,
                    callback: function(e) {
                        t.newPassword = e
                    },
                    expression: "newPassword"
                }
            }), e("BaseInput", {
                attrs: {
                    title: t.tokens.fullScreenSettings.confirmNewPassword,
                    type: "password"
                },
                model: {
                    value: t.confirmNewPassword,
                    callback: function(e) {
                        t.confirmNewPassword = e
                    },
                    expression: "confirmNewPassword"
                }
            }), e("div", {
                staticClass: "change-password"
            }, [e("BaseButton", {
                attrs: {
                    "button-text": t.tokens.fullScreenSettings.changePassword,
                    "button-style": "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.changePassword()
                    }
                }
            })], 1)], 1)
        }
            , vf = []
            , ff = function() {
            var t = this
                , e = t._self._c;
            return e("h3", {
                staticClass: "icon-title title__medium"
            }, [t.$slots["icon"] ? t._t("icon") : e("span", {
                staticClass: "material-symbols-outlined"
            }, [t._v(t._s(t.materialIcon))]), t._v(" " + t._s(t.title) + " ")], 2)
        }
            , gf = []
            , bf = {
            name: "BaseIconTitle",
            props: {
                title: {
                    type: String
                },
                materialIcon: {
                    type: String
                }
            }
        }
            , yf = bf
            , _f = (s("d923"),
            y(yf, ff, gf, !1, null, "1c388538", null))
            , Cf = _f.exports
            , wf = {
            name: "UpdatePassword",
            components: {
                BaseButton: Ae,
                BaseInput: er,
                BaseIconTitle: Cf
            },
            data() {
                return {
                    currentPassword: "",
                    newPassword: "",
                    confirmNewPassword: ""
                }
            },
            computed: {
                ...Object(o["b"])(["tokens"])
            },
            methods: {
                changePassword() {
                    this.newPassword === this.confirmNewPassword ? (this.$store.dispatch(r["B"], {
                        old_password: this.currentPassword.trim(),
                        new_password: this.newPassword.trim()
                    }),
                        this.currentPassword = "",
                        this.newPassword = "",
                        this.confirmNewPassword = "") : this.$store.commit(n["V"], "LOCAL_PASSWORDS_NOT_MATCH")
                }
            }
        }
            , kf = wf
            , Sf = (s("1cfb"),
            y(kf, hf, vf, !1, null, "6dfef810", null))
            , xf = Sf.exports
            , Mf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "two-factor-protection"
            }, [e("BaseIconTitle", {
                attrs: {
                    title: "2-factor Protection",
                    "material-icon": "qr_code_2_add"
                }
            }), e("div", {
                staticClass: "qr-desc"
            }, [e("h5", {
                staticClass: "body__medium"
            }, [t._v(" " + t._s(t.user.otp ? "Google 2-factor authenticator is active" : "Activate code for Google Autenticator") + " ")]), e("p", {
                staticClass: "body__small desc"
            }, [t._v(" " + t._s(t.user.otp ? "If you wish to disable protection, enter the authenticator app code" : "Scan or manually enter the QR code in Google 2FA to add a token") + " ")]), t.user.otp ? t._e() : e("div", {
                staticClass: "qr-panel"
            }, [e("div", {
                staticClass: "qr"
            }, [e("QrcodeVue", {
                attrs: {
                    value: t.otpEnableData.otpauth_url,
                    size: 100
                }
            })], 1), e("div", {
                staticClass: "qr-info"
            }, [e("h6", {
                staticClass: "label__medium"
            }, [t._v("QR Code")]), e("p", {
                staticClass: "code body__extrasmall"
            }, [t._v(t._s(t.otpEnableData.base32))]), e("BaseButtonSmall", {
                staticClass: "copy",
                attrs: {
                    "button-text": "Copy Code",
                    "button-style": "tonal-secondary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.copy(t.otpEnableData.base32)
                    }
                }
            })], 1)])]), e("div", {
                staticClass: "activate-desc"
            }, [t.user.otp ? t._e() : e("h5", {
                staticClass: "body__medium"
            }, [t._v("Activate Authenticator and enter a generated code in field below")]), e("BaseInput", {
                attrs: {
                    info: "Enter the 6-digit code generated",
                    type: "password"
                },
                model: {
                    value: t.codeCheck,
                    callback: function(e) {
                        t.codeCheck = e
                    },
                    expression: "codeCheck"
                }
            })], 1), e("div", {
                staticClass: "activate"
            }, [e("BaseButton", {
                attrs: {
                    "button-text": t.user.otp ? "Disable Two-Factor Protection" : "Activate 2FA Protection",
                    "button-style": "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.makeAction.apply(null, arguments)
                    }
                }
            })], 1)], 1)
        }
            , Af = []
            , Df = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "button-small",
                class: t.buttonStyle
            }, [e("div", {
                staticClass: "state-layer"
            }, [e("span", {
                staticClass: "label__medium"
            }, [t._v(t._s(t.buttonText))]), t.icon ? e("span", {
                staticClass: "icon"
            }, [t._v(" icon ")]) : t._e()])])
        }
            , Pf = []
            , Tf = {
            name: "BaseButtonSmall",
            props: {
                buttonText: {
                    type: String
                },
                icon: {
                    type: String
                },
                buttonStyle: {
                    type: String
                }
            }
        }
            , Lf = Tf
            , If = (s("cb49"),
            y(Lf, Df, Pf, !1, null, "64043f34", null))
            , Ff = If.exports
            , Of = {
            name: "TwoFactorProtection",
            components: {
                BaseButton: Ae,
                BaseInput: er,
                QrcodeVue: tl,
                BaseButtonSmall: Ff,
                BaseIconTitle: Cf
            },
            data() {
                return {
                    qrTitle: pt["sb"],
                    qrTitleBrand: pt["rb"],
                    code: "",
                    codeCheck: ""
                }
            },
            computed: {
                ...Object(o["b"])(["otpEnableData", "user"])
            },
            methods: {
                copy(t) {
                    console.log(t),
                        navigator.clipboard.writeText(t)
                },
                makeAction() {
                    this.user.otp ? this.disableOtp() : this.activateOtp()
                },
                activateOtp() {
                    this.$store.dispatch(r["y"], {
                        code: this.codeCheck
                    }),
                        this.codeCheck = ""
                },
                disableOtp() {
                    this.$store.dispatch(r["A"], {
                        code: this.codeCheck
                    }),
                        this.codeCheck = ""
                }
            },
            watch: {
                otpEnableData(t) {
                    this.qrTitle && (t.otpauth_url = t.otpauth_url.replace(this.qrTitleBrand, this.qrTitle)),
                        this.code = t.base32
                }
            }
        }
            , Bf = Of
            , Nf = (s("375e"),
            y(Bf, Mf, Af, !1, null, "d1a00d50", null))
            , $f = Nf.exports
            , Vf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "dark-mode"
            }, [e("BaseIconTitle", {
                attrs: {
                    title: "Dark mode",
                    "material-icon": "dark_mode"
                }
            }), e("BaseSwitch", {
                nativeOn: {
                    click: function(e) {
                        return t.changeTheme()
                    }
                },
                model: {
                    value: t.mode,
                    callback: function(e) {
                        t.mode = e
                    },
                    expression: "mode"
                }
            })], 1)
        }
            , Ef = []
            , Uf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "switch",
                class: {
                    active: t.state
                },
                on: {
                    click: function(e) {
                        return t.update()
                    }
                }
            })
        }
            , Hf = []
            , jf = {
            name: "BaseSwitch",
            props: {
                value: {
                    type: [Number, Boolean]
                }
            },
            data() {
                return {
                    state: this.value
                }
            },
            methods: {
                update() {
                    this.state = !this.state,
                        this.$emit("input", this.state)
                }
            }
        }
            , qf = jf
            , Rf = (s("d517"),
            y(qf, Uf, Hf, !1, null, "6ef02c8a", null))
            , Wf = Rf.exports
            , zf = {
            name: "DarkMode",
            components: {
                BaseSwitch: Wf,
                BaseIconTitle: Cf
            },
            data() {
                return {
                    mode: !0
                }
            },
            computed: {
                ...Object(o["b"])(["lightTheme"])
            },
            methods: {
                changeTheme() {
                    this.$store.commit(n["pb"], !this.lightTheme),
                        localStorage.setItem("theme", this.lightTheme ? "white" : "black"),
                        localStorage.setItem("tradingview.current_theme.name", this.lightTheme ? "Light" : pt["Lb"]);
                    let t = this.lightTheme ? {
                        ...this.themeColors,
                        "background-dark": "#fff",
                        line: "#fff"
                    } : {
                        ...this.themeColors,
                        "background-dark": pt["Ib"],
                        line: pt["Kb"]
                    };
                    this.$store.commit(n["sb"], t),
                    document.body.classList.contains("light-theme") && document.body.classList.remove("light-theme"),
                    this.lightTheme && document.body.classList.add("light-theme")
                }
            }
        }
            , Gf = zf
            , Yf = (s("518b"),
            y(Gf, Vf, Ef, !1, null, "b0a55b6c", null))
            , Zf = Yf.exports
            , Jf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "language",
                on: {
                    click: function(e) {
                        return t.toggler()
                    }
                }
            }, [e("BaseIconTitle", {
                attrs: {
                    title: "Language",
                    "material-icon": "language"
                }
            }), e("BaseSelectModalBox", {
                attrs: {
                    placeholder: t.rawTokens[t.langActive] ? t.rawTokens[t.langActive]._name : "",
                    options: Object.entries(t.languages).map( ([e,s]) => ({
                        key: s,
                        title: t.rawTokens[s] ? t.rawTokens[s]._name : ""
                    })),
                    state: t.state
                },
                on: {
                    update: t.changeLang
                },
                scopedSlots: t._u([{
                    key: "option",
                    fn: function({option: s}) {
                        return [e("div", {
                            staticClass: "flag fs small-flag",
                            class: "flag-" + s.key
                        }), e("div", {
                            staticClass: "name"
                        }, [t._v(t._s(s.title))])]
                    }
                }]),
                model: {
                    value: t.lang,
                    callback: function(e) {
                        t.lang = e
                    },
                    expression: "lang"
                }
            })], 1)
        }
            , Kf = []
            , Xf = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "menu"
            }, [e("div", {
                staticClass: "placeholder"
            }, [e("p", {
                staticClass: "active-item body__large"
            }, [t._v(t._s(t.placeholder))]), e("span", {
                staticClass: "material-symbols-outlined"
            }, [t._v("arrow_right")])]), t.state ? e("div", {
                staticClass: "modal-menu-wrapper"
            }, [e("div", {
                staticClass: "modal-title"
            }, [e("div", [e("i", {
                staticClass: "material-icons close arrow-icon"
            }, [t._v(t._s("arrow_back"))]), e("h4", {
                staticClass: "title__large"
            }, [t._v(" " + t._s(t.options.some(t => "USD" === t.key) ? "Dashboard currency" : "Language") + " ")])]), t.isMobile ? e("BaseButton", {
                attrs: {
                    buttonText: "Save",
                    buttonStyle: "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.save.apply(null, arguments)
                    }
                }
            }) : t._e()], 1), e("div", {
                staticClass: "modal-inner"
            }, [t.state ? e("ul", {
                staticClass: "menu-list ElevationLight__2"
            }, t._l(t.options, (function(s, a) {
                    return e("li", {
                        key: a,
                        staticClass: "option body__medium",
                        class: {
                            active: s.key === t.selected.key
                        },
                        on: {
                            click: function(e) {
                                return t.select(e, s)
                            }
                        }
                    }, [t._t("option", (function() {
                            return [t._v(t._s(s.title))]
                        }
                    ), {
                        option: s
                    })], 2)
                }
            )), 0) : t._e()])]) : t._e()])
        }
            , Qf = []
            , tg = {
            name: "BaseSelectModalBox",
            components: {
                BaseButton: Ae
            },
            props: {
                placeholder: {
                    type: String,
                    default: ""
                },
                options: {
                    type: Array,
                    default: () => []
                },
                state: {
                    type: Boolean,
                    default: !1
                }
            },
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    selected: Object(l["h"])() ? this.options.find(t => t.title === this.placeholder) : {}
                }
            },
            methods: {
                select(t, e) {
                    this.isMobile ? (t.stopPropagation(),
                        this.selected = e) : this.$emit("update", e.key)
                },
                save() {
                    this.$emit("update", this.selected.key)
                }
            },
            watch: {
                state(t) {
                    t && this.isMobile && (this.selected = this.options.find(t => t.title === this.placeholder))
                }
            }
        }
            , eg = tg
            , sg = (s("00dc6"),
            y(eg, Xf, Qf, !1, null, "ff9b61f6", null))
            , ag = sg.exports
            , ig = {
            name: "PlatformLanguage",
            components: {
                BaseSelectModalBox: ag,
                BaseIconTitle: Cf
            },
            mixins: [I],
            computed: {
                lang: {
                    get() {
                        return this.langActive
                    },
                    set(t) {
                        this.$store.commit("SET_LANG_ACTIVE", t)
                    }
                },
                ...Object(o["b"])(["languages", "rawTokens", "langActive"])
            },
            methods: {
                changeLang(t) {
                    this.$store.commit(n["B"], t)
                }
            }
        }
            , og = ig
            , ng = (s("66d5"),
            y(og, Jf, Kf, !1, null, "6cce8658", null))
            , rg = ng.exports
            , lg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "currency",
                on: {
                    click: function(e) {
                        return t.toggler()
                    }
                }
            }, [e("BaseIconTitle", {
                attrs: {
                    title: "Dashboard currency",
                    "material-icon": "price_check"
                }
            }), e("BaseSelectModalBox", {
                attrs: {
                    placeholder: t.activeCurrency,
                    options: Object.entries(t.currencies).map( ([t,e]) => ({
                        key: e,
                        title: e || "USD"
                    })),
                    state: t.state
                },
                on: {
                    update: t.changeCurrency
                },
                scopedSlots: t._u([{
                    key: "option",
                    fn: function({option: s}) {
                        return [e("img", {
                            attrs: {
                                src: t.staticBase + `currencies/${s.key ? s.key : "USD"}.png`,
                                alt: ""
                            }
                        }), e("div", {
                            staticClass: "name"
                        }, [t._v(t._s(s.title))])]
                    }
                }])
            })], 1)
        }
            , cg = []
            , dg = {
            name: "DashboardCurrency",
            components: {
                BaseSelectModalBox: ag,
                BaseIconTitle: Cf
            },
            mixins: [I],
            data() {
                return {
                    staticBase: pt["Cb"]
                }
            },
            computed: {
                currency: {
                    get() {
                        return this.activeCurrency
                    },
                    set(t) {
                        this.$store.commit("SET_LANG_ACTIVE", t)
                    }
                },
                ...Object(o["b"])(["currencies", "activeCurrency"])
            },
            methods: {
                changeCurrency(t) {
                    localStorage.activeCurrency = t,
                        this.$store.commit(n["c"], t)
                }
            }
        }
            , ug = dg
            , mg = (s("dd3f"),
            y(ug, lg, cg, !1, null, "8e14bb42", null))
            , pg = mg.exports
            , hg = {
            name: "SettingPage",
            components: {
                DashboardCurrency: pg,
                PlatformLanguage: rg,
                DarkMode: Zf,
                TwoFactorProtection: $f,
                BasePanel: Rp,
                UpdatePassword: xf,
                BasePageTitle: Tp
            }
        }
            , vg = hg
            , fg = (s("58ac"),
            y(vg, mf, pf, !1, null, "e342561a", null))
            , gg = fg.exports
            , bg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "personal-information-page"
            }, [e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("div", {
                            staticClass: "title title__medium"
                        }, [t._v(t._s(t.tokens.fullScreen.personalInfo))]), e("UpdatePersonalInfo")]
                    },
                    proxy: !0
                }])
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("div", {
                            staticClass: "title title__medium"
                        }, [t._v(t._s("Profile Settings"))]), e("UpdatePersonalAvatar")]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , yg = []
            , _g = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "personal-information"
            }, [e("div", {
                staticClass: "personal-information-list"
            }, [e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.firstName))]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.firstname,
                    callback: function(e) {
                        t.$set(t.personal, "firstname", e)
                    },
                    expression: "personal.firstname"
                }
            })], 1), e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.firstName))]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.lastname,
                    callback: function(e) {
                        t.$set(t.personal, "lastname", e)
                    },
                    expression: "personal.lastname"
                }
            })], 1), t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email))]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.email,
                    callback: function(e) {
                        t.$set(t.personal, "email", e)
                    },
                    expression: "personal.email"
                }
            })], 1) : t._e(), t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email) + " 2")]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.email2,
                    callback: function(e) {
                        t.$set(t.personal, "email2", e)
                    },
                    expression: "personal.email2"
                }
            })], 1) : t._e(), e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.country))]), e("SearchCountrySelect", {
                attrs: {
                    value: t.personal.country
                },
                on: {
                    update: function(e) {
                        t.personal.country = e
                    }
                }
            })], 1), "stage" === t.brand ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.state))]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.state,
                    callback: function(e) {
                        t.$set(t.personal, "state", e)
                    },
                    expression: "personal.state"
                }
            })], 1) : t._e(), e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.address))]), e("BaseInput", {
                model: {
                    value: t.personal.address,
                    callback: function(e) {
                        t.$set(t.personal, "address", e)
                    },
                    expression: "personal.address"
                }
            })], 1), "stage" === t.brand ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.postcode))]), e("BaseInput", {
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                model: {
                    value: t.personal.postcode,
                    callback: function(e) {
                        t.$set(t.personal, "postcode", e)
                    },
                    expression: "personal.postcode"
                }
            })], 1) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone))]), e("BaseInput", {
                attrs: {
                    disabled: ""
                },
                model: {
                    value: t.personal.phone,
                    callback: function(e) {
                        t.$set(t.personal, "phone", e)
                    },
                    expression: "personal.phone"
                }
            })], 1) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "personal-information-item"
            }, [e("label", {
                staticClass: "item-name label__largeprominent"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone2))]), e("BaseInput", {
                attrs: {
                    disabled: ""
                },
                model: {
                    value: t.personal.phone2,
                    callback: function(e) {
                        t.$set(t.personal, "phone2", e)
                    },
                    expression: "personal.phone2"
                }
            })], 1) : t._e(), e("BaseButton", {
                staticClass: "personal-information-button",
                attrs: {
                    buttonText: "Save Changes",
                    buttonStyle: "filled-primary"
                },
                nativeOn: {
                    click: function(e) {
                        return t.savePersonal.apply(null, arguments)
                    }
                }
            })], 1)])
        }
            , Cg = []
            , wg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "search-country-select"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.searchedCountry,
                    expression: "searchedCountry"
                }],
                staticClass: "search-country-input body__large",
                attrs: {
                    placeholder: "Search country"
                },
                domProps: {
                    value: t.searchedCountry
                },
                on: {
                    focusout: function(e) {
                        return t.chooseCountry(t.searchedCountry)
                    },
                    input: function(e) {
                        e.target.composing || (t.searchedCountry = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("arrow_drop_down")]), e("BaseMenuList", {
                staticClass: "search-country-list",
                style: {
                    "max-height": 36 * t.maxShowed + 8 + "px",
                    display: t.countries.length > 0 ? "" : "none"
                },
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return t._l(t.countries, (function(s, a) {
                                return e("BaseMenuListItem", {
                                    key: a,
                                    class: {
                                        active: s === t.country
                                    },
                                    attrs: {
                                        tag: "li"
                                    },
                                    nativeOn: {
                                        mousedown: function(e) {
                                            return t.chooseCountry(s)
                                        }
                                    },
                                    scopedSlots: t._u([{
                                        key: "content",
                                        fn: function() {
                                            return [t._v(" " + t._s(s) + " ")]
                                        },
                                        proxy: !0
                                    }], null, !0)
                                })
                            }
                        ))
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , kg = []
            , Sg = {
            name: "SearchCountrySelect",
            components: {
                BaseMenuList: j,
                BaseMenuListItem: Y
            },
            props: {
                maxShowed: {
                    type: Number,
                    default: 5
                },
                value: {
                    type: String,
                    default: ""
                }
            },
            data() {
                return {
                    searchedCountry: this.vaildatePropsValue(this.value)
                }
            },
            computed: {
                countries() {
                    return Object.values(Object(l["b"])()).filter(t => t.toLowerCase().indexOf(this.searchedCountry.toLowerCase()) > -1)
                },
                country() {
                    return this.vaildatePropsValue(this.value)
                }
            },
            methods: {
                chooseCountry(t) {
                    if (console.log("mousedown", t),
                        Object.values(Object(l["b"])()).includes(t)) {
                        if (this.country === t)
                            return;
                        this.searchedCountry = t,
                            this.$emit("update", this.searchedCountry)
                    } else
                        this.searchedCountry = this.country
                },
                vaildatePropsValue(t) {
                    return Object.values(Object(l["b"])()).includes(t) ? t : ""
                }
            },
            watch: {
                value() {
                    this.searchedCountry = this.vaildatePropsValue(this.value)
                }
            }
        }
            , xg = Sg
            , Mg = (s("458f"),
            y(xg, wg, kg, !1, null, "0c754581", null))
            , Ag = Mg.exports
            , Dg = {
            name: "UpdatePersonalInfo",
            components: {
                BaseInput: er,
                SearchCountrySelect: Ag,
                BaseButton: Ae
            },
            data() {
                return {
                    personal: {
                        firstname: "",
                        lastname: "",
                        address: "",
                        country: "",
                        state: "",
                        postcode: "",
                        phone: "",
                        phone2: "",
                        email: "",
                        email2: ""
                    },
                    brand: pt["e"],
                    hideEmail: pt["N"]
                }
            },
            methods: {
                savePersonal() {
                    if (this.disableEditPersonalInfo)
                        return void this.$store.commit(n["V"], "This feature is disabled");
                    let t = {
                        phone2: this.personal.phone2,
                        email2: this.personal.email2,
                        lastname: this.personal.lastname,
                        firstname: this.personal.firstname,
                        address: this.personal.address,
                        country: this.personal.country
                    };
                    "stage" === this.brand && (t.state = this.personal.state,
                        t.postcode = this.personal.postcode),
                        this.$store.dispatch(r["E"], t)
                },
                hideLastSymbols(t, e) {
                    let s = t.substring(0, t.length - e)
                        , a = "";
                    for (let i = 0; i < e; i++)
                        a += "*";
                    return s + a
                }
            },
            computed: {
                ...Object(o["b"])(["user", "tokens", "variables"]),
                disableEditPersonalInfo() {
                    return !!parseInt(this.variables.CFD_DISABLE_EDIT_USER_INFO)
                }
            },
            watch: {
                user: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            this.personal[e] = t[e],
                            -1 !== ["swissiam", "profitrisecg", "grandcapitalcg", "fulbrightsl"].indexOf(pt["e"]) && "phone" === e && t[e] && (this.personal[e] = this.hideLastSymbols(t[e], 3))
                    }
                }
            }
        }
            , Pg = Dg
            , Tg = (s("adc0"),
            y(Pg, _g, Cg, !1, null, "b6a31db6", null))
            , Lg = Tg.exports
            , Ig = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "profile-settings"
            }, [e("div", {
                staticClass: "profile-settings-item"
            }, [e("div", {
                staticClass: "item-name label__largeprominent"
            }, [t._v("Avatar")]), e("div", {
                staticClass: "profile-settings-inner"
            }, [e("div", {
                staticClass: "profile-settings-avatar"
            }, [e("img", {
                class: {
                    hide: t.user.avatar
                },
                attrs: {
                    src: "" + (t.staticBase + "aspin-design/avatar.png"),
                    alt: ""
                }
            }), e("img", {
                class: {
                    hide: !t.user.avatar
                },
                attrs: {
                    src: t.user.avatar ? t.apiBase + "/avatar/" + t.user.avatar : ""
                }
            })]), e("div", {
                staticClass: "profile-settings-info body__extrasmall"
            }, [t._v(" The maximum file size is 5MB, and accepted formats are JPEG, PNG, or GIF ")]), e("div", {
                staticClass: "profile-settings-buttons"
            }, [e("UploadPhotoButton", {
                attrs: {
                    text: "Upload Photo",
                    type: "upload"
                }
            }), e("UploadPhotoButton", {
                attrs: {
                    text: "Delete Photo",
                    type: "danger"
                }
            })], 1)])])])
        }
            , Fg = []
            , Og = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "button-standard",
                class: {
                    danger: "danger" === t.type
                }
            }, ["upload" === t.type ? e("div", {
                staticClass: "state-layer"
            }, [t.text ? e("span", {
                staticClass: "label__small"
            }, [t._v(t._s(t.text))]) : t._e(), e("input", {
                attrs: {
                    type: "file"
                },
                on: {
                    change: t.documentSelected
                }
            })]) : e("div", {
                staticClass: "state-layer"
            }, [t.text ? e("span", {
                staticClass: "label__small"
            }, [t._v(t._s(t.text))]) : t._e()])])
        }
            , Bg = []
            , Ng = {
            name: "UploadPhotoButton",
            props: {
                text: {
                    type: String
                },
                type: {
                    type: String,
                    default: ""
                }
            },
            methods: {
                documentSelected(t) {
                    let e = new FormData;
                    e.append("file", t.target.files[0]),
                        this.$store.dispatch(r["f"], e),
                        t.target.value = ""
                }
            }
        }
            , $g = Ng
            , Vg = (s("4ca4"),
            y($g, Og, Bg, !1, null, "ea79aabe", null))
            , Eg = Vg.exports
            , Ug = {
            name: "UpdatePersonalAvatar",
            components: {
                UploadPhotoButton: Eg
            },
            data() {
                return {
                    apiBase: pt["ub"],
                    brand: pt["e"],
                    aspinDesign: pt["b"],
                    staticBase: pt["Cb"]
                }
            },
            computed: {
                ...Object(o["b"])(["user", "tokens"])
            }
        }
            , Hg = Ug
            , jg = (s("70f9"),
            y(Hg, Ig, Fg, !1, null, "78554d94", null))
            , qg = jg.exports
            , Rg = {
            name: "PersonalInformationPage",
            components: {
                BasePanel: Rp,
                UpdatePersonalInfo: Lg,
                UpdatePersonalAvatar: qg
            },
            computed: {
                ...Object(o["b"])(["tokens"])
            }
        }
            , Wg = Rg
            , zg = (s("6682"),
            y(Wg, bg, yg, !1, null, "d307be46", null))
            , Gg = zg.exports
            , Yg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "verification-page"
            }, [e("BasePageTitle", {
                attrs: {
                    title: "Verification"
                }
            }), e("BasePanel", {
                scopedSlots: t._u([{
                    key: "content",
                    fn: function() {
                        return [e("ProgressChipsList", {
                            attrs: {
                                categoriesItems: t.categoriesItems,
                                active: t.activeItem
                            },
                            on: {
                                update: e => t.changeActiveitem(e)
                            }
                        }), t._l(t.categoriesItems.filter(e => e.id === t.activeItem), (function(s) {
                                return e("div", {
                                    key: s.id,
                                    staticClass: "inner"
                                }, [e("div", {
                                    staticClass: "info",
                                    domProps: {
                                        innerHTML: t._s(t.infoText[t.activeItem])
                                    }
                                }), e("div", {
                                    staticClass: "update-document-list"
                                }, t._l(t.documentsData.filter(e => e.tabId === t.activeItem), (function(t, s) {
                                        return e("UpdateDocument", {
                                            key: "docData" + s,
                                            attrs: {
                                                document: t,
                                                idx: s
                                            }
                                        })
                                    }
                                )), 1)])
                            }
                        )), e("div", {
                            staticClass: "documents-table"
                        }, [e("div", {
                            staticClass: "table-title label__largeprominent"
                        }, [t._v(t._s(t.tokens.fullScreenVerification.documentsList))]), e("div", {
                            staticClass: "table-desc body__extrasmall"
                        }, [t._v("To complete the verification process for your account, please provide clear and legible copies of the following documents")]), e("UploadedDocumentList")], 1)]
                    },
                    proxy: !0
                }])
            })], 1)
        }
            , Zg = []
            , Jg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chips-list"
            }, t._l(t.categoriesItems, (function(s) {
                    return e("ProgressChipsListItem", {
                        key: s.id,
                        attrs: {
                            item: s,
                            active: s.id === t.active
                        },
                        on: {
                            update: e => t.$emit("update", e)
                        }
                    })
                }
            )), 1)
        }
            , Kg = []
            , Xg = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chips-list-item",
                class: {
                    active: t.active
                },
                on: {
                    click: function(e) {
                        return t.$emit("update", t.item.id)
                    }
                }
            }, [e("div", {
                staticClass: "title label__medium"
            }, [t._v(t._s(t.item.title))]), e("div", {
                staticClass: "inner body__extrasmall"
            }, [e("div", {
                staticClass: "progress-wrapper",
                class: 100 == t.precentCount ? "fullfield" : ""
            }, [e("svg", [e("circle"), e("circle", {
                style: {
                    "stroke-dashoffset": t.progressCalc(t.precentCount)
                }
            })]), e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("check")])]), e("div", [t._v(" uploaded " + t._s(t.item.uploadedCount) + "/" + t._s(t.item.documentCount))])])])
        }
            , Qg = []
            , tb = {
            name: "ProgressChipsListItem",
            props: {
                item: {
                    type: Object
                },
                active: {
                    type: Boolean
                }
            },
            methods: {
                progressCalc(t) {
                    const e = 294
                        , s = 255;
                    return e - t / 100 * (e - s)
                }
            },
            computed: {
                precentCount() {
                    return this.item.uploadedCount / this.item.documentCount * 100
                }
            }
        }
            , eb = tb
            , sb = (s("88ce"),
            y(eb, Xg, Qg, !1, null, "61493312", null))
            , ab = sb.exports
            , ib = {
            name: "ProgressChipsList",
            components: {
                ProgressChipsListItem: ab
            },
            props: {
                categoriesItems: {
                    type: Array,
                    default: () => [],
                    required: !0
                },
                active: {
                    type: String
                }
            }
        }
            , ob = ib
            , nb = (s("cfa6"),
            y(ob, Jg, Kg, !1, null, "13952412", null))
            , rb = nb.exports
            , lb = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "update-document-item"
            }, [e("div", {
                staticClass: "update-document-label label__mediumprominent"
            }, [t._v(t._s(t.document.text))]), t.isUploaded ? e("div", {
                staticClass: "update-document-drop uploaded"
            }, [t._m(1), e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("refresh")])]) : e("div", {
                staticClass: "update-document-drop",
                on: {
                    drop: function(e) {
                        return e.preventDefault(),
                            (e => t.addFile(e)).apply(null, arguments)
                    },
                    dragover: [function(t) {
                        t.preventDefault()
                    }
                        , function(e) {
                            return t.over(!0)
                        }
                    ],
                    dragenter: function(e) {
                        return t.over(!0)
                    },
                    dragleave: function(e) {
                        return t.over(!1)
                    }
                }
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("upload_file")]), t._m(0), e("input", {
                attrs: {
                    type: "file"
                },
                on: {
                    change: function(e) {
                        return t.documentSelected(e, t.document.type)
                    }
                }
            })]), e("div", {
                staticClass: "update-document-info body__extrasmall"
            }, [t._v("PDF, JPG, JPEG, PNG less than 10MB")])])
        }
            , cb = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "label__medium"
            }, [e("div", {
                staticClass: "update-document-button"
            }, [t._v(" Click to Upload ")]), e("span", [t._v("or drag and drop")])])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "label__small"
                }, [e("span", [t._v("File successfully added")]), e("span", [t._v("The verification status can be viewed in the list of uploaded documents")])])
            }
        ]
            , db = {
            name: "UpdateDocument",
            props: {
                document: {
                    type: Object
                },
                idx: {
                    type: Number
                }
            },
            computed: {
                isUploaded() {
                    return 0 === this.document.status || 1 === this.document.status
                }
            },
            methods: {
                addFile(t) {
                    if (this.document.over = !1,
                    !t.dataTransfer.files || -1 !== [0, 1].indexOf(this.document.status))
                        return;
                    let e = new FormData;
                    e.append("file", t.dataTransfer.files[0]),
                        e.append("data", JSON.stringify({
                            type: this.document.type
                        })),
                        this.$store.dispatch(r["q"], e)
                },
                over(t) {
                    this.document.over = t
                },
                documentSelected(t, e) {
                    let s = new FormData;
                    s.append("file", t.target.files[0]),
                        s.append("data", JSON.stringify({
                            type: e
                        })),
                        this.$store.dispatch(r["q"], s),
                        t.target.value = ""
                }
            }
        }
            , ub = db
            , mb = (s("5162"),
            y(ub, lb, cb, !1, null, "a4f7ef24", null))
            , pb = mb.exports
            , hb = function() {
            var t = this
                , e = t._self._c;
            return e("div", [t.documents.length ? e("div", {
                staticClass: "table-list"
            }, t._l(t.documents, (function(t) {
                    return e("UploadedDocumentItem", {
                        key: t.id,
                        attrs: {
                            document: t
                        }
                    })
                }
            )), 1) : e("div", {
                staticClass: "table-list empty-data"
            }, [e("i", {
                staticClass: "material-symbols-outlined"
            }, [t._v("find_in_page")]), t._v(" No documents uploaded yet ")])])
        }
            , vb = []
            , fb = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "table-list-item"
            }, [e("div", {
                staticClass: "item-left"
            }, [e("div", {
                staticClass: "document-category"
            }, [e("span", {
                staticClass: "label__medium"
            }, [t._v(t._s(t.getCategoryAndText(t.document.type).category))]), e("span", {
                staticClass: "label__mediumprominent"
            }, [t._v(t._s(1 === t.document.type ? "" : t.getCategoryAndText(t.document.type).text))])]), e("div", {
                staticClass: "document-time-upload body__extrasmall"
            }, [t._v(" " + t._s(t.tokens.fullScreenVerification.timeUploaded.toLowerCase()) + " " + t._s(new Date(1e3 * t.document.time_created).toLocaleString()) + " ")])]), e("div", {
                staticClass: "item-right"
            }, [e("BaseChip", {
                attrs: {
                    text: t.getChipData(t.document.status).text,
                    mode: t.getChipData(t.document.status).mode
                }
            }), e("div", {
                staticClass: "document-time-processed body__extrasmall"
            }, [t._v(" " + t._s(t.document.time_processed ? new Date(1e3 * t.document.time_processed).toLocaleString() : "-") + " ")])], 1)])
        }
            , gb = []
            , bb = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chip-inner label__small",
                class: {
                    danger: "danger" === t.mode,
                    success: "success" === t.mode
                }
            }, [t._v(" " + t._s(t.text) + " ")])
        }
            , yb = []
            , _b = {
            name: "BaseChip",
            props: {
                mode: {
                    type: String,
                    default: ""
                },
                text: {
                    type: String,
                    default: ""
                }
            }
        }
            , Cb = _b
            , wb = (s("e4d0"),
            y(Cb, bb, yb, !1, null, "541f33fd", null))
            , kb = wb.exports
            , Sb = {
            name: "UploadedDocumentItem",
            components: {
                BaseChip: kb
            },
            props: {
                document: {
                    type: Object
                }
            },
            computed: {
                ...Object(o["b"])(["tokens"])
            },
            methods: {
                getCategoryAndText(t) {
                    let e, s;
                    switch (t) {
                        case 0:
                            e = "Identify",
                                s = "Front Side";
                            break;
                        case 4:
                            e = "Identify",
                                s = "Back Side";
                            break;
                        case 1:
                            e = "Address",
                                s = "Front side of the document";
                            break;
                        case 2:
                            e = "Credit Card",
                                s = "Front Side";
                            break;
                        case 3:
                            e = "Credit Card",
                                s = "Back Side";
                            break;
                        case 5:
                            e = "Selfie",
                                s = "Front Side";
                            break
                    }
                    return {
                        category: e,
                        text: s
                    }
                },
                getChipData(t) {
                    let e, s;
                    switch (t) {
                        case 0:
                            e = "Pending";
                            break;
                        case 1:
                            e = "Approved",
                                s = "success";
                            break;
                        case 2:
                            e = "Declined",
                                s = "danger";
                            break
                    }
                    return {
                        text: e,
                        mode: s
                    }
                }
            }
        }
            , xb = Sb
            , Mb = (s("c487"),
            y(xb, fb, gb, !1, null, "1cf9675a", null))
            , Ab = Mb.exports
            , Db = {
            name: "UploadedDocumentList",
            components: {
                UploadedDocumentItem: Ab
            },
            computed: {
                ...Object(o["b"])(["documents", "tokens"])
            }
        }
            , Pb = Db
            , Tb = (s("5f36"),
            y(Pb, hb, vb, !1, null, "23e16421", null))
            , Lb = Tb.exports
            , Ib = {
            name: "PersonalInformationPage",
            components: {
                BasePageTitle: Tp,
                BasePanel: Rp,
                ProgressChipsList: rb,
                UpdateDocument: pb,
                UploadedDocumentList: Lb
            },
            data() {
                return {
                    kycDocuments: pt["V"],
                    newVerificationText: pt["lb"],
                    disableQuestions: pt["I"],
                    brand: pt["e"],
                    activeItem: "identify",
                    infoText: {
                        identify: "Government-issued photo ID (e.g., passport, driver's license , national ID card)<br />\n                    Residence permit (if applicable)<br />\n                    The document must be valid (not expired)<br />\n                    The full name, date of birth, and photograph must be visible.",
                        address: "Upload a recent utility bill, bank statement, or rental agreement issued within the last 3 months<br />\n                    Ensure your full name and current residential address are clearly visible.",
                        card: "Upload a copy of the front side of your credit card, ensuring the first six and last four digits are visible<br />\n                    Please cover the middle digits for security",
                        selfie: "Take and upload a selfie holding your ID next to your face<br />\n                    Ensure both your face and the ID are clearly visible"
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["documents", "tokens", "questions"]),
                documentsData() {
                    let t, e, s, a = [], i = this.documents, o = !1;
                    return this.kycDocuments.forEach(n => {
                            let r = i.filter(t => t.type === n);
                            r.sort( (t, e) => t.id - e.id);
                            let l = r[r.length - 1];
                            switch (t = l ? l.status : -1,
                                e = n,
                                e) {
                                case 0:
                                case 4:
                                    s = "identify";
                                    break;
                                case 1:
                                    s = "address";
                                    break;
                                case 2:
                                case 3:
                                    s = "card";
                                    break;
                                case 5:
                                    s = "selfie";
                                    break
                            }
                            let c = {
                                over: o,
                                status: t,
                                type: e,
                                tabId: s,
                                text: this.getCategoryAndText(e).text,
                                category: this.getCategoryAndText(e).category
                            };
                            a.push(c)
                        }
                    ),
                        a
                },
                categoriesItems() {
                    let t = [{
                        id: "identify",
                        title: "Identify",
                        documentCount: 0,
                        uploadedCount: 0
                    }, {
                        id: "address",
                        title: "Address",
                        documentCount: 0,
                        uploadedCount: 0
                    }, {
                        id: "card",
                        title: "Credit Card",
                        documentCount: 0,
                        uploadedCount: 0
                    }, {
                        id: "selfie",
                        title: "Your Selfie",
                        documentCount: 0,
                        uploadedCount: 0
                    }];
                    return this.documentsData.forEach(e => {
                            e.tabId === t[0].id ? (t[0].documentCount++,
                            1 !== e.status && 0 !== e.status || t[0].uploadedCount++) : e.tabId === t[1].id ? (t[1].documentCount++,
                            1 !== e.status && 0 !== e.status || t[1].uploadedCount++) : e.tabId === t[2].id ? (t[2].documentCount++,
                            1 !== e.status && 0 !== e.status || t[2].uploadedCount++) : e.tabId === t[3].id && (t[3].documentCount++,
                            1 !== e.status && 0 !== e.status || t[3].uploadedCount++)
                        }
                    ),
                        t.filter(t => t.documentCount > 0)
                }
            },
            methods: {
                sendAnswers() {
                    let t = [];
                    for (let e in this.questions)
                        t.push({
                            question_id: this.questions[e].id,
                            answer: this.questions[e].answer
                        });
                    qs["a"].post("/kyc/questions", {
                        answers: t
                    }).then( () => {
                            this.$store.commit(n["U"], "Answers have been saved")
                        }
                    )
                },
                changeActiveitem(t) {
                    this.activeItem = t
                },
                getCategoryAndText(t) {
                    let e, s;
                    switch (t) {
                        case 0:
                            e = "Identify",
                                s = "Front Side";
                            break;
                        case 4:
                            e = "Identify",
                                s = "Back Side";
                            break;
                        case 1:
                            e = "Address",
                                s = "Front side of the document";
                            break;
                        case 2:
                            e = "Credit Card",
                                s = "Front Side";
                            break;
                        case 3:
                            e = "Credit Card",
                                s = "Back Side";
                            break;
                        case 5:
                            e = "Selfie",
                                s = "Front Side";
                            break
                    }
                    return {
                        category: e,
                        text: s
                    }
                }
            }
        }
            , Fb = Ib
            , Ob = (s("3d6f"),
            y(Fb, Yg, Zg, !1, null, "7fbf3fac", null))
            , Bb = Ob.exports
            , Nb = {
            name: "Fullscreen",
            components: {
                BaseAutotraderButton: ui,
                BaseLogo: oi,
                SettingPage: gg,
                Dashboard: Vm,
                PersonalPage: Gg,
                Deposit: wp,
                WithdrawalPage: Oh,
                VerificationPage: Bb,
                AccountsPage: wv,
                Support: of,
                Savings: uf,
                HamburgerMenu: qe,
                BaseToggleIconButton: Bi
            },
            mounted() {
                this.lightTheme && document.body.classList.add("light-theme")
            },
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    logo: pt["ab"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    aspinDesign: pt["b"],
                    platesFolder: pt["ob"],
                    apiBase: pt["ub"],
                    showLang: !1,
                    hideLogo: pt["Q"],
                    whiteAspinTheme: pt["Pb"],
                    logoRedirectOff: pt["bb"]
                }
            },
            methods: {
                ...Object(o["c"])(["setLightTheme", "setThemeColors"]),
                close() {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    }),
                        setTimeout( () => {
                                this.$store.commit(n["F"], {
                                    hamburgerMenu: !1
                                })
                            }
                            , 0)
                },
                logout() {
                    this.$store.dispatch(r["x"])
                },
                showMenu() {
                    let t = this.modals.hamburgerMenu;
                    this.$store.commit(n["F"], {
                        hamburgerMenu: !t
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["user", "tokens", "modals", "modalFullscreen", "activeAccount", "languages", "rawTokens", "langActive", "verificationState", "staticBase", "lightTheme", "themeColors"]),
                logoComputed() {
                    return this.lightTheme ? this.logo.url.replace(/white/, "black") : this.logo.url
                },
                plate() {
                    let t = ["beginner", "student", "basic", "bronze", "bronze_plus", "silver", "silver_plus", "gold", "platinum", "platinum_plus", "vip", "top", "diamond", "islamic", "business", "enterprise", "regular", "arbitrage", "basicml", "shift", "custom"].includes(this.activeAccount.group) ? this.activeAccount.group : "main";
                    return this.staticBase + this.platesFolder + "/" + t + "_plate.png"
                }
            },
            watch: {
                modalFullscreen: {
                    deep: !0,
                    handler(t) {
                        switch (t.page) {
                            case "deposit":
                                this.$store.dispatch(r["m"]);
                                break;
                            case "withdrawal":
                                this.$store.dispatch(r["W"]);
                                break;
                            case "settings":
                                this.user.otp || this.$store.dispatch(r["z"]);
                                break
                        }
                        this.$refs.fullscreen.scrollTo({
                            top: 0,
                            behavior: "smooth"
                        })
                    }
                }
            }
        }
            , $b = Nb
            , Vb = (s("aec0"),
            y($b, Lm, Im, !1, null, "0bb94c14", null))
            , Eb = Vb.exports
            , Ub = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.withdrawalCancel
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("> "), e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("Confirm Withdrawal Cancel?")]), e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button red-button",
                on: {
                    click: function(e) {
                        return t.cancelWithdrawal(t.modalWithdrawalCancel.id)
                    }
                }
            }, [t._v("Confirm")])]), e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button bg-light-button",
                on: {
                    click: t.hideModal
                }
            }, [t._v("Close")])])])])])
        }
            , Hb = []
            , jb = {
            name: "WithdrawalCancelModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        withdrawalCancel: !1
                    })
                },
                cancelWithdrawal(t) {
                    this.$store.commit(n["F"], {
                        withdrawalCancel: !1
                    }),
                        this.$store.dispatch(r["g"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "modalWithdrawalCancel"]),
                activeOrder() {
                    return this.activeAccount.orders[this.modalClosePosition.activeOrderId] || {
                        alias: "",
                        type: 0,
                        volume: 0
                    }
                }
            }
        }
            , qb = jb
            , Rb = (s("2b33"),
            y(qb, Ub, Hb, !1, null, "14955a42", null))
            , Wb = Rb.exports
            , zb = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.depositFail,
                    expression: "modals.depositFail"
                }],
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.depositFailModal.title))]), e("i", {
                staticClass: "material-icons"
            }, [t._v("report")])]), e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.tokens.depositFailModal.text) + " ")]), e("div", {
                staticClass: "row"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("Close")])])])])
        }
            , Gb = []
            , Yb = {
            name: "NewPasswordModal",
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        depositFail: !1
                    })
                }
            }
        }
            , Zb = Yb
            , Jb = (s("0195"),
            y(Zb, zb, Gb, !1, null, "6ef1333c", null))
            , Kb = Jb.exports
            , Xb = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.forgotPassword,
                    newDesign: t.newDesign,
                    "aspin-modal-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "modal"
            }, [e("div", {
                staticClass: "modal-box"
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.forgotPasswordModal.forgotPassword.toUpperCase()))]), e("i", {
                staticClass: "material-icons close pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("label", [t._v(t._s(t.tokens.forgotPasswordModal.submitEmail))]), e("div", {
                staticClass: "form-row input"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: t.tokens.loginModal.enterEmail
                },
                domProps: {
                    value: t.email
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.restorePassword
                }
            }, [t._v(" " + t._s(t.tokens.forgotPasswordModal.submit.toUpperCase()) + " ")])])])])])])
        }
            , Qb = []
            , ty = {
            name: "ForgotPasswordModal",
            data() {
                return {
                    email: "",
                    newDesign: pt["kb"],
                    aspinDesign: pt["b"]
                }
            },
            methods: {
                hideModal() {
                    this.email = "",
                        this.$store.commit(n["F"], {
                            forgotPassword: !1
                        })
                },
                restorePassword() {
                    this.$store.dispatch(r["D"], {
                        email: this.email.trim()
                    }),
                        this.$store.commit(n["F"], {
                            forgotPassword: !1
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals"])
            }
        }
            , ey = ty
            , sy = (s("ad89"),
            y(ey, Xb, Qb, !1, null, "4824410a", null))
            , ay = sy.exports
            , iy = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.autoTrader
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "close",
                on: {
                    click: t.hideModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close")])]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.enable
                },
                on: {
                    click: function(e) {
                        t.enable = !t.enable
                    }
                }
            }, [t._v(" Auto Trader "), e("i", {
                staticClass: "material-icons btn",
                class: t.enable ? "green" : "red",
                attrs: {
                    title: "Enable"
                }
            }, [t._v("toggle_" + t._s(t.enable ? "on" : "off"))])]), e("div", {
                staticClass: "modal-inner"
            }, [e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.low
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("low")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelLow) + " "), e("div", {
                staticClass: "radio"
            })]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.medium
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("medium")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelMedium) + " "), e("div", {
                staticClass: "radio"
            })]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.high
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("high")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelHigh) + " "), e("div", {
                staticClass: "radio"
            })])]), e("div", {
                staticClass: "row form-control"
            }, [t._v(" " + t._s(t.tokens.autoTrader[t.tradersTittle] || t.tokens.autoTrader.perDay) + " "), e("span", [t._v(t._s(t.tradersPerDayStr[t.activeRiskLevel]) + " " + t._s(t.tradersTittle ? t.tokens.autoTrader.days : ""))])]), e("p", {
                staticClass: "desc"
            }, [t._v(t._s(t.tokens.autoTrader.desc))]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.accept
                },
                on: {
                    click: function(e) {
                        t.accept = !t.accept
                    }
                }
            }, [e("div", {
                staticClass: "accept"
            }, [t._v(t._s(t.tokens.autoTrader.accept) + " "), e("div", {
                staticClass: "radio"
            })])]), e("div", {
                staticClass: "row actions"
            }, [e("button", {
                staticClass: "button save",
                on: {
                    click: function(e) {
                        return t.save()
                    }
                }
            }, [t._v("Save")]), e("button", {
                staticClass: "button cancel",
                on: {
                    click: function(e) {
                        return t.hideModal()
                    }
                }
            }, [t._v("Cancel")])])])])
        }
            , oy = []
            , ny = {
            name: "AutoTraderModal",
            mounted() {
                this.customTradersPerDay && (this.tradersPerDayStr.low = this.customTradersPerDay[0],
                    this.tradersPerDayStr.medium = this.customTradersPerDay[1],
                    this.tradersPerDayStr.high = this.customTradersPerDay[2])
            },
            data() {
                return {
                    tradersTittle: pt["Hb"],
                    riskLevel: {
                        low: !1,
                        medium: !1,
                        high: !1
                    },
                    customTradersPerDay: pt["Gb"],
                    activeRiskLevel: "low",
                    tradersPerDayStr: {
                        low: "1-3",
                        medium: "3-4",
                        high: "5+"
                    },
                    tradersPerDayNum: 3,
                    accept: !1,
                    enable: 0
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        autoTrader: !1
                    }),
                        this.setAutoTraderConfig(),
                        this.accept = !1
                },
                deactivateRiskLevel() {
                    for (const t in this.riskLevel)
                        this.riskLevel[t] = !1
                },
                setRiskLevel(t) {
                    this.deactivateRiskLevel(),
                        this.riskLevel[t] = !0,
                        this.activeRiskLevel = t
                },
                save() {
                    this.accept ? (this.sendAutotraderConfig(),
                        this.hideModal(),
                        this.$store.commit(n["U"], "AutoTrader activated")) : this.$store.commit(n["V"], "Please press the `Accept` button")
                },
                sendAutotraderConfig() {
                    let t;
                    for (const e in this.riskLevel)
                        if (this.riskLevel[e])
                            switch (t = e,
                                e) {
                                case "low":
                                    this.tradersPerDayNum = 3;
                                    break;
                                case "medium":
                                    this.tradersPerDayNum = 4;
                                    break;
                                case "high":
                                    this.tradersPerDayNum = 30;
                                    break;
                                default:
                                    this.tradersPerDayNum = 3;
                                    break
                            }
                    this.$store.dispatch(r["O"], {
                        risk_level: t,
                        trades_day: this.tradersPerDayNum,
                        enable: this.enable
                    })
                },
                setAutoTraderConfig() {
                    this.deactivateRiskLevel(),
                        this.$set(this, "tradersPerDayNum", this.autoTraderConfig.trades_day > 1 ? this.autoTraderConfig.trades_day : 3),
                        this.$set(this.riskLevel, this.autoTraderConfig.risk_level, !0),
                        this.$set(this, "activeRiskLevel", this.autoTraderConfig.risk_level),
                        this.$set(this, "enable", this.autoTraderConfig.enable)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "autoTraderConfig", "tokens"])
            },
            watch: {
                autoTraderConfig() {
                    this.setAutoTraderConfig()
                }
            }
        }
            , ry = ny
            , ly = (s("e4d3"),
            y(ry, iy, oy, !1, null, "4fad18f6", null))
            , cy = ly.exports
            , dy = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.pending
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.pendingModal.pending.toUpperCase()))]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("span", [t._v(t._s(t.tokens.pendingModal.assetPrice))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.values.price,
                    expression: "values.price"
                }],
                ref: "price",
                staticClass: "value",
                attrs: {
                    placeholder: t.tokens.pendingModal.current
                },
                domProps: {
                    value: t.values.price
                },
                on: {
                    focus: t.focusPrice,
                    blur: t.blurPrice,
                    keypress: t.validateInput,
                    keyup: t.updatePendingInput,
                    input: function(e) {
                        e.target.composing || t.$set(t.values, "price", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "buttons"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return t.changePrice(1)
                    }
                }
            }, [t._v("+")]), e("button", {
                on: {
                    click: function(e) {
                        return t.changePrice(0)
                    }
                }
            }, [t._v("-")])])]), e("button", {
                staticClass: "revert",
                class: {
                    hide: !t.values.price
                },
                on: {
                    click: function(e) {
                        t.values.price = ""
                    }
                }
            }, [t._v(t._s(t.tokens.pendingModal.revert))]), e("button", {
                staticClass: "apply-button",
                staticStyle: {
                    "margin-top": "10px"
                },
                on: {
                    click: t.apply
                }
            }, [t._v("Apply ")]), e("div", {
                staticClass: "row stretch"
            }, [e("span", {
                staticClass: "info"
            }, [t._v(t._s(t.tokens.pendingModal.automatically))])])])])
        }
            , uy = []
            , my = {
            name: "PendingModal",
            data() {
                return {
                    priceTransparent: !1,
                    values: {
                        symbolActive: null,
                        price: ""
                    }
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        pending: !1
                    })
                },
                validateInput(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", ","].indexOf(t.key) && t.preventDefault(),
                    "." !== t.key && "," !== t.key || -1 === t.target.value.indexOf(".") && -1 === t.target.value.indexOf(",") || t.preventDefault()
                },
                updatePendingInput(t) {
                    let e = String(t.target.value);
                    e = e.includes(",") ? e.replace(/,/, ".") : e,
                    !isNaN(e) && (this.values.price = e)
                },
                focusPrice() {
                    this.priceTransparent = !0
                },
                blurPrice() {
                    this.priceTransparent = !1
                },
                changePrice(t) {
                    this.values.price || (this.values.price = this.currentSym.quote.bid),
                        t ? this.values.price = Number(this.values.price) + Math.pow(.1, this.currentSym.precision) : (this.values.price -= Math.pow(.1, this.currentSym.precision),
                            this.values.price = Math.max(0, this.values.price)),
                        this.values.price = (this.values.price + Number.EPSILON).toFixed(this.currentSym.precision)
                },
                apply() {
                    this.$store.commit(n["N"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            pending: !1
                        })
                },
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalPending", "tokens", "symbolsActive", "symbols"]),
                currentSym() {
                    return void 0 !== this.values.symbolActive && null !== this.values.symbolActive && this.symbolsActive[this.values.symbolActive] ? this.symbols[this.symbolsActive[this.values.symbolActive].symbol] : {
                        precision: 0,
                        quote: {
                            bid: 0
                        }
                    }
                },
                position() {
                    if (!this.modals.pending)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 210,
                        height: this.values.price ? 232 : 199
                    };
                    return t.width >= 600 && this.isMobile() ? {
                        left: this.modalPending.posX,
                        top: this.modalPending.posY - 29
                    } : t.width < 600 && this.isMobile() ? {
                        left: t.width - e.width,
                        top: this.modalPending.posY - 29
                    } : {
                        left: this.modalPending.left - e.width - 10,
                        top: Math.min(this.modalPending.top, t.height - e.height)
                    }
                }
            },
            watch: {
                modalPending: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["N"], {
                            symbolActive: t.symbolActive,
                            price: t.price
                        })
                    }
                }
            }
        }
            , py = my
            , hy = (s("0087"),
            y(py, dy, uy, !1, null, "d287167a", null))
            , vy = hy.exports
            , fy = function() {
            var t = this
                , e = t._self._c;
            return t.modals.symbols ? e("div", {
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal ElevationDark__2",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", {
                staticClass: "title__large"
            }, [t._v("Add Symbol")]), e("i", {
                staticClass: "close material-symbols-outlined",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("close")])]), e("SymbolsGroup")], 1)]) : t._e()
        }
            , gy = []
            , by = {
            name: "SymbolsModal",
            components: {
                SymbolsGroup: Ht
            },
            computed: {
                ...Object(o["b"])(["modals"])
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        symbols: !1
                    })
                }
            }
        }
            , yy = by
            , _y = (s("ab2f"),
            y(yy, fy, gy, !1, null, "f5011a9e", null))
            , Cy = _y.exports
            , wy = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.canselPosition
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal ElevationDark__3",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [t._m(0), e("span", {
                staticClass: "warning body__medium"
            }, [t._v(" " + t._s(t.tokens.closePositionModal.areYouSure) + " #" + t._s(t.modalClosePosition.activeOrderId) + "? ")]), t.activeOrder.symbol ? e("div", {
                staticClass: "symbol-content"
            }, [e("div", {
                staticClass: "symbol-info"
            }, [e("span", {
                staticClass: "symbol",
                class: "" + ("symbol-" + t.activeOrder.symbol.toUpperCase().replace(".", "-"))
            }), e("span", {
                staticClass: "body__large alias"
            }, [t._v(" " + t._s(t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].alias : "") + " ")])]), e("div", {
                staticClass: "price-info"
            }, [e("span", {
                staticClass: "body__large profit"
            }, [t._v(" " + t._s(t.activeOrder.profit.toLocaleString(void 0, {
                minimumFractionDigits: t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].precision : 3,
                maximumFractionDigits: t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].precision : 3
            })) + " ")]), e("BasePositionDirection", {
                attrs: {
                    type: t.activeOrder.type
                }
            })], 1)]) : t._e(), e("div", {
                staticClass: "row actions"
            }, [e("BaseButton", {
                attrs: {
                    "button-style": "text-primary",
                    "button-text": "Cancel"
                },
                nativeOn: {
                    click: function(e) {
                        return t.hideModal()
                    }
                }
            }), e("BaseButton", {
                attrs: {
                    "button-style": "filled-primary",
                    "button-text": "Confirm"
                },
                nativeOn: {
                    click: function(e) {
                        return t.closePosition(t.modalClosePosition.activeOrderId, t.modalClosePosition.index)
                    }
                }
            })], 1)])])
        }
            , ky = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "title"
            }, [e("span", {
                staticClass: "title__large"
            }, [t._v("Cancel order")])])
        }
        ]
            , Sy = {
            name: "CancelPositionModal",
            components: {
                BasePositionDirection: A,
                BaseButton: Ae
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        canselPosition: !1
                    })
                },
                closePosition(t, e) {
                    this.$store.dispatch(r["h"], {
                        id: t,
                        index: e,
                        account_id: this.activeAccount.id
                    }),
                        this.hideModal()
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "activeAccount", "tokens", "symbols", "modalClosePosition", "closeOrderLoader"]),
                activeOrder() {
                    let t = Object.values(this.activeAccount.orders).find(t => t.id === this.modalClosePosition.activeOrderId);
                    return t || {
                        alias: "",
                        type: 0,
                        volume: 0
                    }
                }
            }
        }
            , xy = Sy
            , My = (s("e37d"),
            y(xy, wy, ky, !1, null, "1332f8b9", null))
            , Ay = My.exports
            , Dy = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "symbols"
            }, [e("BaseIconButton", {
                attrs: {
                    "button-style": "tonal"
                },
                nativeOn: {
                    click: function(e) {
                        return t.showAddSymbolModal()
                    }
                },
                scopedSlots: t._u([{
                    key: "icon",
                    fn: function() {
                        return [e("i", {
                            staticClass: "material-symbols-outlined"
                        }, [t._v("add")])]
                    },
                    proxy: !0
                }])
            }), e("SymbolsChipsList", {
                attrs: {
                    symbols: t.charts
                }
            })], 1)
        }
            , Py = []
            , Ty = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "symbols-list"
            }, [e("div", {
                staticClass: "row"
            }, t._l(t.symbols, (function(s) {
                    return e("SymbolsChipsListItem", {
                        key: s.alias,
                        class: {
                            active: s.id === t.chartActive
                        },
                        attrs: {
                            symbol: s
                        },
                        nativeOn: {
                            click: function(e) {
                                return t.makeActive(s.id)
                            }
                        }
                    })
                }
            )), 1)])
        }
            , Ly = []
            , Iy = function() {
            var t = this
                , e = t._self._c;
            return e("BaseTradingChips", {
                attrs: {
                    symbol: t.symbol.symbol,
                    label: t.symbol.symbol
                },
                on: {
                    close: function(e) {
                        return t.closeSymbol(t.symbol.id)
                    }
                }
            })
        }
            , Fy = []
            , Oy = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "trading-chips"
            }, [e("div", {
                staticClass: "state-layer"
            }, [e("div", {
                staticClass: "symbol",
                class: t.assetSymbol(t.symbol)
            }), e("span", {
                staticClass: "label label__large"
            }, [t._v(t._s(t.label))]), e("i", {
                staticClass: "close material-symbols-outlined",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.close()
                    }
                }
            }, [t._v("close")])])])
        }
            , By = []
            , Ny = {
            name: "BaseTradingChips",
            props: {
                label: {
                    type: String
                },
                icon: {
                    type: String
                },
                symbol: {
                    type: String
                }
            },
            methods: {
                assetSymbol(t) {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + t.toUpperCase().replace(".", "-");
                    switch (t) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + t.toUpperCase().replace(".", "-")
                    }
                },
                close() {
                    this.$emit("close")
                }
            }
        }
            , $y = Ny
            , Vy = (s("4a51"),
            y($y, Oy, By, !1, null, "81ad0f5a", null))
            , Ey = Vy.exports
            , Uy = {
            name: "SymbolsChipsListItem",
            components: {
                BaseTradingChips: Ey
            },
            props: {
                symbol: {
                    type: Object,
                    default: () => {}
                }
            },
            methods: {
                closeSymbol(t) {
                    this.$store.commit(n["Gb"], t)
                }
            }
        }
            , Hy = Uy
            , jy = (s("be43"),
            y(Hy, Iy, Fy, !1, null, "0f229cca", null))
            , qy = jy.exports
            , Ry = {
            name: "SymbolsChipsList",
            components: {
                SymbolsChipsListItem: qy
            },
            props: {
                symbols: {
                    type: Object,
                    default: () => {}
                }
            },
            computed: {
                ...Object(o["b"])(["chartActive"])
            },
            methods: {
                makeActive(t) {
                    if (t === this.chartActive) {
                        let e = void 0;
                        for (let s in this.gridCharts)
                            if (this.gridCharts[s] === t) {
                                e = s;
                                break
                            }
                        return this.$store.commit(n["F"], {
                            symbols: !0
                        }),
                            void this.$store.commit(n["P"], {
                                action: "update",
                                id: t,
                                gridId: e
                            })
                    }
                    this.$store.commit(n["n"], t)
                }
            }
        }
            , Wy = Ry
            , zy = (s("df91"),
            y(Wy, Ty, Ly, !1, null, "4f1c3db2", null))
            , Gy = zy.exports
            , Yy = function() {
            var t = this
                , e = t._self._c;
            return e("button", {
                staticClass: "icon-button",
                class: t.buttonStyle,
                attrs: {
                    disabled: t.disabled
                }
            }, [e("span", {
                staticClass: "state-layer"
            }, [t._t("icon")], 2)])
        }
            , Zy = []
            , Jy = {
            name: "BaseIconButton",
            props: {
                icon: {
                    type: String
                },
                buttonStyle: {
                    type: String
                },
                disabled: {
                    type: Boolean,
                    default: !1
                }
            }
        }
            , Ky = Jy
            , Xy = (s("217e"),
            y(Ky, Yy, Zy, !1, null, "58129650", null))
            , Qy = Xy.exports
            , t_ = {
            name: "SymbolsPanel",
            components: {
                BaseIconButton: Qy,
                SymbolsChipsList: Gy
            },
            computed: {
                ...Object(o["b"])(["charts"])
            },
            methods: {
                showAddSymbolModal() {
                    this.$store.commit(n["F"], {
                        symbols: !0
                    }),
                        this.$store.commit(n["P"], {
                            action: "add",
                            symbolActive: null
                        })
                }
            }
        }
            , e_ = t_
            , s_ = (s("d9fd"),
            y(e_, Dy, Py, !1, null, "6160ded9", null))
            , a_ = s_.exports
            , i_ = function() {
            var t = this
                , e = t._self._c;
            return t.isMobile ? e("div", {
                staticClass: "footer-buttons"
            }, [e("BaseTradingButton", {
                attrs: {
                    buttonText: "BUY",
                    buttonClass: "buy"
                },
                nativeOn: {
                    click: function(e) {
                        return t.openOrderMenuModal.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "sum",
                    fn: function() {
                        var s, a, i, o, n, r, l, c;
                        return [e("span", {
                            staticClass: "price"
                        }, [e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (s = t.symbols[t.currentSym]) && void 0 !== s && s.quote && null !== (a = t.symbols[t.currentSym]) && void 0 !== a && a.quote.bid ? t.symbols[t.currentSym] && t.symbols[t.currentSym].quote && null !== (i = t.symbols[t.currentSym]) && void 0 !== i && i.quote.ask ? null === (o = t.symbols[t.currentSym]) || void 0 === o ? void 0 : o.quote.ask.toFixed(t.symbols[t.currentSym].precision).slice(0, -2) : 0 : "") + " ")]), e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (n = t.symbols[t.currentSym]) && void 0 !== n && n.quote && null !== (r = t.symbols[t.currentSym]) && void 0 !== r && r.quote.bid ? t.symbols[t.currentSym] && null !== (l = t.symbols[t.currentSym]) && void 0 !== l && l.quote ? null === (c = t.symbols[t.currentSym]) || void 0 === c ? void 0 : c.quote.ask.toFixed(t.symbols[t.currentSym].precision).slice(-2) : 0 : "") + " ")])])]
                    },
                    proxy: !0
                }], null, !1, 4042353248)
            }), e("BaseTradingButton", {
                attrs: {
                    buttonText: "SELL",
                    buttonClass: "sell"
                },
                nativeOn: {
                    click: function(e) {
                        return t.openOrderMenuModal.apply(null, arguments)
                    }
                },
                scopedSlots: t._u([{
                    key: "sum",
                    fn: function() {
                        var s, a, i, o, n, r, l, c, d;
                        return [e("span", {
                            staticClass: "price"
                        }, [e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (s = t.symbols[t.currentSym]) && void 0 !== s && s.quote && null !== (a = t.symbols[t.currentSym]) && void 0 !== a && a.quote.bid ? t.symbols[t.currentSym] && null !== (i = t.symbols[t.currentSym]) && void 0 !== i && i.quote && null !== (o = t.symbols[t.currentSym]) && void 0 !== o && o.quote.ask ? null === (n = t.symbols[t.currentSym]) || void 0 === n ? void 0 : n.quote.bid.toFixed(t.symbols[t.currentSym].precision).slice(0, -2) : 0 : "") + " ")]), e("span", [t._v(" " + t._s(t.sessionsState[t.currentSym] && t.symbols[t.currentSym] && null !== (r = t.symbols[t.currentSym]) && void 0 !== r && r.quote && null !== (l = t.symbols[t.currentSym]) && void 0 !== l && l.quote.bid ? t.symbols[t.currentSym] && null !== (c = t.symbols[t.currentSym]) && void 0 !== c && c.quote ? null === (d = t.symbols[t.currentSym]) || void 0 === d ? void 0 : d.quote.bid.toFixed(t.symbols[t.currentSym].precision).slice(-2) : 0 : "") + " ")])])]
                    },
                    proxy: !0
                }], null, !1, 2693751071)
            })], 1) : t._e()
        }
            , o_ = []
            , n_ = {
            components: {
                BaseTradingButton: hs
            },
            data() {
                return {
                    isMobile: Object(l["h"])()
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "symbols", "sessionsState", "charts", "chartActive"]),
                currentSym() {
                    return this.symbol.symbol || ""
                },
                symbol() {
                    let t = {
                        alias: ""
                    };
                    return this.chartActive && this.charts[this.chartActive] && this.symbols[this.charts[this.chartActive].symbol] || t
                }
            },
            methods: {
                openOrderMenuModal() {
                    this.$store.commit(n["F"], {
                        orderMenuGridWideModal: !0
                    })
                }
            }
        }
            , r_ = n_
            , l_ = (s("ce0c"),
            y(r_, i_, o_, !1, null, "7c7d8bce", null))
            , c_ = l_.exports
            , d_ = {
            name: "NewDesign",
            components: {
                SymbolsPanel: a_,
                CancelPositionModal: Ay,
                SymbolsModal: Cy,
                PendingModal: vy,
                AutoTraderModal: cy,
                ForgotPasswordModal: ay,
                DepositFailModal: Kb,
                WithdrawalCancelModal: Wb,
                Fullscreen: Eb,
                TimePickerModal: Tm,
                PciDssModal: fl,
                NoLandscape: dl,
                QrCodeModal: il,
                DepositSuccessModal: Pr,
                CustomLoginModals: kr,
                NoConnectionModal: ur,
                ProfitCalculatorModal: or,
                AccountModal: Hn,
                NewPasswordModal: Bn,
                AlertMessageModal: Pn,
                AssetsInfoModal: kn,
                Notifications: on,
                RegisterModal: Xo,
                GridsModal: zo,
                BalanceModal: Uo,
                AutoCloseModal: ao,
                ClosePositionModal: Ki,
                TheHeader: Ei,
                SideMenu: Ea,
                SideMenuBurger: Wa,
                LoginModal: Fa,
                StatusBar: Ca,
                OrdersPane: va,
                Grid: Ks,
                MenuModal: ye,
                HamburgerMenu: qe,
                FooterButtons: c_
            },
            beforeMount() {
                this.updateStyles()
            },
            data() {
                return {
                    newPlatformDesign: !0,
                    brand: pt["e"],
                    baseLightTheme: ji,
                    baseDarkTheme: Wi,
                    customLoginModal: pt["C"],
                    sessionStateInit: !1,
                    isMobile: Object(l["h"])()
                }
            },
            methods: {
                updateStyles() {
                    const t = document.querySelector("link.old-design-style")
                        , e = document.querySelector("link.new-design-style");
                    t && t.remove(),
                    e || this.addStyleSheet("../designs/new-design/general.css", "new-design-style")
                },
                addStyleSheet(t, e) {
                    const s = document.createElement("link");
                    s.rel = "stylesheet",
                        s.href = t,
                        s.className = e,
                        document.head.appendChild(s)
                }
            },
            computed: {
                ...Object(o["b"])(["blur", "symbols", "sessionsState", "staticBase", "lightTheme", "variables", "modals"]),
                alertMessage() {
                    return !!this.variables.ALERT_MESSAGE && this.variables.ALERT_MESSAGE.trim()
                }
            }
        }
            , u_ = d_
            , m_ = y(u_, c, d, !1, null, null, null)
            , p_ = m_.exports
            , h_ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "switch-to-banner"
            }, [e("div", {
                staticClass: "left"
            }, [e("button", {
                staticClass: "switch-button",
                on: {
                    click: t.switchDesign
                }
            }, [t._v(" " + t._s(t.value ? t.switchToNewDesignButton : t.switchToOldDesignButton) + " "), t.value ? t._e() : e("svg", {
                staticClass: "cursor",
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 20 20",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    d: "M1.6665 10V8.33333H4.1665V10H1.6665ZM4.49984 14.625L3.33317 13.4167L5.08317 11.6667L6.2915 12.8333L4.49984 14.625ZM5.08317 6.66667L3.33317 4.91667L4.49984 3.70833L6.2915 5.5L5.08317 6.66667ZM14.9998 16.6667L11.0415 12.7083L9.99984 15.8333L7.49984 7.5L15.8332 10L12.7498 11.0833L16.6665 15L14.9998 16.6667ZM8.33317 5V2.5H9.99984V5H8.33317ZM13.2498 6.66667L12.0415 5.5L13.8332 3.70833L14.9998 4.875L13.2498 6.66667Z",
                    fill: "#DBE2F9"
                }
            })])]), e("span", {
                staticClass: "message"
            }, [t._v(" " + t._s(t.value ? t.switchToOldDesignMessage : t.switchToNewDesignMessage) + " ")])]), e("svg", {
                staticClass: "close",
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "16",
                    height: "16",
                    viewBox: "0 0 16 16",
                    fill: "none"
                },
                on: {
                    click: function(e) {
                        return t.close()
                    }
                }
            }, [e("path", {
                attrs: {
                    d: "M4.26683 12.6667L3.3335 11.7334L7.06683 8.00004L3.3335 4.26671L4.26683 3.33337L8.00016 7.06671L11.7335 3.33337L12.6668 4.26671L8.9335 8.00004L12.6668 11.7334L11.7335 12.6667L8.00016 8.93337L4.26683 12.6667Z"
                }
            })])])
        }
            , v_ = []
            , f_ = {
            name: "BaseSwitchToBanner",
            props: {
                currentDesign: {
                    type: String
                },
                value: {
                    type: Boolean
                }
            },
            data() {
                return {
                    switchToNewDesignMessage: "Switch to Our New Platform Design Now!",
                    switchToOldDesignMessage: "You can still use the classic design for a limited time",
                    switchToOldDesignButton: "Switch to New Design",
                    switchToNewDesignButton: "Revert to Classic Design"
                }
            },
            methods: {
                switchDesign() {
                    this.$emit("input", !this.value),
                        this.$emit("update", !this.value)
                },
                close() {
                    this.$emit("close")
                }
            }
        }
            , g_ = f_
            , b_ = (s("2717"),
            y(g_, h_, v_, !1, null, "74bb613d", null))
            , y_ = b_.exports
            , __ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "old-design",
                class: {
                    mobile: t.isMobile
                },
                style: t.lightTheme ? t.cssVarsLight : t.cssVars
            }, [e("div", {
                staticClass: "blur-container",
                class: {
                    blur: t.blur
                }
            }, [!t.modals.fullscreen && t.alertMessage ? e("marquee", {
                staticClass: "alert-message-marquee"
            }, [t._v(" " + t._s(t.alertMessage) + " ")]) : t._e(), e("Header"), e("div", {
                staticClass: "main"
            }, [e("SideMenu"), e("Menu", {
                class: {
                    hide: !t.isMobile
                }
            }), e("MenuModal"), e("div", {
                staticClass: "bigPane"
            }, [e("Grid"), e("OrdersPane"), e("StatusBar")], 1)], 1), e("Footer")], 1), ["tradingviewonline"].includes(t.brand) ? e("CustomLoginModals") : e("LoginModal"), e("NoLandscape"), e("ProfitCalculatorModal"), e("AssetsInfoModal"), e("RegisterModal"), e("AccountModal"), e("SymbolsModal"), e("BalanceModal"), e("AccountModal"), e("GridsModal"), e("NoConnectionModal"), e("AutoCloseModal"), e("PendingModal"), e("Notifications"), e("ForgotPasswordModal"), e("NewPasswordModal"), e("ClosePositionModal"), e("DepositSuccessModal"), e("DepositFailModal"), e("WithdrawalCancelModal"), e("Fullscreen"), e("AutoTraderModal"), e("PciDssModal"), e("QrCodeModal"), e("TimePickerModal"), t.alertMessage ? e("AlertMessageModal") : t._e()], 1)
        }
            , C_ = []
            , w_ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "header",
                class: {
                    "aspin-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "row left-row"
            }, [e("div", {
                staticClass: "logo"
            }, [e("a", {
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    href: t.logoRedirectOff ? "#" : t.website,
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.logoComputed
                },
                style: {
                    height: t.logo.height,
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.logoComputed
                },
                on: {
                    error: t.errorHandler
                }
            }), e("span", {
                class: {
                    hide: t.logoComputed
                }
            }, [e("span", {
                staticClass: "brand"
            }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform))])])]), e("div", {
                staticClass: "layout nomobile",
                class: {
                    hide: "1" !== t.multigrid
                },
                on: {
                    click: t.showGridsModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("dashboard")])]), e("div", {
                staticClass: "active-symbols"
            }, t._l(t.charts, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "item",
                        class: {
                            active: s.id === t.chartActive,
                            enabled: -1 !== t.enabledList.indexOf(s.id),
                            inprofit: t.orderData[s.symbol] && t.orderData[s.symbol].profit > 0,
                            inloss: t.orderData[s.symbol] && t.orderData[s.symbol].profit < 0
                        },
                        on: {
                            click: function(e) {
                                return t.makeActive(s.id)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: t.assetSymbol(s.symbol)
                    }), e("div", {
                        staticClass: "col nomobile"
                    }, [e("span", {
                        staticClass: "sym"
                    }, [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : ""))]), e("span", {
                        class: {
                            profit: t.orderData[s.symbol],
                            green: t.orderData[s.symbol] && t.orderData[s.symbol].profit > 0,
                            red: t.orderData[s.symbol] && t.orderData[s.symbol].profit < 0
                        }
                    }, [t._v(t._s(t.orderData[s.symbol] ? (t.orderData[s.symbol].profit > 0 ? "+" : 0 > t.orderData[s.symbol].profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(t.orderData[s.symbol].profit).toFixed(t.activeAccount.precision) : t.tokens.markets[t.symbols[s.symbol] ? t.symbols[s.symbol].market : "forex"].toLowerCase()))])]), e("i", {
                        staticClass: "material-icons",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.hideSymbol(s.id)
                            }
                        }
                    }, [t._v("close")])])
                }
            )), 0), e("div", {
                staticClass: "layout"
            }, [e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.showSymbolsModal
                }
            }, [t._v("add")])])]), e("div", {
                staticClass: "row right-row"
            }, [e("div", {
                staticClass: "mobile-menu",
                on: {
                    click: t.toggleModalMenu
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("menu")])]), t.robotAi ? e("div", {
                staticClass: "robotai deposit",
                class: {
                    "is-active": t.robotIsActive
                },
                on: {
                    click: function(e) {
                        return t.activateRobot()
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("smart_toy")]), e("span", {
                staticClass: "nomobile"
            }, [t._v(t._s(t.robotIsActive ? "Deactivate robot (AI)" : "Activate robot (AI)"))])]) : t._e(), t.user.enable_autotrader && !t.hideTradingBot ? e("div", {
                staticClass: "robotai deposit",
                class: {
                    "is-active": t.autotrader
                },
                on: {
                    click: function(e) {
                        return t.openAutoTraderModal()
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("smart_toy")]), e("span", {
                staticClass: "nomobile"
            }, [t._v("Autotrader")])]) : t._e(), e("div", {
                staticClass: "deposit",
                on: {
                    click: function(e) {
                        return t.showCabinet("deposit")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("payments")]), e("span", {
                staticClass: "nomobile"
            }, [t._v(t._s(t.tokens.header.deposit))])]), e("div", {
                staticClass: "balance",
                style: {
                    color: t.activeAccount.demo ? "var(--brand)" : "var(--green-button)"
                },
                on: {
                    click: t.showBalanceModal
                }
            }, [e("div", {
                staticClass: "col align-end"
            }, [e("div", {
                staticClass: "acc-type"
            }, [t._v(t._s(t.activeAccount.account_name && "MAIN" != t.activeAccount.account_name ? t.activeAccount.account_name : "main" === t.activeAccount.group ? "STANDARD" : t.activeAccount.group.toUpperCase()) + " " + t._s(t.tokens.balanceModal.account))]), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance > 0 ? t.activeAccount.balance : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("i", {
                staticClass: "material-icons"
            }, [t._v(" " + t._s(t.modals.balance ? "arrow_drop_up" : "arrow_drop_down"))])]), t.isMobile ? t._e() : e("div", {
                staticClass: "plate"
            }, [e("img", {
                attrs: {
                    src: t.plate
                }
            })]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "avatar",
                on: {
                    click: t.showAccountModal
                }
            }, [e("div", {
                staticClass: "circle"
            }, [e("i", {
                staticClass: "material-icons",
                class: {
                    hide: t.user.avatar
                }
            }, [t._v("person")]), e("img", {
                class: {
                    hide: !t.user.avatar
                },
                attrs: {
                    src: t.user.avatar ? t.apiBase + "/avatar/" + t.user.avatar : ""
                }
            })])])])])])
        }
            , k_ = []
            , S_ = {
            name: "Header",
            mounted() {
                setInterval( () => {
                        this.time = Math.floor(Date.now() / 1e3)
                    }
                    , 1e3),
                    document.addEventListener("keydown", t => {
                            "Escape" === t.key && this.hideAllModals()
                        }
                    )
            },
            data() {
                return {
                    platesFolder: pt["ob"],
                    apiBase: pt["ub"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    time: Math.floor(Date.now() / 1e3),
                    logo: pt["ab"],
                    multigrid: pt["hb"],
                    isMobile: Object(l["h"])(),
                    robotAi: pt["vb"],
                    aspinDesign: pt["b"],
                    hideLogo: pt["Q"],
                    autotrader: !1,
                    hideTradingBot: pt["T"],
                    brand: pt["e"],
                    whiteAspinTheme: pt["Pb"],
                    logoRedirectOff: pt["bb"]
                }
            },
            methods: {
                currencySign: l["e"],
                test() {
                    console.log("test")
                },
                hideAllModals() {
                    let t = {
                        sideMenu: !0,
                        menu: this.modals.menu
                    };
                    for (let e in this.modals)
                        "sideMenu" !== e && "menu" !== e && (t[e] = !1);
                    this.$store.commit(n["F"], t)
                },
                showSymbolsModal() {
                    this.$store.commit(n["F"], {
                        symbols: !0
                    }),
                        this.$store.commit(n["P"], {
                            action: "add",
                            symbolActive: null
                        })
                },
                showAccountModal() {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                showBalanceModal() {
                    this.$store.commit(n["F"], {
                        balance: !0
                    })
                },
                showGridsModal() {
                    this.$store.commit(n["F"], {
                        grids: !0
                    })
                },
                hideSymbol(t) {
                    this.$store.commit(n["Gb"], t)
                },
                makeActive(t) {
                    if (t === this.chartActive) {
                        let e = void 0;
                        for (let s in this.gridCharts)
                            if (this.gridCharts[s] === t) {
                                e = s;
                                break
                            }
                        return this.$store.commit(n["F"], {
                            symbols: !0
                        }),
                            void this.$store.commit(n["P"], {
                                action: "update",
                                id: t,
                                gridId: e
                            })
                    }
                    this.$store.commit(n["n"], t)
                },
                toggleModalMenu() {
                    this.$store.commit(n["F"], this.modals.hamburgerMenu ? {
                        hamburgerMenu: !1
                    } : {
                        hamburgerMenu: !0
                    })
                },
                showCabinet(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                activateRobot() {
                    this.$store.commit(n["qb"], !this.robotIsActive)
                },
                openAutoTraderModal() {
                    this.$store.commit(n["F"], {
                        autoTrader: !0
                    })
                },
                assetSymbol(t) {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + t.toUpperCase().replace(".", "-");
                    switch (t) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + t.toUpperCase().replace(".", "-")
                    }
                },
                errorHandler() {
                    this.logo.url = ""
                }
            },
            computed: {
                ...Object(o["b"])(["charts", "symbols", "activeAccount", "chartActive", "gridCharts", "user", "themeColors", "tokens", "modals", "robotIsActive", "autoTraderConfig", "staticBase", "staticBaseDomain", "lightTheme"]),
                orderData() {
                    let t = {};
                    for (let e in this.activeAccount.orders) {
                        let s = this.activeAccount.orders[e];
                        void 0 === t[s.symbol] && (t[s.symbol] = {
                            expiration: 0,
                            profit: 0,
                            completed: 0,
                            total: 0,
                            left: 0
                        }),
                        void 0 !== this.symbols[s.symbol] && (t[s.symbol].profit += s.type < 2 ? s.point * (s.type ? s.price_open - this.symbols[s.symbol].quote.ask : this.symbols[s.symbol].quote.bid - s.price_open) * Math.pow(10, this.symbols[s.symbol].precision) + s.swap + s.commission : 0)
                    }
                    return t
                },
                enabledList() {
                    let t = [];
                    for (let e in this.gridCharts)
                        void 0 !== this.gridCharts[e] && t.push(this.gridCharts[e]);
                    return t
                },
                plate() {
                    let t = ["insurance", "beginner", "student", "basic", "bronze", "bronze_plus", "silver", "silver_plus", "gold", "platinum", "platinum_plus", "vip", "top", "diamond", "islamic", "business", "enterprise", "regular", "arbitrage", "basicml", "shift", "custom", "professional"].includes(this.activeAccount.group) ? this.activeAccount.group : "main";
                    return this.staticBase + this.platesFolder + "/" + t + "_plate.png"
                },
                logoComputed() {
                    let t = this.logo.url;
                    if ("co" !== this.staticBaseDomain) {
                        const e = t.split("/");
                        e[2] = e[2].replace("co", this.staticBaseDomain),
                            t = e.join("/")
                    }
                    return this.whiteAspinTheme ? this.lightTheme ? t.replace(/white/, "black") : t : "Light" === this.tradingViewTheme ? t.replace(/white/, "black") : t
                }
            }
        }
            , x_ = S_
            , M_ = (s("b59b"),
            y(x_, w_, k_, !1, null, "2b0f99fd", null))
            , A_ = M_.exports
            , D_ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "footer"
            }, [e("div", {
                staticClass: "row"
            }, [e("i", {
                staticClass: "nomobile material-icons"
            }, [t._v("tty")]), e("span", {
                staticClass: "nomobile support-email"
            }, [t._v(t._s(t.supportEmail))]), e("span", {
                staticClass: "nomobile"
            }, [t._v(t._s(t.schedule ? t.schedule : t.tokens.footer.supportBanner))]), e("span", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.isMobile,
                    expression: "isMobile"
                }],
                staticClass: "deposit",
                on: {
                    click: function(e) {
                        return t.showCabinetPage("deposit")
                    }
                }
            }, [t._v(t._s(t.tokens.fullScreen.deposit.toUpperCase()))])]), e("div", {
                staticClass: "row pads"
            }, [t.varNames.APPLICATION_DOWNLOAD_LINK ? e("div", {
                staticClass: "row app-download"
            }, [e("a", {
                attrs: {
                    href: t.varNames.APPLICATION_DOWNLOAD_LINK,
                    target: "_blank"
                }
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/cloud-download-i.png"
                }
            })])]) : t._e(), t.user.enable_chat && !t.newChat ? e("div", {
                staticClass: "row live-chat",
                class: {
                    blinking: "0" !== t.unreadMessageCounter && t.supportUnread
                },
                on: {
                    click: function(e) {
                        return t.showCabinetPage("support")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("mail_outline")]), e("span", [t._v(t._s(t.tokens.footer.liveChat.toUpperCase()) + " " + t._s("0" !== t.unreadMessageCounter && t.supportUnread ? `(${t.unreadMessageCounter})` : ""))])]) : t.user.enable_chat && t.newChat ? e("div", {
                staticClass: "row live-chat",
                class: {
                    blinking: "0" !== t.unreadMessageCounter && t.supportUnread
                },
                on: {
                    click: t.showSupportModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("mail_outline")]), e("span", [t._v(t._s(t.tokens.footer.liveChat.toUpperCase()) + " " + t._s("0" !== t.unreadMessageCounter && t.supportUnread ? `(${t.unreadMessageCounter})` : ""))])]) : t._e(), e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.toggleMute
                }
            }, [t._v(t._s(t.mute ? "volume_off" : "volume_up"))]), e("i", {
                staticClass: "material-icons",
                on: {
                    click: function(e) {
                        return t.showCabinetPage("settings")
                    }
                }
            }, [t._v("settings")]), e("span", {
                staticClass: "nomobile"
            }, [t._v(t._s(t.tokens.footer.currentTime) + ": " + t._s(new Date(t.time).toLocaleString()))]), e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.fullscreen
                }
            }, [t._v("fullscreen")])]), t.supportModalIsOpen ? e("SupportModal", {
                attrs: {
                    supportModalIsOpen: t.supportModalIsOpen
                },
                on: {
                    "close-modal": t.closeSupportModal
                }
            }) : t._e()], 1)
        }
            , P_ = []
            , T_ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "support-modal"
            }, [e("div", {
                staticClass: "support-header"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.liveChat.toUpperCase()) + " ")]), e("div", {
                staticClass: "close-button",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.closeModal.apply(null, arguments)
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close_small")])])]), e("div", {
                staticClass: "messages__inner"
            }, [e("div", {
                staticClass: "messages__content"
            }, [e("div", {
                staticClass: "messages",
                attrs: {
                    id: "support-messages"
                }
            }, t._l(t.supportMessages, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "message",
                        class: "from-" + (s.manager_id ? "manager" : "client")
                    }, [e("div", {
                        staticClass: "text"
                    }, [e("div", {
                        staticClass: "text-content"
                    }, [e("div", {
                        domProps: {
                            innerHTML: t._s(t.convertText(s.text))
                        }
                    }), [".jpg", ".png", "jpeg"].indexOf(s.file.slice(-4)) > -1 ? e("div", {
                        staticClass: "pic",
                        on: {
                            click: function(e) {
                                return t.openImg(t.restEndpoint + "/kyc/document/" + s.file)
                            }
                        }
                    }, [e("img", {
                        attrs: {
                            src: t.restEndpoint + "/kyc/document/" + s.file
                        }
                    })]) : t._e(), ".pdf" === s.file.slice(-4) ? e("a", {
                        staticClass: "pdf",
                        attrs: {
                            href: t.restEndpoint + "/kyc/document/" + s.file,
                            target: "_blank"
                        }
                    }, [e("i", {
                        staticClass: "material-icons"
                    }, [t._v("attach_file")]), t._v(" PDF attachment ")]) : t._e()])])])
                }
            )), 0)])]), e("div", {
                staticClass: "send",
                class: {
                    fileShow: t.previewShow
                }
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.previewShow,
                    expression: "previewShow"
                }],
                staticClass: "preview"
            }, [e("img", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ["image/jpeg", "image/png"].indexOf(this.typeFile) > -1,
                    expression: "['image/jpeg', 'image/png'].indexOf(this.typeFile) > -1"
                }],
                attrs: {
                    src: t.preview,
                    alt: ""
                }
            }), e("span", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ["application/pdf"].indexOf(this.typeFile) > -1,
                    expression: "['application/pdf'].indexOf(this.typeFile) > -1"
                }]
            }, [t._v(".PDF")])]), t._m(0), e("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.message,
                    expression: "message"
                }],
                staticClass: "form-control fs",
                attrs: {
                    maxlength: "524288",
                    placeholder: "" + t.tokens.fullScreenSupport.sendMessage,
                    id: "support-message"
                },
                domProps: {
                    value: t.message
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.sendMessage.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.message = e.target.value)
                    }
                }
            }), t._v(" "), e("div", [e("input", {
                ref: "file",
                attrs: {
                    type: "file",
                    id: "file"
                },
                on: {
                    change: function(e) {
                        return t.loadPreview()
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.sendMessage
                }
            }, [t._v("send")])])]), e("FsLightbox", {
                attrs: {
                    toggler: t.toggler,
                    sources: t.path ? t.path : []
                }
            })], 1)
        }
            , L_ = [function() {
            var t = this
                , e = t._self._c;
            return e("label", {
                staticClass: "attach",
                attrs: {
                    for: "file"
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("attach_file")])])
        }
        ]
            , I_ = s("e099")
            , F_ = s.n(I_)
            , O_ = {
            name: "SupportModal",
            props: ["supportModalIsOpen"],
            components: {
                FsLightbox: F_.a
            },
            computed: {
                ...Object(o["b"])(["supportMessages", "modalFullscreen", "user", "tokens"])
            },
            mounted() {
                setInterval( () => {
                        "support" === this.modalFullscreen.page && this.$store.dispatch(r["R"])
                    }
                    , 3e3),
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
            },
            data() {
                return {
                    restEndpoint: pt["ub"],
                    message: "",
                    ddOver: !1,
                    toggler: !1,
                    path: [],
                    preview: "",
                    previewShow: !1,
                    typeFile: ""
                }
            },
            methods: {
                closeModal() {
                    this.$emit("close-modal")
                },
                convertText(t) {
                    let e = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/gi;
                    return t.replace(e, t => '<a style="color: var(--white); word-break: break-word;" target="_blank" href="' + t + '">' + t + "</a>")
                },
                sendMessage() {
                    if (this.message.trim()) {
                        if (0 === this.user.enable_chat)
                            return this.$store.commit(n["V"], this.tokens.errors.CHAT_DISABLED),
                                this.message = "",
                                this.$refs.file.value = "",
                                this.preview = "",
                                void (this.previewShow = !1);
                        if (this.message && (this.$store.dispatch(r["S"], this.message),
                            this.message = ""),
                            this.$refs.file.files[0])
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(this.$refs.file.files[0].type) > -1) {
                                let t = new FormData;
                                t.append("file", this.$refs.file.files[0]),
                                    this.$store.dispatch(r["e"], t)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE");
                        this.$refs.file.value = "",
                            this.preview = "",
                            this.previewShow = !1
                    }
                },
                over(t) {
                    this.ddOver = t
                },
                addFile(t) {
                    if (this.ddOver = !1,
                        !t.dataTransfer.files)
                        return;
                    let e = new FormData;
                    e.append("file", t.dataTransfer.files[0]),
                        this.$store.dispatch(r["e"], e)
                },
                openImg(t) {
                    this.path[0] = t,
                        this.toggler = !this.toggler
                },
                loadPreview() {
                    let t = this.$refs.file.files[0];
                    this.typeFile = t.type,
                        ["image/jpeg", "image/png"].indexOf(this.typeFile) > -1 ? (this.preview = URL.createObjectURL(t),
                            this.previewShow = !0) : ["application/pdf"].indexOf(this.typeFile) > -1 ? (this.typeFile = t.type,
                            this.preview = "",
                            this.previewShow = !0) : (this.preview = "",
                            this.preview = !1,
                            this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE"))
                }
            },
            watch: {
                supportMessages() {
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
                },
                modalFullscreen: {
                    deep: !0,
                    handler(t) {
                        "support" === t.page && setTimeout( () => {
                                let t = document.getElementById("support-messages");
                                t.scrollTop = t.scrollHeight
                            }
                            , 300)
                    }
                }
            }
        }
            , B_ = O_
            , N_ = (s("ca0a"),
            y(B_, T_, L_, !1, null, "6a2eabbe", null))
            , $_ = N_.exports
            , V_ = {
            name: "Footer",
            components: {
                SupportModal: $_
            },
            mounted() {
                setInterval( () => {
                        this.time = Date.now()
                    }
                    , 1e3)
            },
            data() {
                return {
                    supportEmail: pt["Eb"],
                    schedule: pt["xb"],
                    time: 0,
                    isMobile: Object(l["h"])(),
                    unreadMessageCounter: "0",
                    supportModalIsOpen: !1,
                    newChat: pt["jb"]
                }
            },
            methods: {
                fullscreen() {
                    Object(l["m"])(document.body)
                },
                toggleMute() {
                    this.$store.commit(n["S"], !this.mute)
                },
                showCabinetPage(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                showSupportModal() {
                    this.isMobile ? this.showCabinetPage("support") : this.supportModalIsOpen = !this.supportModalIsOpen
                },
                closeSupportModal() {
                    this.supportModalIsOpen = !1
                }
            },
            computed: {
                ...Object(o["b"])(["mute", "user", "tokens", "supportMessages", "modalFullscreen", "supportUnread", "variables", "staticBase"]),
                varNames() {
                    return this.variables
                }
            },
            watch: {
                supportMessages: {
                    deep: !0,
                    handler(t) {
                        if (t) {
                            let e = "0";
                            for (const s in t)
                                if ((!t[s].time_read || 0 === t[s].time_read) && (++e,
                                e > 100)) {
                                    this.$set(this, "unreadMessageCounter", "99+");
                                    break
                                }
                            this.$set(this, "unreadMessageCounter", e)
                        }
                    }
                }
            }
        }
            , E_ = V_
            , U_ = (s("a745"),
            y(E_, D_, P_, !1, null, "048f77b6", null))
            , H_ = U_.exports
            , j_ = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "side-menu",
                class: {
                    hide: t.isMobile
                }
            }, [e("div", {
                staticClass: "menu"
            }, [e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.market,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("market")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("view_list")]), e("span", [t._v(t._s(t.tokens.sideMenu.marketWatch.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.market,
                    minus: t.modalMenu.market && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("market")
                    }
                }
            }, [t._v(t._s(t.modalMenu.market ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.orders,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("orders")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("local_mall")]), e("span", [t._v(t._s(t.tokens.sideMenu.activeOrders.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.orders,
                    minus: t.modalMenu.orders && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("orders")
                    }
                }
            }, [t._v(t._s(t.modalMenu.orders ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.history,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("history")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("history")]), e("span", [t._v(t._s(t.tokens.sideMenu.tradingHistory.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.history,
                    minus: t.modalMenu.history && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("history")
                    }
                }
            }, [t._v(t._s(t.modalMenu.history ? "remove_circle" : "add_circle"))])]), t.removeEconomicCalendar ? t._e() : e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.calendar,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("calendar")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("today")]), e("span", [t._v(t._s(t.tokens.sideMenu.economicCalendar.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.calendar,
                    minus: t.modalMenu.calendar && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("calendar")
                    }
                }
            }, [t._v(t._s(t.modalMenu.calendar ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.news,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("news")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("campaign")]), e("span", [t._v(t._s(t.tokens.sideMenu.marketNews.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.news,
                    minus: t.modalMenu.news && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("news")
                    }
                }
            }, [t._v(t._s(t.modalMenu.news ? "remove_circle" : "add_circle"))])])])])
        }
            , q_ = []
            , R_ = {
            name: "SideMenu",
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    removeEconomicCalendar: pt["tb"]
                }
            },
            methods: {
                showMenuModal(t) {
                    this.$store.commit(n["F"], {
                        menu: !0
                    });
                    let e = {
                        orders: !1,
                        history: !1,
                        market: !1,
                        calendar: !1,
                        news: !1
                    };
                    e[t] = !0,
                        this.$store.commit(n["M"], e)
                },
                toggleWidget(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                    e[t] && !this.modals.menu && this.$store.commit(n["F"], {
                        menu: !0
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals", "modalMenu"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            }
        }
            , W_ = R_
            , z_ = (s("8bf2"),
            y(W_, j_, q_, !1, null, "9717abba", null))
            , G_ = z_.exports
            , Y_ = function() {
            var t = this
                , e = t._self._c;
            return t.isMobile ? e("div", {
                ref: "landscape",
                staticClass: "modal-wrapper"
            }, [t._m(0)]) : t._e()
        }
            , Z_ = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal"
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("The system is optimized to work"), e("br"), t._v("in a portrait mode on mobile."), e("br"), e("br"), t._v("Please hold your phone vertically.")])]), e("i", {
                staticClass: "material-icons landscape"
            }, [t._v("screen_lock_landscape")])])
        }
        ]
            , J_ = {
            name: "NoLandscape",
            mounted() {
                window.addEventListener("orientationchange", this.handleOrientationChange)
            },
            data() {
                return {
                    isMobile: Object(l["h"])()
                }
            },
            methods: {
                handleOrientationChange() {
                    var t, e;
                    const s = null === (t = window) || void 0 === t || null === (t = t.screen) || void 0 === t || null === (t = t.orientation) || void 0 === t ? void 0 : t.type;
                    s && null !== (e = this.$refs) && void 0 !== e && e.landscape && ("landscape-primary" === s ? this.$refs.landscape.style.display = "flex" : "portrait-primary" === s && (this.$refs.landscape.style.display = "none"))
                }
            }
        }
            , K_ = J_
            , X_ = (s("46d4"),
            y(K_, Y_, Z_, !1, null, "e7dc013a", null))
            , Q_ = X_.exports
            , tC = function() {
            var t = this
                , e = t._self._c;
            return t.modals.symbols ? e("div", {
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "markets"
            }, [t._l(t.counts, (function(s, a) {
                    return e("div", {
                        key: a,
                        staticClass: "item",
                        class: {
                            active: a === t.tabActive
                        },
                        on: {
                            click: function(e) {
                                t.tabActive = a
                            }
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(s ? s.ico : "offline_bolt"))]), e("span", {
                        staticClass: "name"
                    }, [t._v(t._s(t.tokens.markets[a]))])]), e("div", {
                        staticClass: "row"
                    }, [e("span", {
                        staticClass: "num"
                    }, [t._v(t._s(s.count || 0))])])])
                }
            )), e("div", {
                staticClass: "item",
                class: {
                    active: "favorite" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "favorite"
                    }
                }
            }, [e("div", {
                staticClass: "row"
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("stars")]), e("span", {
                staticClass: "name"
            }, [t._v(t._s(t.tokens.symbolsModal.watchlist))])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "num"
            }, [t._v(t._s(t.symbolsFavorite.length))])])])], 2), e("div", {
                staticClass: "details shadow"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.search,
                    expression: "search"
                }],
                staticClass: "search",
                attrs: {
                    placeholder: t.tokens.symbolsModal.searchByName
                },
                domProps: {
                    value: t.search
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.search = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons search-ico"
            }, [t._v("search")]), e("table", [e("thead", [e("tr", [e("th", [t._v(t._s(t.tokens.symbolsModal.asset))]), e("th", [t._v(t._s(t.tokens.symbolsModal.price))]), e("th", {
                staticClass: "toggle-sort",
                on: {
                    click: t.toggleSort
                }
            }, [t._v(t._s(t.tokens.symbolsModal.changePct) + " "), e("i", {
                staticClass: "material-icons"
            }, [t._v(t._s("asc" === t.sort ? "arrow_drop_up" : "desc" === t.sort ? "arrow_drop_down" : ""))])]), e("th")])])]), e("div", {
                staticClass: "scroll"
            }, [e("table", {
                staticClass: "symbols"
            }, [e("tbody", t._l(t.symbolsVisible, (function(s) {
                    return e("tr", {
                        key: s.symbol,
                        class: {
                            hide: s.market !== t.tabActive && !("favorite" === t.tabActive && -1 !== t.symbolsFavorite.indexOf(s.symbol)) || t.search && !s.symbol.toLowerCase().includes(t.search.toLowerCase()) && !s.alias.toLowerCase().includes(t.search.toLowerCase()) || s.symbol.includes("demo") || !s.visible
                        },
                        on: {
                            click: function(e) {
                                return t.addSymbol(s.symbol)
                            }
                        }
                    }, [e("td", [e("div", {
                        staticClass: "row",
                        class: t.sessionState[s.symbol] ? "" : "close"
                    }, [e("span", {
                        staticClass: "symbol",
                        class: "symbol-" + s.symbol.toUpperCase()
                    }), e("span", {
                        staticClass: "name",
                        class: t.sessionState[s.symbol] ? "" : "close"
                    }, [t._v(t._s(s.alias))])])]), e("td", {
                        staticClass: "price",
                        class: t.sessionState[s.symbol] ? "" : "close"
                    }, [t._v(" " + t._s((s.quote && s.quote.bid ? parseFloat(s.quote.bid) : 0).toFixed(s.precision)) + " ")]), e("td", {
                        staticClass: "payout",
                        class: {
                            red: s.quote && s.quote.changePct < 0,
                            green: s.quote && 0 < s.quote.changePct,
                            hide: !t.sessionState[s.symbol]
                        }
                    }, [t._v(" " + t._s(s.quote && s.quote.changePct ? s.quote.changePct.toFixed(2) + "%" : "-") + " ")]), e("td", {
                        staticClass: "payout close",
                        class: {
                            hide: t.sessionState[s.symbol]
                        }
                    }, [t._v(" Closed ")]), e("td", [e("i", {
                        staticClass: "material-icons fav",
                        class: {
                            active: -1 !== t.symbolsFavorite.indexOf(s.symbol)
                        },
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.toggleFavorite(s.symbol)
                            }
                        }
                    }, [t._v("star")])]), e("td", [e("i", {
                        staticClass: "material-icons fav",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showAssetsInfoModal(s.symbol)
                            }
                        }
                    }, [t._v("info_outlined")])])])
                }
            )), 0)])])])])]) : t._e()
        }
            , eC = []
            , sC = {
            name: "SymbolsModal",
            mounted() {
                const t = () => {
                        let e = Date.now();
                        this.time = e,
                            setTimeout(t, 6e4 * Math.ceil(e / 6e4) - e)
                    }
                ;
                let e = Date.now();
                setTimeout(t, 6e4 * Math.ceil(e / 6e4) - e)
            },
            data() {
                return {
                    tabActive: "forex",
                    search: "",
                    sort: "",
                    symbolsVisible: [],
                    time: Date.now()
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        symbols: !1
                    })
                },
                showAssetsInfoModal(t) {
                    this.$store.commit(n["H"], {
                        symbol: t
                    }),
                        this.$store.commit(n["F"], {
                            assetsInfo: !0
                        }),
                        this.$store.commit(n["F"], {
                            symbols: !1
                        })
                },
                toggleFavorite(t) {
                    this.$store.commit(n["Fb"], {
                        action: -1 === this.symbolsFavorite.indexOf(t) ? "add" : "remove",
                        symbol: t
                    })
                },
                addSymbol(t) {
                    "add" === this.modalSymbols.action ? (this.$store.commit(n["Ib"], {
                        symbol: t,
                        frame: 1
                    }),
                        this.$store.commit(n["F"], {
                            symbols: !1
                        })) : (this.modalSymbols.id ? this.$store.commit(n["Eb"], {
                        id: this.modalSymbols.id,
                        symbol: t
                    }) : this.$store.commit(n["Ib"], {
                        symbol: t,
                        gridId: this.modalSymbols.gridId,
                        frame: 1
                    }),
                        this.$store.commit(n["F"], {
                            symbols: !1
                        }))
                },
                toggleSort() {
                    switch (this.sort) {
                        case "":
                            return void (this.sort = "desc");
                        case "desc":
                            return void (this.sort = "asc");
                        case "asc":
                            return void (this.sort = "")
                    }
                },
                makeSort() {
                    this.symbolsVisible = [];
                    for (let t in this.symbols)
                        this.symbolsVisible.push(this.symbols[t]);
                    "desc" !== this.sort ? "asc" === this.sort && this.symbolsVisible.sort( (t, e) => t.quote.changePct - e.quote.changePct) : this.symbolsVisible.sort( (t, e) => e.quote.changePct - t.quote.changePct)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "sessions", "symbolGroups", "symbolsFavorite", "modalSymbols", "tokens", "staticBase"]),
                counts() {
                    let t = {};
                    for (let e in this.symbolGroups)
                        t[this.symbolGroups[e]] = {
                            count: 0,
                            ico: "language"
                        };
                    for (let e in this.symbols)
                        this.symbols[e].symbol.includes("demo") || t[this.symbols[e].market].count++;
                    return t.forex && (t.forex.ico = "language"),
                    t.commodities && (t.commodities.ico = "offline_bolt"),
                    t.crypto && (t.crypto.ico = "group_work"),
                    t.stocks && (t.stocks.ico = "contactless"),
                    t.indices && (t.indices.ico = "explore"),
                    t.metals && (t.metals.ico = "view_stream"),
                    t.nft && (t.nft.ico = "collections"),
                        t
                },
                sessionState() {
                    let t = {};
                    for (let e in this.sessions)
                        t[e] = Object(l["a"])(this.sessions[e], this.time);
                    return t
                }
            },
            watch: {
                sort() {
                    this.makeSort()
                },
                modals: {
                    deep: !0,
                    handler(t) {
                        t.symbols ? this.makeSort() : this.symbolsVisible = []
                    }
                }
            }
        }
            , aC = sC
            , iC = (s("a78b"),
            y(aC, tC, eC, !1, null, "01dedfd1", null))
            , oC = iC.exports
            , nC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.profitCalculator
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "close",
                on: {
                    click: t.hideModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close")])]), e("div", {
                staticClass: "scroll-container"
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "buttons"
            }, [e("button", {
                staticClass: "button-buy",
                class: [t.orderType ? "" : "active"],
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.switchTo("buy")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.profitCalculatorModal.buy) + " ")]), e("button", {
                staticClass: "button-sell",
                class: [t.orderType ? "active" : ""],
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.switchTo("sell")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.profitCalculatorModal.sell) + " ")])]), e("div", {
                staticClass: "calculate"
            }, [e("div", {
                staticClass: "inner"
            }, [e("div", {
                staticClass: "volume-with-buttons value-container",
                class: {
                    transparent: t.inputContainers.volumeTransparent
                },
                on: {
                    click: function(e) {
                        return t.focus("volume")
                    }
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.volume))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.volume,
                    expression: "volume"
                }],
                ref: "volumeInput",
                staticClass: "value",
                attrs: {
                    inputmode: "decimal",
                    type: "number"
                },
                domProps: {
                    value: t.volume
                },
                on: {
                    keypress: t.validateInput,
                    input: function(e) {
                        e.target.composing || (t.volume = e.target.value)
                    }
                }
            })])]), e("div", {
                staticClass: "volume-with-buttons value-container",
                class: {
                    transparent: t.inputContainers.entryPriceTransparent
                },
                on: {
                    click: function(e) {
                        return t.focus("entryPrice")
                    }
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.entryPrice))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.entryPrice,
                    expression: "entryPrice"
                }],
                ref: "entryPriceInput",
                staticClass: "value",
                attrs: {
                    inputmode: "decimal",
                    type: "number"
                },
                domProps: {
                    value: t.entryPrice
                },
                on: {
                    keypress: t.validateInput,
                    input: function(e) {
                        e.target.composing || (t.entryPrice = e.target.value)
                    }
                }
            })])]), e("div", {
                staticClass: "volume-with-buttons value-container",
                class: {
                    transparent: t.inputContainers.takeProfitTransparent
                },
                on: {
                    click: function(e) {
                        return t.focus("takeProfit")
                    }
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.takeProfit))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.takeProfit,
                    expression: "takeProfit"
                }],
                ref: "takeProfitInput",
                staticClass: "value",
                attrs: {
                    inputmode: "decimal",
                    type: "number"
                },
                domProps: {
                    value: t.takeProfit
                },
                on: {
                    keypress: t.validateInput,
                    input: function(e) {
                        e.target.composing || (t.takeProfit = e.target.value)
                    }
                }
            })])]), e("div", {
                staticClass: "volume-with-buttons value-container",
                class: {
                    transparent: t.inputContainers.stopLossTransparent
                },
                on: {
                    click: function(e) {
                        return t.focus("stopLoss")
                    }
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.stopLoss))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.stopLoss,
                    expression: "stopLoss"
                }],
                ref: "stopLossInput",
                staticClass: "value",
                attrs: {
                    inputmode: "decimal",
                    type: "number"
                },
                domProps: {
                    value: t.stopLoss
                },
                on: {
                    keypress: t.validateInput,
                    input: function(e) {
                        e.target.composing || (t.stopLoss = e.target.value)
                    }
                }
            })])]), e("span", {
                staticClass: "max-borrow"
            }, [t._v(" " + t._s(t.tokens.profitCalculatorModal.maxPosition) + ": " + t._s(Math.abs(Number(t.maxPosition.toFixed(2)))) + " " + t._s(t.symbol.alias))])]), e("button", {
                staticClass: "calculate-btn",
                on: {
                    click: t.calculate
                }
            }, [t._v(t._s(t.tokens.profitCalculatorModal.calculate) + " ")])])]), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "inner"
            }, [e("div", [e("h2", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.calculationsFor) + " " + t._s(t.symbol.alias))]), e("ul", [e("li", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: 1 == t.showLeverage,
                    expression: "showLeverage==1"
                }]
            }, [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.leverage))]), e("div", {
                staticClass: "value"
            }, [t._v("1:" + t._s(t.results.leverage))])])]), e("li", [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.requiredMargin))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.results.margin) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])])]), e("li", [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.profitFromTP))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.results.profit) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])])]), e("li", [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.lossFromSL))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(Math.abs(t.results.loss)) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])])]), e("li", [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v(t._s(t.tokens.profitCalculatorModal.roe))]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.results.roe > 0 ? "+" : "") + t._s(t.results.roe.toFixed(2)) + " "), e("span", [t._v("%")])])])]), e("li", [e("div", [e("h3", {
                staticClass: "pnl"
            }, [t._v("PIP")]), e("div", {
                staticClass: "value"
            }, [t._v(t._s(t.results.pip) + " "), e("span", [t._v(t._s(t.activeAccount.currency))])])])])])])])])])])])
        }
            , rC = []
            , lC = {
            name: "modalProfitCalculator",
            data() {
                return {
                    showLeverage: pt["yb"],
                    volume: "",
                    entryPrice: "",
                    stopLoss: "",
                    takeProfit: "",
                    orderType: !1,
                    inputContainers: {
                        volumeTransparent: !1,
                        entryPriceTransparent: !1,
                        stopLossTransparent: !1,
                        takeProfitTransparent: !1
                    },
                    results: {
                        leverage: 1,
                        margin: 0,
                        profit: 0,
                        loss: 0,
                        roe: 0,
                        pip: 0
                    }
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        profitCalculator: !1
                    })
                },
                switchTo(t) {
                    "buy" === t && (this.orderType = !1),
                    "sell" === t && (this.orderType = !0)
                },
                focus(t) {
                    for (let e in this.inputContainers)
                        this.inputContainers[e] = !1;
                    this.inputContainers[t + "Transparent"] = !0,
                        this.$refs[t + "Input"].focus()
                },
                validateInput(t) {
                    "e" === t.key && t.preventDefault(),
                    "." !== t.key && "," !== t.key || -1 === t.target.value.indexOf(".") && -1 === t.target.value.indexOf(",") || t.preventDefault()
                },
                calculate() {
                    var t;
                    this.results.leverage = this.symbol.leverage_default || this.activeAccount.leverage;
                    let e = this.volume / this.results.leverage
                        , s = this.volume * Math.pow(.1, this.symbol.precision)
                        , a = 1
                        , i = this.symbol.base_currency
                        , o = 1
                        , n = this.activeAccount.currency;
                    void 0 !== this.symbols["USD" + i] ? a = this.symbols["USD" + i].quote.bid : void 0 !== this.symbols[i + "USD"] && (a = 1 / this.symbols[i + "USD"].quote.bid),
                        void 0 !== this.symbols["USD" + n] ? o = this.symbols["USD" + n].quote.bid : void 0 !== this.symbols[n + "USD"] && (o = 1 / this.symbols[n + "USD"].quote.bid);
                    let r = o / a;
                    s *= r;
                    let l = (null === (t = this.symbol) || void 0 === t || null === (t = t.quote) || void 0 === t ? void 0 : t.bid) || 1;
                    this.results.margin = (e * l * r).toFixed(this.activeAccount.precision) || 0,
                        this.results.profit = (s * (this.orderType ? this.entryPrice - this.takeProfit : this.takeProfit - this.entryPrice) * Math.pow(10, this.symbol.precision)).toFixed(this.activeAccount.precision) || 0,
                        this.results.loss = (s * (this.orderType ? this.entryPrice - this.stopLoss : this.stopLoss - this.entryPrice) * Math.pow(10, this.symbol.precision)).toFixed(this.activeAccount.precision) || 0,
                        this.results.roe = 100 * this.results.profit / this.results.margin || 0,
                        this.results.pip = Number(s.toFixed(this.activeAccount.precision) || 0)
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "chartActive", "charts", "activeAccount", "tokens"]),
                PNL() {
                    return 5 * (this.volume - this.entryPrice)
                },
                ROE() {
                    return this.entryPrice / 1.1 * .5 - (this.volume + this.takeProfit - this.stopLoss) || 0
                },
                maxPosition() {
                    var t;
                    let e = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        equity: 0,
                        margin: 0
                    };
                    if (!this.activeAccount.id)
                        return 0;
                    e.balance = this.activeAccount.balance,
                        e.credit = this.activeAccount.credit;
                    for (let n in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[n];
                        e.margin += t.margin,
                        this.symbols[t.symbol] && (e.profit += t.type < 2 ? t.point * (t.type ? t.price_open - this.symbols[t.symbol].quote.ask : this.symbols[t.symbol].quote.bid - t.price_open) * Math.pow(10, this.symbols[t.symbol].precision) : 0)
                    }
                    let s = e.balance + e.credit + e.profit - e.margin
                        , a = this.symbol.leverage_default || this.activeAccount.leverage
                        , i = s * a
                        , o = (null === (t = this.symbol) || void 0 === t || null === (t = t.quote) || void 0 === t ? void 0 : t.bid) || 1;
                    if (this.symbol.base_currency === this.activeAccount.currency ? i /= o : void 0 !== this.symbols[this.symbol.base_currency + this.activeAccount.currency] ? i /= o * this.symbols[this.symbol.base_currency + this.activeAccount.currency].quote.bid : void 0 !== this.symbols[this.activeAccount.currency + this.symbol.base_currency] && (i /= o / this.symbols[this.activeAccount.currency + this.symbol.base_currency].quote.bid),
                    this.symbol.lot_step && this.symbol.lot) {
                        let t = this.symbol.lot_step * this.symbol.lot;
                        i = Math.floor(i / t) * t
                    }
                    return i
                },
                symbol() {
                    let t = {
                        alias: ""
                    };
                    return this.chartActive && this.charts[this.chartActive] && this.symbols[this.charts[this.chartActive].symbol] || t
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        var e;
                        t.profitCalculator && (this.orderType = !1,
                            this.volume = this.symbol.lot,
                            this.entryPrice = (null === (e = this.symbol) || void 0 === e || null === (e = e.quote) || void 0 === e ? void 0 : e.bid) || 1,
                            this.stopLoss = (this.entryPrice - 100 * Math.pow(.1, this.symbol.precision)).toFixed(this.symbol.precision),
                            this.takeProfit = (this.entryPrice + 100 * Math.pow(.1, this.symbol.precision)).toFixed(this.symbol.precision),
                            this.calculate())
                    }
                }
            }
        }
            , cC = lC
            , dC = (s("e898"),
            y(cC, nC, rC, !1, null, "75d26c8b", null))
            , uC = dC.exports
            , mC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "cabinet-modal",
                class: {
                    hide: !t.modals.assetsInfo
                }
            }, [t.modals.assetsInfo ? e("div", [e("div", {
                staticClass: "background"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + `backgrounds/${t.symbols[t.modalAssetsInfo.symbol].symbol.toUpperCase()}.jpg`,
                    alt: ""
                }
            })]), e("div", {
                staticClass: "title"
            }, [e("div", {
                staticClass: "close",
                on: {
                    click: t.hideModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close")])]), e("div", {
                staticClass: "name"
            }, [t._v(t._s(t.tokens.assetInfoModal.assetInfo))])]), e("div", {
                staticClass: "container"
            }, [e("div", {
                staticClass: "divider nomobile"
            }), e("div", {
                staticClass: "menu"
            }, [e("div", {
                staticClass: "box"
            }, [e("div", {
                staticClass: "info-brand"
            }, [e("span", {
                staticClass: "symbol",
                class: t.assetSymbol()
            }), e("div", [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].alias))])]), e("div", {
                staticClass: "state"
            }, [e("div", {
                staticClass: "open-trade"
            }, [t._v(t._s(t.sessionState))])])]), e("div", {
                staticClass: "back"
            }, [e("div", {
                staticClass: "item",
                class: {
                    active: "trading" === t.page
                },
                on: {
                    click: function(e) {
                        t.page = "trading"
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.tradingConditions))]), e("div", [e("div", {
                staticClass: "item",
                class: {
                    active: "information" === t.page
                },
                on: {
                    click: function(e) {
                        t.page = "information"
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.information))])])])]), e("div", {
                staticClass: "content"
            }, [t.sessionStateBool ? e("div", [e("div", {
                staticClass: "trade"
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.bid))]), e("div", {
                staticClass: "values"
            }, [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].quote.bid.toFixed(t.symbols[t.modalAssetsInfo.symbol].precision)) + " ")])]), e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.ask))]), e("div", {
                staticClass: "values"
            }, [t._v(t._s(t.symbols[t.modalAssetsInfo.symbol].quote.ask.toFixed(t.symbols[t.modalAssetsInfo.symbol].precision)) + " ")])]), e("div", {
                staticClass: "box-trade"
            }, [e("div", {
                staticClass: "title-trade"
            }, [t._v(t._s(t.tokens.assetInfoModal.sessionChange))]), e("div", {
                staticClass: "cur",
                class: t.symbols[t.modalAssetsInfo.symbol].quote ? t.symbols[t.modalAssetsInfo.symbol].quote.changePct < 0 ? "red" : 0 < t.symbols[t.modalAssetsInfo.symbol].quote.changePct ? "green" : "" : ""
            }, [t._v(" " + t._s((t.symbols[t.modalAssetsInfo.symbol].quote && t.symbols[t.modalAssetsInfo.symbol].quote.changePct > 0 ? "+" : "") + (t.symbols[t.modalAssetsInfo.symbol].quote && t.symbols[t.modalAssetsInfo.symbol].quote.changePct ? t.symbols[t.modalAssetsInfo.symbol].quote.changePct : 0).toFixed(2) + "%") + " ")])])]), e("div", {
                staticClass: "btns-wrapper"
            }, [e("div", {
                staticClass: "btns"
            }, [e("i", {
                staticClass: "material-icons fav",
                class: {
                    active: -1 !== t.symbolsFavorite.indexOf(t.modalAssetsInfo.symbol)
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleFavorite(t.modalAssetsInfo.symbol)
                    }
                }
            }, [t._v("star")]), e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.changeSymbol(t.modalAssetsInfo.symbol)
                    }
                }
            }, [t._v(t._s(t.tokens.assetInfoModal.tradeNow.toUpperCase()))])])])])]) : t._e(), e("div", [e("Information", {
                staticClass: "cabinet-item",
                class: {
                    hide: "information" !== t.page
                },
                attrs: {
                    chart: t.charts,
                    symbolActive: t.modalAssetsInfo.symbol
                }
            })], 1), e("TradingConditions", {
                staticClass: "cabinet-item",
                class: {
                    hide: "trading" !== t.page
                },
                attrs: {
                    symbolActive: t.modalAssetsInfo.symbol
                }
            })], 1), e("div", {
                staticClass: "divider nomobile"
            })])]) : t._e()])
        }
            , pC = []
            , hC = {
            name: "AssetsInfoModal",
            components: {
                Information: pn,
                TradingConditions: yn
            },
            mounted() {
                let t = Date.now();
                setTimeout( () => {
                        setInterval( () => {
                                this.checkSessionState()
                            }
                            , 6e4)
                    }
                    , 6e4 * Math.ceil(t / 6e4) - t)
            },
            data() {
                return {
                    newData: [],
                    sessionState: "",
                    sessionStateBool: !1,
                    page: "trading",
                    brand: pt["e"]
                }
            },
            methods: {
                assetSymbol() {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + this.symbols[this.modalAssetsInfo.symbol].symbol.toUpperCase().replace(".", "-");
                    switch (this.symbols[this.modalAssetsInfo.symbol].symbol) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + this.symbols[this.modalAssetsInfo.symbol].symbol.toUpperCase().replace(".", "-")
                    }
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.modalAssetsInfo.chartActive
                    }),
                        this.$store.commit(n["F"], {
                            assetsInfo: !1
                        })
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        assetsInfo: !1
                    })
                },
                toggleFavorite(t) {
                    this.$store.commit(n["Fb"], {
                        action: -1 === this.symbolsFavorite.indexOf(t) ? "add" : "remove",
                        symbol: t
                    })
                },
                checkSessionState() {
                    if (!this.symbols[this.modalAssetsInfo.symbol])
                        return;
                    if ("[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]" === JSON.stringify(this.symbols[this.modalAssetsInfo.symbol].sessions))
                        return this.sessionState = this.tokens.assetInfoModal.open247,
                            void (this.sessionStateBool = !0);
                    let t = Object(l["f"])()
                        , e = t.getUTCDay()
                        , s = t.getUTCHours()
                        , a = t.getUTCMinutes()
                        , i = this.symbols[this.modalAssetsInfo.symbol].sessions[e][s]
                        , o = s > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e][s - 1] : e > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e - 1][23] : this.symbols[this.modalAssetsInfo.symbol].sessions[6][23]
                        , n = s > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e][s + 1] : e > 0 ? this.symbols[this.modalAssetsInfo.symbol].sessions[e + 1][23] : this.symbols[this.modalAssetsInfo.symbol].sessions[6][23];
                    const r = t => {
                            let e = [];
                            for (let s = 0; s < 7; s++)
                                e = e.concat(t[s]);
                            return e
                        }
                        , c = t => t > 0 && t < 1 && 60 * t > a ? this.tokens.assetInfoModal.opens : t > 0 && t < 1 && 60 * t < a || t ? this.tokens.assetInfoModal.closes : this.tokens.assetInfoModal.opens
                        , d = t => {
                            let e = Object(l["f"])()
                                , s = ""
                                , a = t.getDay()
                                , i = e.getDay();
                            if (a === i)
                                s = this.tokens.assetInfoModal.today;
                            else if (a - i === 1 || a - i === -6)
                                s = this.tokens.assetInfoModal.tomorrow;
                            else
                                switch (a) {
                                    case 0:
                                        s = this.tokens.assetInfoModal.sunday;
                                        break;
                                    case 1:
                                        s = this.tokens.assetInfoModal.monday;
                                        break;
                                    case 2:
                                        s = this.tokens.assetInfoModal.tuesday;
                                        break;
                                    case 3:
                                        s = this.tokens.assetInfoModal.wednesday;
                                        break;
                                    case 4:
                                        s = this.tokens.assetInfoModal.thursday;
                                        break;
                                    case 5:
                                        s = this.tokens.assetInfoModal.friday;
                                        break;
                                    case 6:
                                        s = this.tokens.assetInfoModal.saturday;
                                        break
                                }
                            return s + " " + this.tokens.assetInfoModal.at + " " + ("0" + t.getHours()).slice(-2) + ":" + ("0" + t.getMinutes()).slice(-2)
                        }
                    ;
                    if (1 !== i && 0 !== i && a < 60 * i || 0 !== n && 1 !== n)
                        t.setUTCHours(0 === i ? ++s : s),
                            t.setUTCMinutes(0 === i ? 60 * n : 60 * i),
                            this.sessionState = ((0 === i ? 60 * i : 60 * n < a ? !o : o) ? this.tokens.assetInfoModal.closes : this.tokens.assetInfoModal.opens) + " " + d(t),
                            this.sessionStateBool = !!(0 === i ? 60 * i : 60 * n < a ? !o : o);
                    else {
                        let a = 24 * e + s
                            , i = 1
                            , o = r(this.symbols[this.modalAssetsInfo.symbol].sessions)
                            , n = o[a]
                            , l = o[a]
                            , u = !1
                            , m = l ? 0 : 1
                            , p = 0;
                        while (a < 168 && (l !== m || l > m) && p < 200)
                            a++,
                                p++,
                                l = o[a],
                                -1 !== [0, 1].indexOf(o[a]) || u ? i += 1 : (i += o[a],
                                    u = !0),
                            a >= 168 && (a = 0,
                                e = 0,
                                s = 0,
                                i = 0,
                                n = o[a],
                                l = o[a],
                                m = l ? 0 : 1);
                        t.setUTCHours(s + Math.floor(i - 1)),
                            t.setUTCMinutes(Math.round(60 * (i - Math.floor(i)))),
                            this.sessionState = c(n) + " " + d(t),
                            this.sessionStateBool = !!n
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalAssetsInfo", "symbols", "symbolsFavorite", "charts", "modals", "tokens", "staticBase"])
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.modalAssetsInfo || (this.page = "trading")
                    }
                },
                modalAssetsInfo: {
                    deep: !0,
                    handler() {
                        this.checkSessionState()
                    }
                }
            }
        }
            , vC = hC
            , fC = (s("1d77"),
            y(vC, mC, pC, !1, null, "44ce585e", null))
            , gC = fC.exports
            , bC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.balance
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.activeAccount.demo ? t.tokens.balanceModal.practice : t.tokens.balanceModal.real) + " " + t._s(t.tokens.balanceModal.account) + " #" + t._s(t.activeAccount.id))]), e("div", {
                staticClass: "list"
            }, [e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.balance))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val-large"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s((t.balances.balance > 0 ? t.balances.balance : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.credit))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s((t.balances.credit > 0 ? t.balances.credit : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.invested))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s((t.balances.orders * (1 / t.conversions[t.activeAccount.currency])).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.balances.profit >= 0 ? t.tokens.balanceModal.profit : t.tokens.balanceModal.loss))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val",
                class: t.balances.profit > 0 ? "green" : t.balances.profit < 0 ? "red" : ""
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s(t.balances.profit.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.equity))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val-large"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency)) + t._s(t.balances.equity_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.margin))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.balances.margin.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.marginLevel))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val-large"
            }, [t._v(t._s(0 !== t.balances.margin ? t.balances.margin_level_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) + "%" : "-"))])]), e("div", {
                staticClass: "item"
            }, [e("div", [t._v(t._s(t.tokens.balanceModal.marginFree))]), e("div", {
                staticClass: "divider"
            }), e("div", {
                staticClass: "val-large"
            }, [t._v(t._s(0 !== t.balances.margin ? t.currencySign(t.activeAccount.currency) + t.balances.free_margin_apprx.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) : "-"))])])])]), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.balanceModal.myAccounts))]), t._l(t.accounts, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "acc-row real",
                        class: {
                            active: t.activeAccount.id === s.id,
                            real: !s.demo,
                            demo: s.demo
                        },
                        on: {
                            click: function(e) {
                                return t.changeAccount(s.id)
                            }
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "sign"
                    }, [t._v(t._s(t.currencySign(s.currency)))]), e("div", {
                        staticClass: "col"
                    }, [e("span", [t._v(t._s(s.account_name && "MAIN" != s.account_name ? s.account_name : "main" === s.group ? "STANDARD" : s.group.toUpperCase()) + " " + t._s(t.tokens.balanceModal.account) + " #" + t._s(s.id))]), e("span", {
                        staticClass: "balance"
                    }, [t._v(t._s(t.currencySign(s.currency)) + t._s(s.balance.toLocaleString(void 0, {
                        minimumFractionDigits: s.precision,
                        maximumFractionDigits: s.precision
                    })))])])]), e("div", {
                        staticClass: "button",
                        class: {
                            hide: t.activeAccount.id === s.id
                        }
                    }, [t._v(t._s(t.tokens.fullScreenAccounts.makeActive))]), e("span", {
                        staticClass: "green acc-active",
                        class: {
                            hide: t.activeAccount.id !== s.id
                        }
                    }, [t._v(t._s(t.tokens.fullScreenAccounts.active))])])
                }
            ))], 2)])])
        }
            , yC = []
            , _C = {
            name: "BalanceModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        balance: !1
                    })
                },
                changeAccount(t) {
                    this.$store.commit(n["b"], t)
                },
                resetDemo() {
                    this.$store.dispatch(r["l"])
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "activeAccount", "accounts", "symbols", "tokens", "conversions"]),
                balances() {
                    let t = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        margin: 0,
                        margin_level_apprx: 0,
                        free_margin_apprx: 0,
                        equity_apprx: 0
                    };
                    if (!this.activeAccount.id)
                        return t;
                    t.balance = this.activeAccount.balance,
                        t.credit = this.activeAccount.credit;
                    let e = {};
                    for (let s in this.activeAccount.orders) {
                        let a = this.activeAccount.orders[s];
                        a.easy_amount = a.easy_amount || a.margin,
                            t.orders += a.easy_amount,
                        void 0 === e[a.symbol] && (e[a.symbol] = 0),
                            e[a.symbol] += a.type % 2 ? -a.margin : a.margin,
                        this.symbols[a.symbol] && (t.profit += a.type < 2 ? a.point * (a.type ? a.price_open - this.symbols[a.symbol].quote.ask : this.symbols[a.symbol].quote.bid - a.price_open) * Math.pow(10, this.symbols[a.symbol].precision) + a.swap + a.commission : 0)
                    }
                    for (let s in e)
                        t.margin += Math.abs(e[s]) * (1 / this.conversions[this.activeAccount.currency]);
                    return t.equity = t.balance + t.credit + t.profit,
                        t.margin_level_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit !== 0 && t.margin ? (t.equity / t.margin * 100).toFixed(2) : "",
                        t.free_margin_apprx = this.activeAccount.balance + this.activeAccount.credit + t.profit - t.margin,
                        t.equity_apprx = t.equity,
                        t
                }
            }
        }
            , CC = _C
            , wC = (s("251a"),
            y(CC, bC, yC, !1, null, "7c8aa498", null))
            , kC = wC.exports
            , SC = function() {
            var t = this
                , e = t._self._c;
            return ["tradingviewonline", "stage"].includes(t.brand) ? e("TradingViewLoginModal") : t._e()
        }
            , xC = []
            , MC = {
            name: "CustomLoginModals",
            components: {
                TradingViewLoginModal: yr
            },
            data() {
                return {
                    brand: pt["e"]
                }
            }
        }
            , AC = MC
            , DC = y(AC, SC, xC, !1, null, null, null)
            , PC = DC.exports
            , TC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.grids
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.gridsModal.chartGrids))])]), e("div", {
                staticClass: "content"
            }, [e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart1))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid",
                class: {
                    active: "1-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("1-1")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart2))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid",
                class: {
                    active: "2-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("2-1")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "2-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("2-2")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), e("div", {
                staticClass: "row item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart3))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid col",
                class: {
                    active: "3-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-1")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), t._m(0)]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "3-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-2")
                    }
                }
            }, [t._m(1), e("div", {
                staticClass: "row item"
            })]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-3" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-3")
                    }
                }
            }, [t._m(2), e("div", {
                staticClass: "col item"
            })]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-4" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-4")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), t._m(3)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "3-5" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("3-5")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })])])]), e("div", {
                staticClass: "line"
            }, [e("div", {
                staticClass: "line-title"
            }, [t._v(t._s(t.tokens.gridsModal.chart4))]), e("div", {
                staticClass: "grids"
            }, [e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-1" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-1")
                    }
                }
            }, [t._m(4), t._m(5)]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-2" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-2")
                    }
                }
            }, [t._m(6), e("div", {
                staticClass: "row item"
            })]), e("div", {
                staticClass: "grid col",
                class: {
                    active: "4-3" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-3")
                    }
                }
            }, [e("div", {
                staticClass: "row item"
            }), t._m(7)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "4-4" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-4")
                    }
                }
            }, [e("div", {
                staticClass: "col item"
            }), t._m(8)]), e("div", {
                staticClass: "grid",
                class: {
                    active: "4-5" === t.gridLayout
                },
                on: {
                    click: function(e) {
                        return t.changeGrid("4-5")
                    }
                }
            }, [t._m(9), e("div", {
                staticClass: "col item"
            })])])])])])])
        }
            , LC = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col item"
            }), e("div", {
                staticClass: "col item"
            })])
        }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "row"
                }, [e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                }), e("div", {
                    staticClass: "col item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
            , function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "col"
                }, [e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                }), e("div", {
                    staticClass: "row item"
                })])
            }
        ]
            , IC = {
            name: "GridsModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        grids: !1
                    })
                },
                changeGrid(t) {
                    this.$store.commit(n["z"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "gridLayout", "tokens"])
            }
        }
            , FC = IC
            , OC = (s("c28d"),
            y(FC, TC, LC, !1, null, "1068d30d", null))
            , BC = OC.exports
            , NC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.account
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "left"
            }, [e("div", {
                staticClass: "block"
            }, [e("div", {
                staticClass: "name"
            }, [t._v(t._s(t.user.fullname))]), e("div", {
                staticClass: "email"
            }, [t._v(t._s(t.user.email))])]), e("div", {
                staticClass: "block"
            }, [e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "flag",
                class: "flag-" + t.countryToCode(t.user.country).toLowerCase()
            }), e("div", {
                staticClass: "country"
            }, [t._v(t._s(t.user.country))])]), e("div", {
                staticClass: "double"
            }, [e("div", [e("div", {
                staticClass: "label"
            }, [t._v(t._s(t.tokens.accountModal.dateRegistered))]), e("div", {
                staticClass: "val"
            }, [t._v(t._s(new Date(1e3 * t.user.created).toISOString().split("T")[0]))])]), e("div", [e("div", {
                staticClass: "label"
            }, [t._v(t._s(t.tokens.accountModal.userId))]), e("div", {
                staticClass: "val"
            }, [t._v(t._s(t.user.id))])])])])]), e("div", {
                staticClass: "right"
            }, [e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("dashboard")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("dashboard")]), e("span", [t._v(t._s(t.tokens.accountModal.dashboard))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("personal")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("account_circle")]), e("span", [t._v(t._s(t.tokens.accountModal.personalData))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("deposit")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add_circle")]), e("span", [t._v(t._s(t.tokens.accountModal.deposit))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("withdrawal")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("monetization_on")]), e("span", [t._v(t._s(t.tokens.accountModal.withdrawFunds))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("savings")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("savings")]), e("span", [t._v(t._s(t.tokens.accountModal.savings))])]), e("div", {
                staticClass: "item",
                on: {
                    click: function(e) {
                        return t.openFullscreen("settings")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("settings")]), e("span", [t._v(t._s(t.tokens.accountModal.settings))])]), e("div", {
                staticClass: "border"
            }), e("div", {
                staticClass: "item",
                on: {
                    click: t.logout
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("exit_to_app")]), e("span", [t._v(t._s(t.tokens.accountModal.logout))])])])])])
        }
            , $C = []
            , VC = {
            name: "AccountModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        account: !1
                    })
                },
                openFullscreen(t) {
                    this.$store.commit(n["L"], {
                        page: t
                    }),
                        this.$store.commit(n["F"], {
                            account: !1,
                            fullscreen: !0
                        })
                },
                logout() {
                    this.$store.dispatch(r["x"])
                },
                countryToCode: l["c"]
            },
            computed: {
                ...Object(o["b"])(["modals", "user", "tokens", "staticBase"])
            }
        }
            , EC = VC
            , UC = (s("043b"),
            y(EC, NC, $C, !1, null, "39b1d7d5", null))
            , HC = UC.exports
            , jC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "toasts-container"
            }, t._l(t.displayNotifications, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "toast"
                    }, [e("div", {
                        staticClass: "icon"
                    }, ["order" === s.type || "order_open" === s.type ? e("span", {
                        staticClass: "symbol",
                        class: "symbol-" + s.data.symbol.toUpperCase()
                    }) : t._e(), e("i", {
                        staticClass: "material-icons",
                        class: s.classes
                    }, [t._v(t._s(s.icon))])]), e("div", {
                        staticClass: "content",
                        class: {
                            support: "support" === s.type
                        },
                        on: {
                            click: function(e) {
                                "support" === s.type && t.showCabinetPage("support")
                            }
                        }
                    }, [e("div", {
                        staticClass: "title"
                    }, [t._v(t._s(s.title))]), e("div", {
                        staticClass: "text",
                        class: s.textClass
                    }, [e("span", {
                        staticClass: "profit",
                        class: {
                            hide: "order" !== s.type && "transaction" !== s.type
                        }
                    }, [t._v(t._s(s.profitText))]), e("span", [t._v(t._s(s.text))])])]), e("i", {
                        staticClass: "material-icons close",
                        on: {
                            click: function(e) {
                                return t.hideNotification(s.id)
                            }
                        }
                    }, [t._v("close")])])
                }
            )), 0)
        }
            , qC = []
            , RC = {
            name: "Notifications",
            methods: {
                showCabinetPage(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                hideNotification(t) {
                    this.$store.commit(n["Y"], t)
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["notifications", "symbols", "activeAccount", "tokens", "staticBase"]),
                displayNotifications() {
                    let t = JSON.parse(JSON.stringify(this.notifications));
                    for (let e in t)
                        switch (t[e].type) {
                            case "order":
                                t[e].title = this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].alias : "",
                                    t[e].textClass = t[e].data.profit > 0 ? "green" : t[e].data.profit < 0 ? "red" : "",
                                    t[e].profitText = (t[e].data.profit > 0 ? "+" : 0 > t[e].data.profit ? "-" : "") + Object(l["e"])(this.activeAccount.currency) + Math.abs(t[e].data.profit).toFixed(this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].precision : 2),
                                    t[e].text = (t[e].data.profit > 0 ? "+" : 0 > t[e].data.profit ? "-" : "") + (100 * Math.abs(t[e].data.price_close - t[e].data.price_open) / t[e].data.price_open).toFixed(2) + "%",
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        hide: !0
                                    };
                                break;
                            case "order_open":
                                t[e].title = this.tokens.orderTypes[t[e].data.type] + " " + (this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].alias : ""),
                                    t[e].textClass = t[e].data.type % 2 ? "red" : "green",
                                    t[e].profitText = "",
                                    t[e].text = Number(t[e].data.volume.toFixed(4)) + " " + t[e].data.symbol + " @ " + t[e].data.price_open.toFixed(this.symbols[t[e].data.symbol] ? this.symbols[t[e].data.symbol].precision : 2),
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        hide: !0
                                    };
                                break;
                            case "success":
                                t[e].title = this.tokens.notifications.success,
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].text = this.tokens.errors[t[e].text] || t[e].text,
                                    t[e].icon = "thumb_up",
                                    t[e].classes = {
                                        green: !0
                                    };
                                break;
                            case "error":
                                t[e].title = this.tokens.notifications.error,
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].text = this.tokens.errors[t[e].text] || t[e].text,
                                    t[e].icon = "report_problem",
                                    t[e].classes = {
                                        brand: !0
                                    };
                                break;
                            case "support":
                                t[e].title = "",
                                    t[e].textClass = "",
                                    t[e].profitText = "",
                                    t[e].icon = "mail",
                                    t[e].classes = {
                                        green: !0
                                    };
                                break;
                            case "transaction":
                                t[e].title = this.tokens.notifications[1 === t[e].data.type ? "deposit" : "withdrawal"] + " #" + t[e].data.id,
                                    t[e].text = this.tokens.notifications[(1 === t[e].data.type ? "deposit" : "withdrawal") + (1 === t[e].data.status ? "Approved" : "Declined")],
                                    t[e].textClass = "",
                                    t[e].profitText = 1 === t[e].data.status ? (t[e].data.amount > 0 ? "+" : "-") + Object(l["e"])(t[e].data.currency) + Math.abs(t[e].data.amount).toLocaleString(void 0, {
                                        minimumFractionDigits: this.activeAccount.precision,
                                        maximumFractionDigits: this.activeAccount.precision
                                    }) : "",
                                    t[e].icon = 1 === t[e].data.status ? "check_circle" : "cancel",
                                    t[e].classes = {
                                        green: 1 === t[e].data.status,
                                        red: 2 === t[e].data.status
                                    };
                                break
                        }
                    return t
                }
            }
        }
            , WC = RC
            , zC = (s("cdc2"),
            y(WC, jC, qC, !1, null, "457f659b", null))
            , GC = zC.exports
            , YC = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.register,
                    newDesign: t.newDesign,
                    "aspin-modal-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "modal"
            }, [e("form", {
                staticClass: "modal-box"
            }, [t.aspinDesign ? e("a", {
                staticClass: "aspin-logo",
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    href: t.logoRedirectOff ? "#" : t.website,
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.logo.url
                },
                style: {
                    height: t.logo.height,
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.logoComputed
                }
            }), e("span", {
                class: {
                    hide: t.logo.url
                }
            }, [e("span", {
                staticClass: "brand"
            }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform))])]) : t._e(), t.aspinDesign ? e("div", {
                staticClass: "tabs"
            }, [e("a", {
                class: {
                    "is-active": t.modals.login
                },
                attrs: {
                    href: "/"
                }
            }, [t._v("Login")]), e("a", {
                class: {
                    "is-active": t.modals.register
                },
                attrs: {
                    href: "/register"
                }
            }, [t._v("Register")])]) : t._e(), t.aspinDesign ? t._e() : e("div", {
                staticClass: "title"
            }, [t.newDesign ? e("i", {
                staticClass: "material-icons"
            }, [t._v("edit")]) : t._e(), e("span", [t._v(t._s(t.tokens.registerModal.createNewAccount.toUpperCase()))]), t.newDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("lock")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.email))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? "Email Address" : ""),
                    tabindex: "1",
                    name: "login"
                },
                domProps: {
                    value: t.email
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/email.png",
                    alt: ""
                }
            })]) : t._e()]), t.newDesign ? e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.loginModal.fullName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.fullname,
                    expression: "fullname"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? "Full Name" : ""),
                    tabindex: "2"
                },
                domProps: {
                    value: t.fullname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.fullname = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/name.png",
                    alt: ""
                }
            })]) : t._e()]) : t._e(), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.firstName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.firstname,
                    expression: "firstname"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "3"
                },
                domProps: {
                    value: t.firstname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.firstname = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row input",
                class: {
                    "form-icon": t.newDesign
                }
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.country))]), t.newDesign ? e("i", {
                staticClass: "material-icons select"
            }, [t._v("arrow_drop_down")]) : t._e(), e("div", {
                staticClass: "search-item"
            }, [e("button", {
                staticClass: "search-country",
                on: {
                    click: function(e) {
                        e.preventDefault(),
                            t.countrySearchList = !t.countrySearchList
                    }
                }
            }, [t._v(" " + t._s(t.country ? t.country : t.tokens.registerModal.country) + " ")]), t.countrySearchList ? e("div", {
                staticClass: "country-list"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.searchedCountry,
                    expression: "searchedCountry"
                }],
                staticClass: "search-list newDesign",
                attrs: {
                    placeholder: "Search..."
                },
                domProps: {
                    value: t.searchedCountry
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.searchedCountry = e.target.value)
                    }
                }
            }), e("div", {
                staticClass: "country-items"
            }, t._l(t.countries, (function(s, a) {
                    return e("p", {
                        key: a,
                        class: {
                            active: s == t.country
                        },
                        on: {
                            click: function(e) {
                                return t.chooseCountry(s)
                            }
                        }
                    }, [t._v(" " + t._s(s) + " ")])
                }
            )), 0)]) : t._e()])]), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row"
            }, [e("label", [t._v(t._s(t.tokens.loginModal.promo))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.manager_id) ? t._i(t.manager_id, null) > -1 : t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.manager_id
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.manager_id = s.concat([o])) : n > -1 && (t.manager_id = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.manager_id = i
                    }
                }
            }) : "radio" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.manager_id, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.manager_id = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    tabindex: "7",
                    type: t.password1Visible ? "text" : "password"
                },
                domProps: {
                    value: t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.manager_id = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    },
                    mousedown: function(e) {
                        t.passwordVisible = !t.passwordVisible
                    }
                }
            }, [t._v(t._s(t.passwordVisible ? "visibility" : "visibility_off"))])])])]), e("div", {
                staticClass: "col"
            }, [t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.phone))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.phone,
                    expression: "phone"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "2"
                },
                domProps: {
                    value: t.phone
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.phone = e.target.value)
                    }
                }
            })]), t.newDesign && !t.aspinDesign ? e("label", [t._v(t._s(t.tokens.registerModal.phone))]) : t._e(), t.newDesign ? e("div", {
                staticClass: "form-row form-icon input"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.phone,
                    expression: "phone"
                }],
                staticClass: "form-control phone",
                attrs: {
                    tabindex: "4"
                },
                domProps: {
                    value: t.phone
                },
                on: {
                    keyup: [t.filPhoneNumber, function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    }
                    ],
                    input: function(e) {
                        e.target.composing || (t.phone = e.target.value)
                    }
                }
            }), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "aspin-design/phone.png",
                    alt: ""
                }
            })]) : t._e(), t.aspinDesign ? t._e() : e("span", {
                staticClass: "flag small-flag phone-flag",
                class: "flag-" + t.flag
            })]) : t._e(), t.newDesign ? t._e() : e("div", {
                staticClass: "form-row input"
            }, [e("label", [t._v(t._s(t.tokens.registerModal.lastName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.lastname,
                    expression: "lastname"
                }],
                staticClass: "form-control",
                attrs: {
                    tabindex: "4"
                },
                domProps: {
                    value: t.lastname
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.lastname = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.password))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password) ? t._i(t.password, null) > -1 : t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.password
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password = s.concat([o])) : n > -1 && (t.password = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password = i
                    }
                }
            }) : "radio" === (t.password1Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.password = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password,
                    expression: "password"
                }],
                ref: "password1",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.password : ""),
                    tabindex: "6",
                    type: t.password1Visible ? "text" : "password"
                },
                domProps: {
                    value: t.password
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.password = e.target.value)
                    }
                }
            }), t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password1Visible = !t.password1Visible
                    },
                    mousedown: function(e) {
                        t.password1Visible = !t.password1Visible
                    }
                }
            }, [t._v(t._s(t.password1Visible ? "visibility" : "visibility_off"))])]), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("i", {
                staticClass: "material-icons",
                staticStyle: {
                    color: "#fff"
                },
                on: {
                    touchstart: function(e) {
                        t.password1Visible = !t.password1Visible
                    },
                    mousedown: function(e) {
                        t.password1Visible = !t.password1Visible
                    }
                }
            }, [t._v(t._s(t.password1Visible ? "visibility" : "visibility_off"))])]) : t._e()]), t.aspinDesign ? e("div", {
                staticClass: "form-row input"
            }, [t.aspinDesign ? t._e() : e("label", [t._v(t._s(t.tokens.registerModal.password))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password2Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password2) ? t._i(t.password2, null) > -1 : t.password2
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = t.password2
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.password2 = s.concat([o])) : n > -1 && (t.password2 = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.password2 = i
                    }
                }
            }) : "radio" === (t.password2Visible ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password2, null)
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        t.password2 = null
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password2,
                    expression: "password2"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    placeholder: "" + (t.aspinDesign ? t.tokens.registerModal.repeatPassword : ""),
                    tabindex: "6",
                    type: t.password2Visible ? "text" : "password"
                },
                domProps: {
                    value: t.password2
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.password2 = e.target.value)
                    }
                }
            }), t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password2Visible = !t.password2Visible
                    },
                    mousedown: function(e) {
                        t.password2Visible = !t.password2Visible
                    }
                }
            }, [t._v(t._s(t.password2Visible ? "visibility" : "visibility_off"))])]), t.aspinDesign ? e("div", {
                staticClass: "icon-box"
            }, [e("i", {
                staticClass: "material-icons",
                staticStyle: {
                    color: "#fff"
                },
                on: {
                    touchstart: function(e) {
                        t.password2Visible = !t.password2Visible
                    },
                    mousedown: function(e) {
                        t.password2Visible = !t.password2Visible
                    }
                }
            }, [t._v(t._s(t.password2Visible ? "visibility" : "visibility_off"))])]) : t._e()]) : t._e(), t.aspinDesign ? e("label", {
                staticClass: "currency"
            }, [t._v(t._s(t.tokens.registerModal.currency))]) : t._e(), e("div", {
                staticClass: "form-row input",
                class: {
                    "form-icon": t.newDesign
                }
            }, [t.newDesign ? e("i", {
                staticClass: "material-icons select"
            }, [t._v("arrow_drop_down")]) : t._e(), t.newDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `currencies/${t.currencyChosen}.png`
                }
            }) : t._e(), t.aspinDesign ? t._e() : e("label", {
                staticClass: "currency"
            }, [t._v(t._s(t.tokens.registerModal.currency))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.currencyChosen,
                    expression: "currencyChosen"
                }],
                staticClass: "form-control",
                class: {
                    "form-image": t.newDesign
                },
                attrs: {
                    tabindex: "7"
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.currencyChosen = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.currencies, (function(s, a) {
                    return e("option", {
                        key: a,
                        domProps: {
                            value: s
                        }
                    }, [t._v(t._s(s) + " ")])
                }
            )), 0)]), t.existPromo ? e("div", {
                staticClass: "form-row input"
            }, [t.existPromo || t.aspinDesign ? t._e() : e("label", {
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !0
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.havePromo))]), t.existPromo && !t.aspinDesign ? e("label", [t._v(t._s(t.tokens.loginModal.promo))]) : t._e(), e("div", {
                staticClass: "show-hide-password"
            }, [t.existPromo ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.manager_id,
                    expression: "manager_id"
                }],
                ref: "promo",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    tabindex: "7",
                    placeholder: "" + t.tokens.loginModal.promo
                },
                domProps: {
                    value: t.manager_id
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.register.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.manager_id = e.target.value)
                    }
                }
            }) : t._e()]), e("label", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.existPromo,
                    expression: "existPromo"
                }],
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !1
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.hide))])]) : t._e()])]), e("div", {
                staticClass: "form-row",
                class: {
                    textCenter: t.newDesign
                }
            }, [e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.register
                }
            }, [t._v(" " + t._s(t.tokens.registerModal.createAccount.toUpperCase()) + " ")]), t.newDesign ? e("div", {
                staticClass: "form-login"
            }, [e("p", [t._v(t._s(t.tokens.loginModal.haveAccount)), e("a", {
                attrs: {
                    href: "/"
                }
            }, [t._v(t._s(t.tokens.loginModal.login))])])]) : t._e(), e("label", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.existPromo || t.aspinDesign,
                    expression: "!existPromo || aspinDesign"
                }],
                staticClass: "promo",
                on: {
                    click: function(e) {
                        t.existPromo = !0
                    }
                }
            }, [t._v(t._s(t.tokens.loginModal.havePromo))]), t.privacyAndPolicyLink ? e("div", {
                staticClass: "form-login"
            }, [e("p", [e("a", {
                attrs: {
                    href: t.privacyAndPolicyLink
                }
            }, [t._v(t._s(t.tokens.registerModal.privacyAndPolicy))])])]) : t._e(), t.customerAgreementLink ? e("div", {
                staticClass: "form-login customer-agreement"
            }, [e("p", [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.customerAgreementLinkCheckbox,
                    expression: "customerAgreementLinkCheckbox"
                }],
                attrs: {
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.customerAgreementLinkCheckbox) ? t._i(t.customerAgreementLinkCheckbox, null) > -1 : t.customerAgreementLinkCheckbox
                },
                on: {
                    change: function(e) {
                        var s = t.customerAgreementLinkCheckbox
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && (t.customerAgreementLinkCheckbox = s.concat([o])) : n > -1 && (t.customerAgreementLinkCheckbox = s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.customerAgreementLinkCheckbox = i
                    }
                }
            }), e("a", {
                attrs: {
                    href: t.customerAgreementLink,
                    download: "",
                    target: "_blank"
                }
            }, [t._v(t._s(t.tokens.registerModal.customerAgreement))])])]) : t._e()])])])])
        }
            , ZC = []
            , JC = {
            name: "RegisterModal",
            mounted() {
                this.newDesign && (this.$set(this, "phone", "+44"),
                    this.$set(this, "flag", "gb"))
            },
            data() {
                return {
                    newDesign: pt["kb"],
                    firstname: "",
                    lastname: "",
                    fullname: "",
                    country: "",
                    email: "",
                    password: "",
                    passwordVisible: !1,
                    password2: "",
                    password2Visible: !1,
                    password1Visible: !1,
                    manager_id: "",
                    existPromo: !1,
                    role: pt["wb"],
                    currencyChosen: "USD",
                    phone: "",
                    flag: "",
                    countrySearchList: !1,
                    searchedCountry: "",
                    aspinDesign: pt["b"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    logo: pt["ab"],
                    logoRedirectOff: pt["bb"],
                    hideLogo: pt["Q"],
                    privacyAndPolicyLink: pt["pb"],
                    customerAgreementLink: pt["B"],
                    customerAgreementLinkCheckbox: !1
                }
            },
            methods: {
                showPass: l["n"],
                hidePass: l["g"],
                filPhoneNumber() {
                    "" === this.phone && this.newDesign && (this.phone += "+")
                },
                chooseCountry(t) {
                    this.country = t,
                        this.setPhone(t),
                        this.countrySearchList = !1
                },
                setPhone(t) {
                    if (this.newDesign) {
                        let e = Object(l["d"])(t);
                        e && (this.$set(this, "phone", e[1]),
                            this.$set(this, "flag", e[2].toLowerCase()))
                    }
                },
                convertFullName(t) {
                    let e = t.split(" ");
                    this.lastname = e.pop(),
                        this.firstname = e.join(" ")
                },
                register() {
                    if (!this.customerAgreementLinkCheckbox && this.customerAgreementLink)
                        return void this.$store.commit(n["V"], "Please confirm customer agreement");
                    if (!this.email)
                        return void this.$store.commit(n["V"], "INVALID_EMAIL");
                    if (!this.phone)
                        return void this.$store.commit(n["V"], "INVALID_PHONE");
                    this.newDesign && this.convertFullName(this.fullname);
                    let t = parseInt(this.manager_id);
                    (isNaN(t) || t <= 0) && (t = 0),
                    t && (this.role = 1),
                        this.$store.dispatch(r["N"], {
                            firstname: this.firstname,
                            lastname: this.lastname,
                            country: this.country,
                            phone: this.phone,
                            email: this.email.trim(),
                            currency: this.currencyChosen,
                            password: this.password.trim(),
                            manager_id: t,
                            role: this.role
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "currencies", "staticBase"]),
                countries() {
                    return Object.values(Object(l["b"])()).filter(t => t.toLowerCase().indexOf(this.searchedCountry.toLowerCase()) > -1)
                },
                logoComputed() {
                    return "Light" === this.tradingViewTheme ? this.logo.url.replace(/white/, "black") : this.logo.url
                }
            }
        }
            , KC = JC
            , XC = (s("0682"),
            y(KC, YC, ZC, !1, null, "3c2fb1d4", null))
            , QC = XC.exports
            , tw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "no-connection",
                class: {
                    hide: t.hideWindow
                }
            }, [e("div", {
                staticClass: "upper"
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("wifi_off")]), e("span", [t._v(t._s(t.tokens.noConnectionModal.connectionLost))])]), e("button", {
                on: {
                    click: t.refresh
                }
            }, [t._v(t._s(t.tokens.noConnectionModal.retryNow))])])
        }
            , ew = []
            , sw = {
            name: "NoConnectionModal",
            data() {
                return {
                    timeout: null,
                    hideWindow: !0
                }
            },
            methods: {
                refresh() {
                    location.reload()
                }
            },
            computed: {
                ...Object(o["b"])(["socketState", "tokens"])
            },
            watch: {
                socketState(t) {
                    if (t)
                        this.timeout && clearTimeout(this.timeout),
                            this.hideWindow = !0;
                    else {
                        if (this.timeout)
                            return;
                        this.timeout = setTimeout( () => {
                                this.hideWindow = !1
                            }
                            , 15e3)
                    }
                }
            }
        }
            , aw = sw
            , iw = (s("3ec1"),
            y(aw, tw, ew, !1, null, "524ab706", null))
            , ow = iw.exports
            , nw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "menu-modal",
                class: {
                    hide: !t.modals.menu || !t.modalMenuSplit
                }
            }, [e("MarketWatch", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.market
                }
            }), e("OpenOrders", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.orders
                }
            }), e("OrdersHistory", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.history
                }
            }), e("EconomicCalendar", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.calendar
                }
            }), e("MarketNews", {
                staticClass: "item",
                class: {
                    hide: !t.modalMenu.news
                }
            })], 1)
        }
            , rw = []
            , lw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.widgetOrders.activeOrders) + " "), e("i", {
                staticClass: "material-icons close",
                on: {
                    click: function(e) {
                        return t.hideModal("orders")
                    }
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "tabs"
            }, [e("div", {
                staticClass: "tab-item",
                class: {
                    active: "active" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "active"
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.widgetOrders.active.toUpperCase()))])]), e("div", {
                staticClass: "tab-item",
                class: {
                    active: "pending" === t.tabActive
                },
                on: {
                    click: function(e) {
                        t.tabActive = "pending"
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pending.toUpperCase()))])])]), e("div", {
                staticClass: "content scroll"
            }, [e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.marketFilter,
                    expression: "marketFilter"
                }],
                staticClass: "form-control",
                on: {
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.marketFilter = e.target.multiple ? s : s[0]
                    }
                }
            }, [e("option", {
                attrs: {
                    value: ""
                }
            }, [t._v(t._s(t.tokens.widgetOrders.allPositions))]), e("option", {
                attrs: {
                    value: "forex"
                }
            }, [t._v(t._s(t.tokens.markets.forex))]), e("option", {
                attrs: {
                    value: "stocks"
                }
            }, [t._v(t._s(t.tokens.markets.stocks))]), e("option", {
                attrs: {
                    value: "indices"
                }
            }, [t._v(t._s(t.tokens.markets.indices))]), e("option", {
                attrs: {
                    value: "commodities"
                }
            }, [t._v(t._s(t.tokens.markets.commodities))]), e("option", {
                attrs: {
                    value: "crypto"
                }
            }, [t._v(t._s(t.tokens.markets.crypto))]), e("option", {
                attrs: {
                    value: "metals"
                }
            }, [t._v(t._s(t.tokens.markets.metals))]), e("option", {
                attrs: {
                    value: "nft"
                }
            }, [t._v(t._s(t.tokens.markets.nft))])]), e("div", {
                staticClass: "no-orders",
                class: t.computeNoOrdersVisibility
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("import_export")]), e("span", [t._v(t._s(t.tokens.widgetOrders.noPositionsLine1)), e("br"), t._v(t._s(t.tokens.widgetOrders.noPositionsLine2))])]), e("div", {
                staticClass: "col",
                class: {
                    hide: "active" !== t.tabActive
                }
            }, t._l(t.orders, (function(s, a) {
                    return e("div", {
                        key: s.id,
                        staticClass: "order-item",
                        class: {
                            active: t.detailsOrder === s.id,
                            hide: t.marketFilter && (!t.symbols[s.symbol] || t.symbols[s.symbol].market !== t.marketFilter)
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "name"
                    }, [e("div", {
                        staticClass: "row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                        staticClass: "profit",
                        class: s.profit < 0 ? "red" : "green"
                    }, [t._v(" " + t._s((0 > s.profit ? "-" : s.profit > 0 ? "+" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount ? t.activeAccount.precision : 2)) + " ")])]), e("div", {
                        staticClass: "smaller"
                    }, [e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.show) + " " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])]), e("div", {
                        staticClass: "pct",
                        class: s.profit < 0 ? "red" : "green"
                    }, [t._v(" " + t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + (t.symbols[s.symbol] ? Math.abs(t.symbols[s.symbol].quote[s.type % 2 ? "ask" : "bid"] - s.price_open) / s.price_open * 100 : 0).toFixed(2) + "%") + " ")])])])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("button", {
                        staticClass: "close-position",
                        on: {
                            click: function(e) {
                                return t.showClosePositionModal(s.id, a)
                            }
                        }
                    }, [t._v(t._s(t.tokens.widgetOrders.closePosition))]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.purchaseTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_open).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))]), e("i", {
                        staticClass: "material-icons edit",
                        on: {
                            click: function(e) {
                                return t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [t._v("edit")])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))]), e("i", {
                        staticClass: "material-icons edit",
                        on: {
                            click: function(e) {
                                return t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [t._v("edit")])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.type))]), e("span", {
                        class: s.type ? "red" : "green"
                    }, [t._v(" " + t._s(s.type ? t.tokens.closePositionModal.sell : t.tokens.closePositionModal.buy) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(s.type ? "arrow_drop_down" : "arrow_drop_up"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.margin))]), e("span", [t._v(t._s(t.currencySign(t.activeAccount.currency) + s.easy_amount.toFixed(t.activeAccount.precision)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pnl))]), e("span", [t._v(t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount.precision)))])])])])
                }
            )), 0), e("div", {
                staticClass: "col",
                class: {
                    hide: "pending" !== t.tabActive
                }
            }, t._l(t.pendingOrders, (function(s, a) {
                    return e("div", {
                        key: s.id,
                        staticClass: "order-item",
                        class: {
                            active: t.detailsOrder === s.id,
                            hide: t.marketFilter && t.symbols[s.symbol].market !== t.marketFilter
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "name"
                    }, [e("div", {
                        staticClass: "row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: "symbol-" + s.symbol.toUpperCase()
                    }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                        staticClass: "profit",
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.tokens.orderTypes[s.type]) + " ")])]), e("div", {
                        staticClass: "smaller"
                    }, [e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [t._v(" " + t._s(t.tokens.widgetOrders.show) + " " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])]), e("div", {
                        staticClass: "pct",
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)) + " ")])])])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("button", {
                        staticClass: "close-position",
                        on: {
                            click: function(e) {
                                return t.showClosePositionModal(s.id, a)
                            }
                        }
                    }, [t._v(t._s(t.tokens.widgetOrders.cancelOrder))]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(t._s(s.price_open.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.orderType))]), e("span", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.tokens.orderTypes[s.type]) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(s.type % 2 ? "arrow_drop_down" : "arrow_drop_up"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])])])])
                }
            )), 0)])])
        }
            , cw = []
            , dw = {
            name: "OpenOrders",
            data() {
                return {
                    tabActive: "active",
                    marketFilter: "",
                    detailsOrder: 0
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                showClosePositionModal(t, e) {
                    this.activeAccount.enable ? (this.$store.commit(n["J"], {
                        activeOrderId: t,
                        index: e
                    }),
                        this.$store.commit(n["F"], {
                            closePosition: !0
                        })) : this.$store.commit(n["V"], "TRADING_DISABLED")
                },
                showAutoCloseModal(t, e, s) {
                    let a = t.target.getBoundingClientRect();
                    this.$store.commit(n["I"], {
                        left: a.left + 200,
                        top: a.top - 100,
                        symbolActive: null,
                        orderActive: e,
                        tp: this.activeAccount.orders[s].tp || "",
                        tpType: "=",
                        sl: this.activeAccount.orders[s].sl || "",
                        slType: "=",
                        item: parseInt(s)
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !0
                        })
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "activeAccount", "tokens", "chartActive", "modalMenu", "staticBase"]),
                orders() {
                    let t = [];
                    if (!this.activeAccount.orders)
                        return t;
                    for (let e in this.activeAccount.orders) {
                        let s = this.activeAccount.orders[e];
                        s.type > 1 || (this.symbols[s.symbol] ? s.profit = s.point * (s.type && this.symbols[s.symbol] ? s.price_open - this.symbols[s.symbol].quote.ask : this.symbols[s.symbol].quote.bid - s.price_open) * Math.pow(10, this.symbols[s.symbol].precision) + s.swap + s.commission : s.profit = 0,
                            s.easy_amount = s.easy_amount || s.margin,
                            t.push(s))
                    }
                    return t
                },
                pendingOrders() {
                    let t = [];
                    if (!this.activeAccount.orders)
                        return t;
                    for (let e in this.activeAccount.orders) {
                        let s = this.activeAccount.orders[e];
                        s.type < 2 || (s.profit = 0,
                            s.easy_amount = s.easy_amount || s.margin,
                            t.push(s))
                    }
                    return t
                },
                computeNoOrdersVisibility() {
                    return this.orders.length > 0 || this.pendingOrders.length > 0 ? "hide" : ""
                }
            }
        }
            , uw = dw
            , mw = (s("8308"),
            y(uw, lw, cw, !1, null, "2214d9ea", null))
            , pw = mw.exports
            , hw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.widgetOrders.tradingHistory) + " "), e("i", {
                staticClass: "material-icons close",
                on: {
                    click: function(e) {
                        return t.hideModal("history")
                    }
                }
            }, [t._v("close")])]), e("div", {
                ref: "history-scroll",
                staticClass: "content scroll"
            }, [e("div", {
                staticClass: "no-orders",
                class: {
                    hide: t.history.length
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("restore")]), e("span", [t._v(t._s(t.tokens.widgetOrders.noHistoryLine1)), e("br"), t._v(t._s(t.tokens.widgetOrders.noHistoryLine2))])]), e("div", {
                staticClass: "col"
            }, t._l(t.history, (function(s) {
                    var a, i;
                    return e("div", {
                        key: s.id,
                        staticClass: "history-item",
                        class: {
                            active: t.detailsOrder === s.id
                        }
                    }, [e("div", {
                        staticClass: "history-head"
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "time"
                    }, [t._v(t._s(s.timeStr))]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(t._s(t.tokens.months[s.month] + " " + s.day))]), e("div", {
                        staticClass: "row pointer",
                        on: {
                            click: function(e) {
                                t.detailsOrder = t.detailsOrder === s.id ? 0 : s.id
                            }
                        }
                    }, [t._v(" " + t._s(t.detailsOrder !== s.id ? t.tokens.widgetOrders.more : t.tokens.widgetOrders.less) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.detailsOrder !== s.id ? "arrow_drop_down" : "arrow_drop_up"))])])]), e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "row symbol-row",
                        on: {
                            click: function(e) {
                                return t.changeSymbol(s.symbol)
                            }
                        }
                    }, [e("div", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].market.charAt(0).toUpperCase() + t.symbols[s.symbol].market.slice(1) : "") + " ")]), e("div", {
                        staticClass: "lesser",
                        class: {
                            hide: !s.price_close
                        }
                    }, [t._v(" " + t._s(t.symbols[s.symbol] && s.price_open ? null === s || void 0 === s || null === (a = s.price_open) || void 0 === a ? void 0 : a.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5,
                        maximumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5
                    }) : "-") + " → " + t._s(null === s || void 0 === s || null === (i = s.price_close) || void 0 === i ? void 0 : i.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5,
                        maximumFractionDigits: t.symbols[s.symbol] && t.symbols[s.symbol].precision ? t.symbols[s.symbol].precision : 5
                    })) + " ")])])]), e("div", {
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "profit",
                        class: s.profit > 0 ? "green" : s.profit < 0 ? "red" : ""
                    }, [t._v(t._s(s.price_close ? (s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : t.tokens.widgetOrders.cancelled.toUpperCase()) + " ")]), e("div", {
                        staticClass: "lesser"
                    }, [t._v(" " + t._s(s && void 0 !== (null === s || void 0 === s ? void 0 : s.volume) && null !== (null === s || void 0 === s ? void 0 : s.volume) ? ((null === s || void 0 === s ? void 0 : s.volume) > 1e3 ? null === s || void 0 === s ? void 0 : s.volume.toFixed(0) : null === s || void 0 === s ? void 0 : s.volume.toFixed(2)) + " " + (null === s || void 0 === s ? void 0 : s.symbol) : "-") + " ")])])]), e("div", {
                        staticClass: "details",
                        class: {
                            hide: t.detailsOrder !== s.id
                        }
                    }, [e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.purchaseTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_open).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.ordersPane.closeTime))]), e("span", [t._v(t._s(new Date(1e3 * s.time_close).toLocaleString()))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceOpen))]), e("span", [t._v(" " + t._s(s.price_open ? t.symbols[s.symbol] && t.symbols[s.symbol].precision ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol].precision,
                        maximumFractionDigits: t.symbols[s.symbol].precision
                    }) : s.price_open.toLocaleString() : "-") + " ")])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceSl))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.sl ? s.sl.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.priceTp))]), e("div", {
                        staticClass: "row"
                    }, [e("span", [t._v(t._s(s.tp ? s.tp.toFixed(t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 5) : "-"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.orderType))]), e("span", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.tokens.orderTypes[s.type]) + " "), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(s.type % 2 ? "arrow_drop_down" : "arrow_drop_up"))])])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.volume))]), e("span", [t._v(t._s(s.volume))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.margin))]), e("span", [t._v(t._s(s.easy_amount ? t.currencySign(t.activeAccount.currency) + s.easy_amount.toFixed(t.activeAccount.precision) : "-"))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.pnl))]), e("span", [t._v(t._s((s.profit > 0 ? "+" : 0 > s.profit ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.profit).toFixed(t.activeAccount.precision)))])]), e("div", {
                        staticClass: "item"
                    }, [e("span", [t._v(t._s(t.tokens.widgetOrders.commission))]), e("span", [t._v(t._s((s.commission > 0 ? "+" : 0 > s.commission ? "-" : "") + t.currencySign(t.activeAccount.currency) + Math.abs(s.commission).toFixed(t.activeAccount.precision)))])])])])
                }
            )), 0)])])
        }
            , vw = []
            , fw = {
            name: "OrdersHistory",
            mounted() {
                setInterval( () => {
                        this.$refs["history-scroll"] && this.$refs["history-scroll"].scrollTop + this.$refs["history-scroll"].clientHeight === this.$refs["history-scroll"].scrollHeight && this.modalMenu.history && this.activeAccount.history.length > 20 * this.historyPage && this.historyPage++
                    }
                    , 1e3)
            },
            data() {
                return {
                    historyPage: 1,
                    detailsOrder: 0
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                changeSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["modals", "symbols", "tokens", "chartActive", "activeAccount", "modalMenu", "staticBase"]),
                history() {
                    const t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        , e = [];
                    if (!this.activeAccount.history)
                        return e;
                    const s = 0
                        , a = 20 * this.historyPage
                        , i = this.activeAccount.history.slice(s, a);
                    return i.forEach(s => {
                            const a = new Date(1e3 * s.time_close);
                            s.timeStr = ("0" + a.getHours()).slice(-2) + ":" + ("0" + a.getMinutes()).slice(-2),
                                s.dayStr = t[a.getMonth()] + " " + ("0" + a.getDate()).slice(-2),
                                s.month = t[a.getMonth()],
                                s.day = ("0" + a.getDate()).slice(-2),
                                s.amount = s.easy_amount || s.margin,
                                e.push(s)
                        }
                    ),
                        e
                }
            },
            watch: {
                activeAccount() {
                    this.historyPage = 1,
                        this.$refs["history-scroll"].scrollTo(0, 0)
                }
            }
        }
            , gw = fw
            , bw = (s("80c4"),
            y(gw, hw, vw, !1, null, "58277b76", null))
            , yw = bw.exports
            , _w = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.widgetMarketWatch.marketWatch) + " "), e("i", {
                staticClass: "material-icons close",
                on: {
                    click: function(e) {
                        return t.hideModal("market")
                    }
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "content scroll"
            }, [e("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.search,
                    expression: "search"
                }],
                staticClass: "form-control search",
                attrs: {
                    type: "text",
                    name: "my-search-market-watch",
                    placeholder: t.tokens.widgetMarketWatch.search
                },
                domProps: {
                    value: t.search
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.search = e.target.value)
                    }
                }
            }), t._v(" "), e("i", {
                staticClass: "material-icons search-ico"
            }, [t._v("search")]), e("div", {
                staticClass: "col"
            }, t._l(t.marketCats, (function(s, a) {
                    return e("div", {
                        key: a
                    }, [e("div", {
                        staticClass: "cat-title",
                        class: {
                            hide: !s.cnt
                        },
                        on: {
                            click: function(e) {
                                t.collapsed[a] = "" === t.search ? !t.collapsed[a] : t.collapsed[a]
                            }
                        }
                    }, [e("div", {
                        staticClass: "row"
                    }, [e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(s.ico))]), e("span", [t._v(t._s(s.name))])]), e("div", {
                        staticClass: "row-2"
                    }, [e("div", {
                        staticClass: "cnt"
                    }, [t._v(t._s(s.cnt))]), e("i", {
                        staticClass: "material-icons"
                    }, [t._v(t._s(t.collapsed[a] && "" === t.search ? "expand_more" : "expand_less"))])])]), t.marketFilter && t.symbols[t.symbol.symbol].market !== t.marketFilter || "" === t.search && t.collapsed[a] ? t._e() : t._l(s.symbols, (function(s) {
                            return e("div", {
                                key: s.symbol,
                                staticClass: "market-item",
                                class: {
                                    hide: t.marketFilter && t.symbols[s.symbol].market !== t.marketFilter || "" === t.search && t.collapsed[a],
                                    active: t.charts[t.chartActive] && t.charts[t.chartActive].symbol === s.symbol
                                },
                                on: {
                                    click: function(e) {
                                        return t.changeSymbol(s.symbol)
                                    }
                                }
                            }, [e("div", {
                                staticClass: "row"
                            }, [e("div", {
                                staticClass: "col"
                            }, [e("div", {
                                staticClass: "name"
                            }, [e("div", {
                                staticClass: "row",
                                class: t.sessionsState[s.symbol] ? "" : "close"
                            }, [e("div", {
                                staticClass: "symbol",
                                class: t.assetSymbol(s.symbol)
                            }), e("span", [t._v(t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : s.symbol))])]), e("div", {
                                staticClass: "row"
                            }, [e("div", {
                                staticClass: "price",
                                class: t.sessionsState[s.symbol] ? s.quote ? s.quote.dirBid : "" : "close"
                            }, [t._v(" " + t._s(s.quote && s.quote.bid ? s.quote.bid.toFixed(s.precision) : "-") + " ")]), e("div", {
                                staticClass: "smaller"
                            }, [e("div", {
                                staticClass: "pct",
                                class: {
                                    red: s.quote && s.quote.changePct < 0,
                                    green: s.quote && 0 < s.quote.changePct,
                                    hide: !t.sessionsState[s.symbol]
                                }
                            }, [t._v(" " + t._s((s.quote && s.quote.changePct > 0 ? "+" : "") + (s.quote && s.quote.changePct ? s.quote.changePct : 0).toFixed(2) + "%") + " ")]), e("div", {
                                staticClass: "pct close",
                                class: {
                                    hide: t.sessionsState[s.symbol]
                                }
                            }, [t._v(" Closed ")])]), e("i", {
                                staticClass: "material-icons add",
                                on: {
                                    click: function(e) {
                                        return e.stopPropagation(),
                                            t.addChart(s.symbol)
                                    }
                                }
                            }, [t._v("add")]), e("i", {
                                staticClass: "material-icons info",
                                on: {
                                    click: function(e) {
                                        return e.stopPropagation(),
                                            t.showAssetsInfoModal(s.symbol)
                                    }
                                }
                            }, [t._v("info_outlined")])])])])])])
                        }
                    ))], 2)
                }
            )), 0)])])
        }
            , Cw = []
            , ww = {
            name: "MarketWatch",
            data() {
                return {
                    marketFilter: "",
                    search: "",
                    collapsed: {
                        forex: "forex" !== pt["cb"],
                        stocks: "stocks" !== pt["cb"],
                        indices: "indices" !== pt["cb"],
                        commodities: "commodities" !== pt["cb"],
                        crypto: "crypto" !== pt["cb"],
                        metals: "metals" !== pt["cb"],
                        nft: "nft" !== pt["cb"]
                    },
                    brand: pt["e"],
                    time: Date.now()
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                showAssetsInfoModal(t) {
                    this.$store.commit(n["H"], {
                        symbol: t,
                        chartActive: this.chartActive
                    }),
                        this.$store.commit(n["F"], {
                            assetsInfo: !0
                        })
                },
                changeSymbol(t) {
                    Object(l["h"])() && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                        this.$store.commit(n["Eb"], {
                            symbol: t,
                            id: this.chartActive
                        })
                },
                assetSymbol(t) {
                    if ("cryptoalgoritm" !== this.brand)
                        return "symbol-" + t.toUpperCase().replace(".", "-");
                    switch (t) {
                        case "SUGAR":
                            return "symbol-CAPITALSUGAR";
                        case "DIS":
                            return "symbol-CAPITALSUGAR";
                        default:
                            return "symbol-" + t.toUpperCase().replace(".", "-")
                    }
                },
                addChart(t) {
                    this.$store.commit(n["Ib"], {
                        symbol: t,
                        frame: 1
                    })
                },
                shift(t, e) {
                    let s = 0
                        , a = [].concat(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                        , i = [];
                    if (e > 0) {
                        for (let t = 0; t < e; t++)
                            s = a.pop(),
                                i[t] = s;
                        for (let t = 0; t < i.length; t++)
                            a.unshift(i[t])
                    } else if (e < 0) {
                        e = Math.abs(e);
                        for (let t = 0; t < e; t++)
                            s = a.shift(),
                                i[t] = s;
                        for (let t = 0; t < i.length; t++)
                            a.push(i[t])
                    }
                    const o = (t, e) => t.reduce( (t, s, a, i) => a % e ? t : t.concat([i.slice(a, a + e)]), []);
                    let n = [];
                    return n = o(a, 24),
                        n
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "symbols", "sessions", "sessionsState", "symbolGroups", "chartActive", "charts", "modalMenu", "staticBase"]),
                marketCats() {
                    let t = {
                        forex: {
                            name: this.tokens.markets.forex,
                            ico: "euro_symbol",
                            cnt: 0,
                            symbols: []
                        },
                        stocks: {
                            name: this.tokens.markets.stocks,
                            ico: "account_balance",
                            cnt: 0,
                            symbols: []
                        },
                        indices: {
                            name: this.tokens.markets.indices,
                            ico: "pie_chart",
                            cnt: 0,
                            symbols: []
                        },
                        crypto: {
                            name: this.tokens.markets.crypto,
                            ico: "cloud",
                            cnt: 0,
                            symbols: []
                        },
                        commodities: {
                            name: this.tokens.markets.commodities,
                            ico: "local_fire_department",
                            cnt: 0,
                            symbols: []
                        },
                        metals: {
                            name: this.tokens.markets.metals,
                            ico: "view_stream",
                            cnt: 0,
                            symbols: []
                        },
                        nft: {
                            name: this.tokens.markets.nft,
                            ico: "collections",
                            cnt: 0,
                            symbols: []
                        }
                    };
                    for (let e in this.symbols) {
                        let s = this.symbols[e];
                        if (void 0 !== t[s.market]) {
                            if (this.search && "fav" !== this.marketFilter && !s.symbol.toLowerCase().includes(this.search.toLowerCase()) && !s.alias.toLowerCase().includes(this.search.toLowerCase()))
                                continue;
                            if ("fav" === this.marketFilter && -1 === this.symbolsFavorite.indexOf(s.symbol))
                                continue;
                            if (!s.visible)
                                continue;
                            t[s.market].symbols.push(s),
                                t[s.market].cnt++
                        }
                    }
                    return t
                }
            }
        }
            , kw = ww
            , Sw = (s("de62"),
            y(kw, _w, Cw, !1, null, "18a20bed", null))
            , xw = Sw.exports
            , Mw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.widgetEconomicCalendar.economicCalendar) + " "), e("i", {
                staticClass: "material-icons close",
                on: {
                    click: function(e) {
                        return t.hideModal("calendar")
                    }
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "content"
            }, [e("div", {
                staticClass: "content"
            }, [t.lightTheme ? e("iframe", {
                attrs: {
                    src: "https://www.tradays.com/en/economic-calendar/widget?mode=2&dateFormat=DMY",
                    width: "100%",
                    height: "99%",
                    id: "widgetPreview"
                }
            }) : e("iframe", {
                attrs: {
                    src: "https://www.tradays.com/en/economic-calendar/widget?mode=2&dateFormat=DMY&theme=1",
                    width: "100%",
                    height: "99%",
                    id: "widgetPreview"
                }
            })])])])
        }
            , Aw = []
            , Dw = {
            name: "EconomicCalendar",
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modalMenu", "tokens", "lightTheme"])
            }
        }
            , Pw = Dw
            , Tw = (s("9857"),
            y(Pw, Mw, Aw, !1, null, "9d9dad48", null))
            , Lw = Tw.exports
            , Iw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "widget"
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.widgetMarketNews.marketNews) + " "), e("i", {
                staticClass: "material-icons close",
                on: {
                    click: function(e) {
                        return t.hideModal("news")
                    }
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "content scroll"
            }, t._l(t.newsFeed, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "news"
                    }, [e("div", {
                        staticClass: "time"
                    }, [t._v(t._s(t.timeToString(1e3 * s.time)))]), e("div", {
                        staticClass: "row"
                    }, [e("div", {
                        staticClass: "col"
                    }, [e("a", {
                        attrs: {
                            href: s.url,
                            target: "_blank"
                        }
                    }, [e("img", {
                        attrs: {
                            src: s.img
                        }
                    })]), e("a", {
                        staticClass: "news-title",
                        attrs: {
                            href: s.url,
                            target: "_blank"
                        }
                    }, [t._v(t._s(s.title))]), e("div", {
                        staticClass: "summary",
                        domProps: {
                            innerHTML: t._s(s.summary)
                        }
                    })])])])
                }
            )), 0)])
        }
            , Fw = []
            , Ow = {
            name: "MarketNews",
            mounted() {
                setInterval( () => {
                        this.$refs["news-scroll"] && this.$refs["news-scroll"].scrollTop + this.$refs["news-scroll"].clientHeight === this.$refs["news-scroll"].scrollHeight && this.modalMenu.news && this.activeAccount.news.length > 20 * this.newsPage && this.newsPage++
                    }
                    , 1e3)
            },
            data() {
                return {
                    newsPage: 1
                }
            },
            methods: {
                hideModal(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                },
                timeToString: l["o"]
            },
            computed: {
                ...Object(o["b"])(["modalMenu", "tokens", "feed"]),
                newsFeed() {
                    let t = [];
                    for (let e in this.feed.slice(0, 20 * this.newsPage))
                        t.push(this.feed[e]);
                    return t = t.map(t => (t.summary.includes("img") && (t.summary = t.summary.replace("img", 'img style="max-width: 340px; max-height: 230px"')),
                        t)),
                        t
                }
            }
        }
            , Bw = Ow
            , Nw = (s("edf9"),
            y(Bw, Iw, Fw, !1, null, "3e559f6e", null))
            , $w = Nw.exports
            , Vw = {
            name: "MenuModal",
            components: {
                MarketNews: $w,
                EconomicCalendar: Lw,
                MarketWatch: xw,
                OrdersHistory: yw,
                OpenOrders: pw
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalMenu"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.menu || this.$store.commit(n["M"], {
                            orders: !1,
                            history: !1,
                            market: !1,
                            calendar: !1,
                            news: !1
                        })
                    }
                }
            }
        }
            , Ew = Vw
            , Uw = (s("afec"),
            y(Ew, nw, rw, !1, null, "351da610", null))
            , Hw = Uw.exports
            , jw = function() {
            var t = this
                , e = t._self._c;
            return e("aside", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.isMobile && t.modals.fullscreen || t.isMobile && t.modals.hamburgerMenu,
                    expression: "(!isMobile && modals.fullscreen) || (isMobile && modals.hamburgerMenu)"
                }],
                staticClass: "fs",
                class: {
                    mobile: t.isMobile,
                    dash: t.modals.fullscreen,
                    "aspin-design": t.aspinDesign
                },
                on: {
                    click: function(e) {
                        t.activeSelect = !1
                    }
                }
            }, [e("ul", [e("div", {
                staticClass: "top"
            }, [e("div", {
                staticClass: "head fs",
                class: {
                    mobile: t.isMobile
                }
            }, [e("div", {
                staticClass: "avatar"
            }, [e("div", {
                staticClass: "circle"
            }, [e("i", {
                staticClass: "material-icons",
                class: {
                    hide: t.user.avatar
                }
            }, [t._v("person")]), e("img", {
                class: {
                    hide: !t.user.avatar
                },
                attrs: {
                    src: t.user.avatar ? t.apiBase + "/avatar/" + t.user.avatar : ""
                }
            })])]), e("span", {
                staticClass: "name"
            }, [t.aspinDesign ? e("span", [t._v(t._s(t.tokens.fullScreen.hi))]) : t._e(), t._v(" " + t._s(t.user.fullname))]), -1 === ["bullden", "defibydao"].indexOf(t.brand) ? e("span", {
                staticClass: "id"
            }, [t._v("# " + t._s(t.user.id))]) : t._e(), t.hideEmail ? t._e() : e("span", {
                staticClass: "email"
            }, [t._v(t._s(t.user.email))])]), e("button", {
                staticClass: "deposit-btn fs-normal",
                class: {
                    active: "deposit" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("deposit")
                    }
                }
            }, [t._v(t._s(t.tokens.fullScreen.deposit) + " ")]), t.user.enable_autotrader && !t.hideTradingBot ? e("button", {
                staticClass: "fs-normal",
                on: {
                    click: function(e) {
                        return t.openAutoTraderModal()
                    }
                }
            }, [t._v("Autotrader")]) : t._e(), t.aspinDesign && t.whiteAspinTheme && t.isMobile ? e("div", {
                staticClass: "switch",
                class: {
                    active: t.lightTheme
                },
                on: {
                    click: t.switchTheme
                }
            }, [e("div", {
                staticClass: "dark"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 17 26",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M16.8541 25.5321C14.9465 26.0547 12.9292 26.1218 10.9631 25.7281C8.99706 25.3343 7.13654 24.4907 5.52997 23.2644C3.92339 22.0381 2.6152 20.463 1.70972 18.6649C0.804239 16.8667 0.32652 14.8952 0.314659 12.9075C0.302796 10.9198 0.75712 8.97095 1.6414 7.21636C2.52568 5.46177 3.81545 3.94997 5.40785 2.80153C7.00026 1.65309 8.85124 0.899784 10.8132 0.601678C12.7752 0.303572 14.7938 0.468917 16.7082 1.08453C14.4117 1.6864 12.3558 2.93599 10.783 4.68588C9.67642 5.91662 8.83084 7.3602 8.29457 8.93408C7.7583 10.5079 7.54185 12.1812 7.65761 13.8583C7.77338 15.5353 8.21907 17.1831 8.96922 18.7076C9.71936 20.2321 10.7592 21.6032 12.0294 22.7427C13.419 24.0142 15.0677 24.9674 16.8541 25.5321Z",
                    fill: "#fff"
                }
            })])]), e("div", {
                staticClass: "light"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M7.51448 3.82869C7.21508 3.70277 6.12701 3.27318 5.58662 3.08801C5.15895 2.92709 4.71196 2.82496 4.25757 2.78433C4.07501 2.84359 4.07501 3.76203 4.13343 4.31753C4.19185 4.87304 4.39632 5.5989 4.44014 5.93961C4.6227 6.97656 7.82118 3.97682 7.51448 3.85831V3.82869ZM13.9772 2.91025C13.7946 2.59917 13.1958 1.56222 12.9475 1.07338C12.725 0.677215 12.4415 0.319654 12.1077 0.0142102C11.9252 -0.111705 11.3191 0.628971 11.0781 1.05856C10.8371 1.48815 10.4136 2.23624 10.2967 2.48066C9.74904 3.3991 14.1013 3.22133 13.948 2.91025H13.9772ZM14.2766 5.19894C13.5276 5.00082 12.7576 4.89635 11.9836 4.88785C11.2288 4.89629 10.4781 5.0008 9.74904 5.19894C8.01982 5.74779 6.54164 6.90676 5.58235 8.46584C4.62305 10.0249 4.24611 11.881 4.51981 13.6976C4.79352 15.5143 5.69977 17.1715 7.07435 18.3688C8.44893 19.5662 10.2009 20.2245 12.0128 20.2245C13.8247 20.2245 15.5767 19.5662 16.9513 18.3688C18.3258 17.1715 19.2321 15.5143 19.5058 13.6976C19.7795 11.881 19.4026 10.0249 18.4433 8.46584C17.484 6.90676 16.0058 5.74779 14.2766 5.19894ZM19.4686 6.42105C19.5344 6.05071 19.7096 4.88785 19.8338 4.33975C19.9457 3.89442 19.9655 3.43042 19.8922 2.97691C19.8338 2.79174 18.9283 2.91766 18.3879 3.09542C17.8475 3.27318 17.1757 3.59167 16.9274 3.65092C15.905 4.01386 19.4029 6.70991 19.4613 6.40624L19.4686 6.42105ZM21.5206 12.6649C21.7616 12.4798 22.6744 11.6872 23.0907 11.3169C23.4442 11.0445 23.7502 10.7141 23.9962 10.3392C24.0619 10.1541 23.2659 9.66521 22.7328 9.48004C22.1998 9.29487 21.5206 9.05045 21.2724 8.93194C20.25 8.5616 21.2139 12.9094 21.5133 12.6353L21.5206 12.6649ZM19.0451 18.7903H21.1044C21.574 18.8125 22.0439 18.7498 22.4919 18.6052C22.6744 18.5459 22.3093 17.6275 22.0683 17.1238C21.7755 16.6726 21.5121 16.2025 21.2797 15.7165C20.7393 14.8573 18.7457 18.7755 19.0451 18.7755V18.7903ZM13.3126 21.916C13.5536 22.0937 14.4591 22.8937 14.8827 23.2566C15.2265 23.5598 15.6129 23.8094 16.0292 23.9973C16.2702 24.0565 16.5769 23.1381 16.6937 22.59C16.8105 22.0419 16.8763 21.3012 16.9347 20.9901C17.1172 19.9532 13.0717 21.6715 13.2834 21.916H13.3126ZM6.9741 20.5457C7.03252 20.8494 7.21508 22.0271 7.33192 22.5678C7.36805 23.0153 7.4922 23.451 7.69704 23.8491C7.8796 24.0343 8.66827 23.6047 9.08451 23.2344C9.50075 22.864 10.0557 22.3826 10.2967 22.1974C11.0781 21.5234 6.91568 20.1754 6.9741 20.5457ZM2.93582 15.3388C2.81168 15.5832 2.20558 16.6276 1.9719 17.1164C1.70312 17.5 1.51656 17.9365 1.42421 18.3978C1.42421 18.5829 2.32972 18.7681 2.88471 18.7681H4.44014C5.64504 18.7681 3.04536 15.1536 2.92852 15.3388H2.93582ZM3.17681 8.72455C2.8774 8.85046 1.78934 9.27265 1.24165 9.46522C0.804243 9.60221 0.390397 9.80709 0.0148327 10.0726C-0.102007 10.2577 0.496796 10.991 0.92034 11.2947C1.34388 11.5984 1.89157 12.1539 2.13255 12.339C2.91392 13.0131 3.4543 8.63567 3.1549 8.72455H3.17681Z",
                    fill: "#258BD4"
                }
            })])])]) : t._e()]), e("div", {
                staticClass: "scroll-menu"
            }, [e("li", {
                class: {
                    active: "dashboard" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("dashboard")
                    }
                }
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/dash-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : e("i", {
                staticClass: "material-icons"
            }, [t._v("dashboard")]), t._v(" " + t._s(t.tokens.fullScreen.dashboard) + " ")]), e("li", {
                class: {
                    active: "personal" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("personal")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("account_circle")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/profile-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.personalInfo) + " ")]), e("li", {
                class: {
                    active: "withdrawal" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("withdrawal")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("monetization_on")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/withdrawal-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.withdrawal) + " ")]), e("li", {
                class: {
                    active: "verification" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("verification")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("badge")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/verification-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.verification) + " ")]), e("li", {
                class: {
                    active: "accounts" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("accounts")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("content_copy")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/transfer-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.accounts) + " ")]), e("li", {
                class: {
                    active: "support" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("support")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("chat")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/chat-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.liveChat) + " ")]), t.savingExist ? e("li", {
                class: {
                    active: "savings" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("savings")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("savings")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/savings-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.savings) + " ")]) : t._e(), t.aspinDesign ? e("li", {
                on: {
                    click: function(e) {
                        return t.goTrade()
                    }
                }
            }, [t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/trade-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.trade) + " ")]) : t._e(), e("li", {
                class: {
                    active: "settings" === t.modalFullscreen.page
                },
                on: {
                    click: function(e) {
                        return t.changePage("settings")
                    }
                }
            }, [t.aspinDesign ? t._e() : e("i", {
                staticClass: "material-icons"
            }, [t._v("settings")]), t.aspinDesign ? e("img", {
                attrs: {
                    src: t.staticBase + `aspin-design/settings-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                }
            }) : t._e(), t._v(" " + t._s(t.tokens.fullScreen.settings) + " ")]), t.personalBtns ? e("li", {
                staticClass: "personal-btns",
                class: {
                    fool: "mirabud" === t.brand
                }
            }, [e("a", {
                attrs: {
                    href: "https://anydesk.com/download"
                }
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "misc/AnyDesk-logo.png",
                    alt: ""
                }
            }), t._v(" AnyDesk ")]), e("a", {
                attrs: {
                    href: "https://teamviewer.com/download"
                }
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "misc/TeamViewer-logo.png",
                    alt: ""
                }
            }), t._v(" TeamViewer ")]), "mirabud" === t.brand ? e("a", {
                attrs: {
                    href: "https://www.aeroadmin.com"
                }
            }, [e("img", {
                attrs: {
                    src: t.staticBase + "misc/aeroadmin.png",
                    alt: ""
                }
            }), t._v(" AeroAdmin ")]) : t._e()]) : t._e()])]), e("div", {
                staticClass: "side-menu"
            }, [e("div", {
                staticClass: "menu",
                class: {
                    hide: t.modals.fullscreen
                }
            }, [e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.market,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("market")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("view_list")]), e("span", [t._v(t._s(t.tokens.sideMenu.marketWatch.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.market,
                    minus: t.modalMenu.market && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("market")
                    }
                }
            }, [t._v(t._s(t.modalMenu.market ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.orders,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("orders")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("local_mall")]), e("span", [t._v(t._s(t.tokens.sideMenu.activeOrders.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.orders,
                    minus: t.modalMenu.orders && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("orders")
                    }
                }
            }, [t._v(t._s(t.modalMenu.orders ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.history,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("history")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("history")]), e("span", [t._v(t._s(t.tokens.sideMenu.tradingHistory.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.history,
                    minus: t.modalMenu.history && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("history")
                    }
                }
            }, [t._v(t._s(t.modalMenu.history ? "remove_circle" : "add_circle"))])]), t.removeEconomicCalendar ? t._e() : e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.calendar,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("calendar")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("today")]), e("span", [t._v(t._s(t.tokens.sideMenu.economicCalendar.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.calendar,
                    minus: t.modalMenu.calendar && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("calendar")
                    }
                }
            }, [t._v(t._s(t.modalMenu.calendar ? "remove_circle" : "add_circle"))])]), e("div", {
                staticClass: "item",
                class: {
                    active: t.modalMenu.news,
                    isMobile: t.isMobile
                },
                on: {
                    click: function(e) {
                        return t.showMenuModal("news")
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("campaign")]), e("span", [t._v(t._s(t.tokens.sideMenu.marketNews.toUpperCase()))]), e("i", {
                staticClass: "material-icons toggle-btn",
                class: {
                    hide: t.modalMenuSplit > 1 && !t.modalMenu.news,
                    minus: t.modalMenu.news && t.modalMenuSplit > 0
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.toggleWidget("news")
                    }
                }
            }, [t._v(t._s(t.modalMenu.news ? "remove_circle" : "add_circle"))])])])]), e("li", {
                staticClass: "logout aspin-logout",
                on: {
                    click: t.logout
                }
            }, [t.aspinDesign ? e("i", {
                staticClass: "material-icons"
            }, [t._v("arrow_back_ios_new")]) : e("i", {
                staticClass: "material-icons"
            }, [t._v("logout")]), e("span", [t._v(t._s(t.tokens.fullScreen.logOut))])])])
        }
            , qw = []
            , Rw = {
            name: "SideMenu",
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    apiBase: pt["ub"],
                    personalBtns: pt["nb"],
                    activeSelect: !1,
                    brand: pt["e"],
                    aspinDesign: pt["b"],
                    removeEconomicCalendar: pt["tb"],
                    hideTradingBot: pt["T"],
                    hideEmail: pt["N"],
                    whiteAspinTheme: pt["Pb"]
                }
            },
            methods: {
                ...Object(o["c"])(["setLightTheme", "setThemeColors"]),
                switchTheme() {
                    this.setLightTheme(!this.lightTheme),
                        localStorage.setItem("theme", this.lightTheme ? "white" : "black"),
                        localStorage.setItem("tradingview.current_theme.name", this.lightTheme ? "Light" : pt["Lb"]);
                    let t = this.lightTheme ? {
                        ...this.themeColors,
                        "background-dark": "#fff",
                        line: "#fff"
                    } : {
                        ...this.themeColors,
                        "background-dark": pt["Ib"],
                        line: pt["Kb"]
                    };
                    this.setThemeColors(t),
                    document.body.classList.contains("light-theme") && document.body.classList.remove("light-theme"),
                    this.lightTheme && document.body.classList.add("light-theme")
                },
                showMenuModal(t) {
                    this.$store.commit(n["F"], {
                        menu: !0
                    });
                    let e = {
                        orders: !1,
                        history: !1,
                        market: !1,
                        calendar: !1,
                        news: !1
                    };
                    e[t] = !0,
                        this.$store.commit(n["M"], e),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                openAutoTraderModal() {
                    this.$store.commit(n["F"], {
                        autoTrader: !0
                    })
                },
                toggleWidget(t) {
                    let e = JSON.parse(JSON.stringify(this.modalMenu));
                    e[t] = !e[t],
                        this.$store.commit(n["M"], e);
                    let s = !0;
                    for (let a in e)
                        if (e[a]) {
                            s = !1;
                            break
                        }
                    s && this.$store.commit(n["F"], {
                        menu: !1,
                        sideMenu: !Object(l["h"])()
                    }),
                    e[t] && !this.modals.menu && this.$store.commit(n["F"], {
                        menu: !0,
                        sideMenu: !1
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                changePage(t) {
                    this.$store.commit(n["F"], {
                        fullscreen: !0
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        }),
                        this.$store.commit(n["L"], {
                            page: t
                        })
                },
                changeCurrency(t) {
                    localStorage.activeCurrency = t,
                        this.$store.commit(n["c"], t)
                },
                logout() {
                    this.$store.dispatch(r["x"])
                },
                goTrade() {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "user", "autoTraderConfig", "modals", "modalMenu", "modalFullscreen", "user", "accounts", "activeAccount", "activeCurrency", "savingExist", "staticBase", "lightTheme", "themeColors"]),
                modalMenuSplit() {
                    let t = 0;
                    for (let e in this.modalMenu)
                        this.modalMenu[e] && t++;
                    return t
                }
            }
        }
            , Ww = Rw
            , zw = (s("103f"),
            y(Ww, jw, qw, !1, null, "5a8824ea", null))
            , Gw = zw.exports
            , Yw = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.autoClose
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.autoCloseModal.takeProfitStopLoss.toUpperCase()))]), e("div", {
                staticClass: "btns",
                class: {
                    hide: t.values.orderActive
                },
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "btn",
                class: {
                    active: "default" === t.mode
                },
                on: {
                    click: function(e) {
                        return t.setMode("default")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.orderMenu.default) + " ")])]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container value-container--grid",
                class: {
                    transparent: t.tpTransparent
                },
                on: {
                    click: t.focusTP
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("span", [t._v(t._s(t.tokens.autoCloseModal.takeProfit))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model.number",
                    value: t.values.tp,
                    expression: "values.tp",
                    modifiers: {
                        number: !0
                    }
                }],
                ref: "tp",
                staticClass: "value",
                attrs: {
                    type: "text",
                    inputmode: "decimal"
                },
                domProps: {
                    value: t.values.tp
                },
                on: {
                    keypress: t.validateInput,
                    keyup: t.updateTpInput,
                    blur: [t.blurTP, function(e) {
                        return t.$forceUpdate()
                    }
                    ],
                    input: function(e) {
                        e.target.composing || t.$set(t.values, "tp", t._n(e.target.value))
                    }
                }
            })]), e("div", {
                staticClass: "plus",
                attrs: {
                    id: "tp-plus"
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.values.tp = t.values.tp ? (parseFloat(t.values.tp) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add")])]), e("div", {
                staticClass: "minus",
                attrs: {
                    id: "tp-minus"
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.values.tp = t.values.tp ? Math.max(0, parseFloat(t.values.tp) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.bid.toFixed(t.modalSymbolActive.precision)
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("remove")])])])]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container value-container--grid",
                class: {
                    transparent: t.slTransparent
                },
                on: {
                    click: t.focusSL
                }
            }, [e("div", {
                staticClass: "subtitle-input"
            }, [e("span", [t._v(t._s(t.tokens.autoCloseModal.stopLoss))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model.number",
                    value: t.values.sl,
                    expression: "values.sl",
                    modifiers: {
                        number: !0
                    }
                }],
                ref: "sl",
                staticClass: "value",
                attrs: {
                    type: "text",
                    inputmode: "decimal"
                },
                domProps: {
                    value: t.values.sl
                },
                on: {
                    keypress: t.validateInput,
                    keyup: t.updateSlInput,
                    blur: [t.blurSL, function(e) {
                        return t.$forceUpdate()
                    }
                    ],
                    input: function(e) {
                        e.target.composing || t.$set(t.values, "sl", t._n(e.target.value))
                    }
                }
            })]), e("div", {
                staticClass: "plus",
                attrs: {
                    id: "sl-plus"
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.values.sl = t.values.sl ? (parseFloat(t.values.sl) + Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add")])]), e("div", {
                staticClass: "minus",
                attrs: {
                    id: "sl-minus"
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.values.sl = t.values.sl ? Math.max(0, parseFloat(t.values.sl) - Math.pow(.1, t.modalSymbolActive.precision)).toFixed(t.modalSymbolActive.precision) : t.modalSymbolActive.quote.ask.toFixed(t.modalSymbolActive.precision)
                    }
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("remove")])])])]), e("button", {
                class: {
                    hide: !t.values.orderActive
                },
                on: {
                    click: t.updateOrder
                }
            }, [t._v(t._s(t.tokens.autoCloseModal.updateOrder) + " ")]), e("button", {
                staticClass: "apply-button",
                class: {
                    hide: t.values.orderActive
                },
                on: {
                    click: t.apply
                }
            }, [t._v("Apply ")])])])
        }
            , Zw = []
            , Jw = {
            name: "AutoCloseModal",
            data() {
                return {
                    values: {
                        left: 0,
                        top: 0,
                        symbolActive: null,
                        orderActive: null,
                        tp: 0,
                        tpType: "=",
                        sl: 0,
                        slType: "=",
                        item: 0
                    },
                    mode: "default",
                    tpTransparent: !1,
                    slTransparent: !1
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        autoClose: !1
                    })
                },
                focusTP() {
                    this.tpTransparent || (this.tpTransparent = !0,
                        this.$refs["tp"].focus())
                },
                blurTP() {
                    this.tpTransparent = !1
                },
                focusSL() {
                    this.slTransparent || (this.slTransparent = !0,
                        this.$refs["sl"].focus())
                },
                blurSL() {
                    this.slTransparent = !1
                },
                validateInput(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", ","].indexOf(t.key) && t.preventDefault(),
                    "." !== t.key && "," !== t.key || -1 === t.target.value.indexOf(".") && -1 === t.target.value.indexOf(",") || t.preventDefault()
                },
                updateTpInput(t) {
                    let e = String(t.target.value);
                    e = e.includes(",") ? e.replace(/,/, ".") : e,
                        e = parseFloat(e),
                    !isNaN(e) && (this.values.tp = e)
                },
                updateSlInput(t) {
                    let e = String(t.target.value);
                    e = e.includes(",") ? e.replace(/,/, ".") : e,
                        e = parseFloat(e),
                    !isNaN(e) && (this.values.sl = e)
                },
                updateOrder() {
                    const t = Object.keys(this.activeAccount.orders)
                        , e = t.find(t => this.activeAccount.orders[t].id === this.values.orderActive);
                    if (void 0 === this.activeAccount.orders[e])
                        return void this.$store.commit(n["F"], {
                            autoClose: !1
                        });
                    let s = this.activeAccount.orders[e].price_open
                        , a = this.activeAccount.orders[e].type
                        , i = this.activeAccount.orders[e].easy_leverage || this.activeAccount.leverage
                        , o = this.activeAccount.orders[e].easy_amount
                        , l = 0
                        , c = 0;
                    switch (this.values.tpType) {
                        case "%":
                            c = Number(s) + (a % 2 ? -1 : 1) * s * this.values.tp / (100 * i);
                            break;
                        case "$":
                            c = Number(s) + (a % 2 ? -1 : 1) * s * this.values.tp / (100 * i * o);
                            break;
                        case "=":
                            c = String(this.values.tp),
                                c = c.includes(",") ? c.replace(/,/, ".") : c,
                                c = parseFloat(c);
                            break
                    }
                    switch (this.values.slType) {
                        case "%":
                            l = Number(s) + (a ? 1 : -1) * s * this.values.sl / (100 * this.leverage);
                            break;
                        case "$":
                            l = Number(s) + (a ? 1 : -1) * s * this.values.sl / (this.leverage * this.amount);
                            break;
                        case "=":
                            l = this.values.sl;
                            break
                    }
                    0 != this.values.tp && "" !== this.values.tp || (c = 0),
                    0 != this.values.sl && "" !== this.values.sl || (l = 0),
                        this.$store.dispatch(r["i"], {
                            id: this.values.orderActive,
                            account_id: this.activeAccount.id,
                            sl: l,
                            tp: c
                        }),
                        this.$store.commit(n["F"], {
                            autoClose: !1
                        })
                },
                setMode(t) {
                    this.mode = t,
                        this.$store.commit(n["mb"], t)
                },
                apply() {
                    this.$store.commit(n["I"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !1
                        })
                },
                currencySign: l["e"],
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalAutoClose", "tokens", "activeAccount", "symbols", "orders"]),
                position() {
                    if (!this.modals.autoClose)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 200,
                        height: this.values.orderActive ? 262 : 209
                    };
                    return t.width >= 600 && this.isMobile() ? {
                        left: this.modalAutoClose.posX,
                        top: this.modalAutoClose.posY - 87
                    } : t.width < 600 && this.isMobile() ? {
                        left: t.width - e.width,
                        top: this.modalAutoClose.top - 188.5
                    } : {
                        left: this.modalAutoClose.left - e.width - 10,
                        top: Math.min(this.modalAutoClose.top, t.height - e.height)
                    }
                },
                modalSymbolActive() {
                    var t;
                    if (null === (null === (t = this.values) || void 0 === t ? void 0 : t.symbolActive)) {
                        var e, s;
                        const t = null === (e = this.orders) || void 0 === e || null === (e = e[null === (s = this.values) || void 0 === s ? void 0 : s.item]) || void 0 === e ? void 0 : e.symbol;
                        t && this.$store.commit(n["I"], {
                            symbolActive: this.symbols[t]
                        })
                    }
                    return this.modalAutoClose.symbolActive || {
                        precision: 0,
                        quote: {
                            bid: 0,
                            ask: 0
                        }
                    }
                }
            },
            watch: {
                modalAutoClose: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["I"], t)
                    }
                }
            }
        }
            , Kw = Jw
            , Xw = (s("56e4"),
            y(Kw, Yw, Zw, !1, null, "0e89fdc5", null))
            , Qw = Xw.exports
            , tk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.pending
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.pendingModal.pending.toUpperCase()))]), e("div", {
                staticClass: "row stretch"
            }, [e("div", {
                staticClass: "value-container"
            }, [e("span", [t._v(t._s(t.tokens.pendingModal.assetPrice))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.values.price,
                    expression: "values.price"
                }],
                ref: "price",
                staticClass: "value",
                attrs: {
                    placeholder: t.tokens.pendingModal.current
                },
                domProps: {
                    value: t.values.price
                },
                on: {
                    focus: t.focusPrice,
                    blur: t.blurPrice,
                    keypress: t.validateInput,
                    keyup: t.updatePendingInput,
                    input: function(e) {
                        e.target.composing || t.$set(t.values, "price", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "buttons"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return t.changePrice(1)
                    }
                }
            }, [t._v("+")]), e("button", {
                on: {
                    click: function(e) {
                        return t.changePrice(0)
                    }
                }
            }, [t._v("-")])])]), e("button", {
                staticClass: "revert",
                class: {
                    hide: !t.values.price
                },
                on: {
                    click: function(e) {
                        t.values.price = ""
                    }
                }
            }, [t._v(t._s(t.tokens.pendingModal.revert))]), e("button", {
                staticClass: "apply-button",
                staticStyle: {
                    "margin-top": "10px"
                },
                on: {
                    click: t.apply
                }
            }, [t._v("Apply ")]), e("div", {
                staticClass: "row stretch"
            }, [e("span", {
                staticClass: "info"
            }, [t._v(t._s(t.tokens.pendingModal.automatically))])])])])
        }
            , ek = []
            , sk = {
            name: "PendingModal",
            data() {
                return {
                    priceTransparent: !1,
                    values: {
                        symbolActive: null,
                        price: ""
                    }
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        pending: !1
                    })
                },
                validateInput(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", ","].indexOf(t.key) && t.preventDefault(),
                    "." !== t.key && "," !== t.key || -1 === t.target.value.indexOf(".") && -1 === t.target.value.indexOf(",") || t.preventDefault()
                },
                updatePendingInput(t) {
                    let e = String(t.target.value);
                    e = e.includes(",") ? e.replace(/,/, ".") : e,
                    !isNaN(e) && (this.values.price = e)
                },
                focusPrice() {
                    this.priceTransparent = !0
                },
                blurPrice() {
                    this.priceTransparent = !1
                },
                changePrice(t) {
                    this.values.price || (this.values.price = this.currentSym.quote.bid),
                        t ? this.values.price = Number(this.values.price) + Math.pow(.1, this.currentSym.precision) : (this.values.price -= Math.pow(.1, this.currentSym.precision),
                            this.values.price = Math.max(0, this.values.price)),
                        this.values.price = (this.values.price + Number.EPSILON).toFixed(this.currentSym.precision)
                },
                apply() {
                    this.$store.commit(n["N"], {
                        event: 1
                    }),
                        this.$store.commit(n["F"], {
                            pending: !1
                        })
                },
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalPending", "tokens", "symbolsActive", "symbols"]),
                currentSym() {
                    return void 0 !== this.values.symbolActive && null !== this.values.symbolActive && this.symbolsActive[this.values.symbolActive] ? this.symbols[this.symbolsActive[this.values.symbolActive].symbol] : {
                        precision: 0,
                        quote: {
                            bid: 0
                        }
                    }
                },
                position() {
                    if (!this.modals.pending)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 210,
                        height: this.values.price ? 232 : 199
                    };
                    return t.width >= 600 && this.isMobile() ? {
                        left: this.modalPending.posX,
                        top: this.modalPending.posY - 29
                    } : t.width < 600 && this.isMobile() ? {
                        left: t.width - e.width,
                        top: this.modalPending.posY - 29
                    } : {
                        left: this.modalPending.left - e.width - 10,
                        top: Math.min(this.modalPending.top, t.height - e.height)
                    }
                }
            },
            watch: {
                modalPending: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e])
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["N"], {
                            symbolActive: t.symbolActive,
                            price: t.price
                        })
                    }
                }
            }
        }
            , ak = sk
            , ik = (s("be13"),
            y(ak, tk, ek, !1, null, "a1a187ec", null))
            , ok = ik.exports
            , nk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.forgotPassword,
                    newDesign: t.newDesign,
                    "aspin-modal-design": t.aspinDesign
                }
            }, [e("div", {
                staticClass: "modal"
            }, [e("div", {
                staticClass: "modal-box"
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.forgotPasswordModal.forgotPassword.toUpperCase()))]), e("i", {
                staticClass: "material-icons close pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("label", [t._v(t._s(t.tokens.forgotPasswordModal.submitEmail))]), e("div", {
                staticClass: "form-row input"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.email,
                    expression: "email"
                }],
                staticClass: "form-control",
                attrs: {
                    placeholder: t.tokens.loginModal.enterEmail
                },
                domProps: {
                    value: t.email
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.email = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "button green-button",
                on: {
                    click: t.restorePassword
                }
            }, [t._v(" " + t._s(t.tokens.forgotPasswordModal.submit.toUpperCase()) + " ")])])])])])])
        }
            , rk = []
            , lk = {
            name: "ForgotPasswordModal",
            data() {
                return {
                    email: "",
                    newDesign: pt["kb"],
                    aspinDesign: pt["b"]
                }
            },
            methods: {
                hideModal() {
                    this.email = "",
                        this.$store.commit(n["F"], {
                            forgotPassword: !1
                        })
                },
                restorePassword() {
                    this.$store.dispatch(r["D"], {
                        email: this.email.trim()
                    }),
                        this.$store.commit(n["F"], {
                            forgotPassword: !1
                        })
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "modals"])
            }
        }
            , ck = lk
            , dk = (s("915f"),
            y(ck, nk, rk, !1, null, "102aaa78", null))
            , uk = dk.exports
            , mk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.newPassword
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.newPasswordModal.setNewPassword.toUpperCase()))]), e("i", {
                staticClass: "material-icons close pointer"
            }, [t._v("plus")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("div", {
                staticClass: "show-hide-password"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.newPassword,
                    expression: "newPassword"
                }],
                ref: "password",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    placeholder: t.tokens.newPasswordModal.newPassword
                },
                domProps: {
                    value: t.newPassword
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.newPassword = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        return t.showPass(t.$refs.password)
                    },
                    touchend: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    touchmove: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    mousedown: function(e) {
                        return t.showPass(t.$refs.password)
                    },
                    mouseup: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    dragover: function(e) {
                        return t.hidePass(t.$refs.password)
                    },
                    mouseout: function(e) {
                        return t.hidePass(t.$refs.password)
                    }
                }
            }, [t._v("visibility")])])]), e("div", {
                staticClass: "form-row"
            }, [e("div", {
                staticClass: "show-hide-password"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.confirmedNewPassword,
                    expression: "confirmedNewPassword"
                }],
                ref: "password2",
                staticClass: "form-control",
                attrs: {
                    type: "password",
                    placeholder: t.tokens.newPasswordModal.confirmNewPassword
                },
                domProps: {
                    value: t.confirmedNewPassword
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.confirmedNewPassword = e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        return t.showPass(t.$refs.password2)
                    },
                    touchend: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    touchmove: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    mousedown: function(e) {
                        return t.showPass(t.$refs.password2)
                    },
                    mouseup: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    dragover: function(e) {
                        return t.hidePass(t.$refs.password2)
                    },
                    mouseout: function(e) {
                        return t.hidePass(t.$refs.password2)
                    }
                }
            }, [t._v("visibility")])])]), e("div", [e("div", {
                staticClass: "button",
                class: {
                    "green-button": t.newPassword === t.confirmedNewPassword
                },
                on: {
                    click: t.setNewPassword
                }
            }, [t._v(" " + t._s(t.tokens.newPasswordModal.setButton.toUpperCase()) + " ")])])])])])])
        }
            , pk = []
            , hk = {
            name: "NewPasswordModal",
            data() {
                return {
                    newPassword: "",
                    confirmedNewPassword: ""
                }
            },
            methods: {
                showPass: l["n"],
                hidePass: l["g"],
                setNewPassword() {
                    this.newPassword === this.confirmedNewPassword ? this.$store.dispatch(r["C"], {
                        password: this.newPassword
                    }) : this.$store.commit(n["V"], "LOCAL_PASSWORDS_NOT_MATCH")
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        newPassword: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            }
        }
            , vk = hk
            , fk = (s("3941"),
            y(vk, mk, pk, !1, null, "9a6a7b16", null))
            , gk = fk.exports
            , bk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.closePosition
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.closePositionModal.closeOrder.toUpperCase()) + " #" + t._s(t.modalClosePosition.activeOrderId))]), e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [t._v(" " + t._s(t.tokens.closePositionModal.areYouSure) + " " + t._s(t.activeOrder.type ? t.tokens.closePositionModal.sell.toUpperCase() : t.tokens.closePositionModal.buy.toUpperCase()) + " " + t._s(t.activeOrder.volume) + " " + t._s(t.symbols[t.activeOrder.symbol] ? t.symbols[t.activeOrder.symbol].alias : "") + "? ")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button red-button",
                on: {
                    click: function(e) {
                        return t.closePosition(t.modalClosePosition.activeOrderId, t.modalClosePosition.index)
                    }
                }
            }, [t.closeOrderLoader ? e("div", {
                staticClass: "loader"
            }) : e("span", [t._v(t._s(t.tokens.closePositionModal.yes))])])]), e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button bg-light-button",
                on: {
                    click: t.hideModal
                }
            }, [t._v(t._s(t.tokens.closePositionModal.no))])])])])])
        }
            , yk = []
            , _k = {
            name: "ClosePositionModal",
            methods: {
                hideModal() {
                    this.closeOrderLoader || this.$store.commit(n["F"], {
                        closePosition: !1
                    })
                },
                closePosition(t, e) {
                    this.$store.dispatch(r["h"], {
                        id: t,
                        index: e,
                        account_id: this.activeAccount.id
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "activeAccount", "tokens", "symbols", "modalClosePosition", "closeOrderLoader"]),
                activeOrder() {
                    let t = Object.values(this.activeAccount.orders).find(t => t.id === this.modalClosePosition.activeOrderId);
                    return t || {
                        alias: "",
                        type: 0,
                        volume: 0
                    }
                }
            }
        }
            , Ck = _k
            , wk = (s("3104"),
            y(Ck, bk, yk, !1, null, "dffd12b6", null))
            , kk = wk.exports
            , Sk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.depositSuccess,
                    expression: "modals.depositSuccess"
                }],
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.depositSuccessModal.title))]), e("i", {
                staticClass: "material-icons"
            }, [t._v("check")])]), e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.tokens.depositSuccessModal.text) + " ")]), e("div", {
                staticClass: "row"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("OK")])])])])
        }
            , xk = []
            , Mk = {
            name: "NewPasswordModal",
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        depositSuccess: !1
                    })
                }
            }
        }
            , Ak = Mk
            , Dk = (s("3b05"),
            y(Ak, Sk, xk, !1, null, "759affdd", null))
            , Pk = Dk.exports
            , Tk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.depositFail,
                    expression: "modals.depositFail"
                }],
                staticClass: "modal-wrapper",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v(t._s(t.tokens.depositFailModal.title))]), e("i", {
                staticClass: "material-icons"
            }, [t._v("report")])]), e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.tokens.depositFailModal.text) + " ")]), e("div", {
                staticClass: "row"
            }, [e("button", {
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("Close")])])])])
        }
            , Lk = []
            , Ik = {
            name: "NewPasswordModal",
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        depositFail: !1
                    })
                }
            }
        }
            , Fk = Ik
            , Ok = (s("2909"),
            y(Fk, Tk, Lk, !1, null, "42f1a442", null))
            , Bk = Ok.exports
            , Nk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.withdrawalCancel
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [t._v("> "), e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("Confirm Withdrawal Cancel?")]), e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button red-button",
                on: {
                    click: function(e) {
                        return t.cancelWithdrawal(t.modalWithdrawalCancel.id)
                    }
                }
            }, [t._v("Confirm")])]), e("div", {
                staticClass: "col"
            }, [e("span", {
                staticClass: "button bg-light-button",
                on: {
                    click: t.hideModal
                }
            }, [t._v("Close")])])])])])
        }
            , $k = []
            , Vk = {
            name: "WithdrawalCancelModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        withdrawalCancel: !1
                    })
                },
                cancelWithdrawal(t) {
                    this.$store.commit(n["F"], {
                        withdrawalCancel: !1
                    }),
                        this.$store.dispatch(r["g"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "modalWithdrawalCancel"]),
                activeOrder() {
                    return this.activeAccount.orders[this.modalClosePosition.activeOrderId] || {
                        alias: "",
                        type: 0,
                        volume: 0
                    }
                }
            }
        }
            , Ek = Vk
            , Uk = (s("42be"),
            y(Ek, Nk, $k, !1, null, "3d8fb6ee", null))
            , Hk = Uk.exports
            , jk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.pciDssModal
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [e("span", [t._v("PCI DSS COMPLIANT")]), e("i", {
                staticClass: "material-icons pointer",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [t._v(" " + t._s(t.tokens.pciDssModal.desc) + " ")])])])])
        }
            , qk = []
            , Rk = {
            name: "PciDssModal",
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        pciDssModal: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens"])
            }
        }
            , Wk = Rk
            , zk = (s("531f"),
            y(Wk, jk, qk, !1, null, "6d64340b", null))
            , Gk = zk.exports
            , Yk = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.qrCode
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [t.value ? e("QrcodeVue", {
                attrs: {
                    value: t.value,
                    size: t.size
                }
            }) : t._e()], 1)])
        }
            , Zk = []
            , Jk = {
            name: "QrCodeModal",
            components: {
                QrcodeVue: tl
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        qrCode: !1
                    }),
                        this.$store.commit(n["O"], null)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "modalQrCode"]),
                value() {
                    return this.modalQrCode.value
                },
                size() {
                    return window.innerWidth > 1e3 ? 500 : 250
                }
            }
        }
            , Kk = Jk
            , Xk = (s("f0c4"),
            y(Kk, Yk, Zk, !1, null, "eb122f58", null))
            , Qk = Xk.exports
            , tS = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.AlertMessageModal
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "row"
            }, [t._v(" " + t._s(t.varNames.ALERT_MESSAGE) + " ")]), e("button", {
                staticClass: "button",
                on: {
                    click: t.hideModal
                }
            }, [t._v("close")])])])
        }
            , eS = []
            , sS = {
            name: "AlertMessageModal",
            data() {
                return {
                    firstTimeShowed: !0
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        AlertMessageModal: !1
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "tokens", "variables"]),
                varNames() {
                    return this.variables
                }
            },
            watch: {
                modals: {
                    deep: !0,
                    handler(t) {
                        t.fullscreen && this.firstTimeShowed && (this.firstTimeShowed = !1,
                            this.$store.commit(n["F"], {
                                AlertMessageModal: !0
                            }))
                    }
                }
            }
        }
            , aS = sS
            , iS = (s("8244"),
            y(aS, tS, eS, !1, null, "3793eac2", null))
            , oS = iS.exports
            , nS = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "grid-layout-container",
                class: "layout_" + t.gridLayout
            }, t._l(t.visibleCharts, (function(t, s) {
                    return e("div", {
                        key: s,
                        staticClass: "chart-container",
                        class: "chart-" + s
                    }, [e("Chart", {
                        attrs: {
                            chart: t,
                            gridId: s
                        }
                    })], 1)
                }
            )), 0)
        }
            , rS = []
            , lS = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "chart"
            }, [e("div", {
                staticClass: "chart-col"
            }, [e("div", {
                staticClass: "chart-cont",
                attrs: {
                    id: "chart-" + t.gridId
                }
            })]), e("OrderMenu", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.currentSym,
                    expression: "currentSym"
                }],
                attrs: {
                    chart: t.chart,
                    gridId: t.gridId,
                    visible: t.orderMenu
                }
            }), e("div", {
                staticClass: "no-chart",
                class: {
                    hide: !1 !== t.chart
                },
                on: {
                    click: t.showSymbolsModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("add")]), e("span", [t._v(t._s(t.tokens.chart.addNewChart))])])], 1)
        }
            , cS = []
            , dS = function() {
            var t, e, s, a, i, o, n, r, l, c, d, u, m, p, h, v, f, g = this, b = g._self._c;
            return b("div", {
                ref: "order-menu",
                staticClass: "order-menu"
            }, [b("Calculator", {
                attrs: {
                    visible: g.calculatorIsVisible,
                    input: g.calculatorInputValue
                },
                on: {
                    close: function(t) {
                        g.calculatorIsVisible = !1
                    },
                    apply: g.applyCalcValue
                }
            }), b("div", {
                staticClass: "grid-item"
            }, [b("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "lots" === g.volumeType,
                    expression: "volumeType==='lots'"
                }],
                staticClass: "volume-with-buttons value-container value-container--grid",
                class: {
                    transparent: g.lotsTransparent
                },
                on: {
                    click: function(t) {
                        return g.focusLots()
                    }
                }
            }, [b("div", {
                staticClass: "subtitle-input"
            }, [b("span", [g._v(g._s(g.tokens.orderMenu.volume))]), b("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: g.volumeInLots,
                    expression: "volumeInLots"
                }],
                staticClass: "value",
                attrs: {
                    type: "text",
                    inputmode: "decimal",
                    readonly: g.isMobile()
                },
                domProps: {
                    value: g.volumeInLots
                },
                on: {
                    keypress: g.validateInput,
                    blur: g.blurLots,
                    keyup: g.updateLotsInput,
                    input: function(t) {
                        t.target.composing || (g.volumeInLots = t.target.value)
                    }
                }
            })]), b("div", {
                staticClass: "plus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.increaseVolumeInLots.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("add")])]), b("div", {
                staticClass: "minus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.decreaseVolumeInLots.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("remove")])])]), b("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "units" === g.volumeType,
                    expression: "volumeType==='units'"
                }],
                staticClass: "volume-with-buttons value-container value-container--grid",
                class: {
                    transparent: g.unitsTransparent
                },
                on: {
                    click: function(t) {
                        return g.focusUnits()
                    }
                }
            }, [b("div", {
                staticClass: "subtitle-input"
            }, [b("span", [g._v(g._s(g.tokens.orderMenu.volume))]), b("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: g.volumeInUnits,
                    expression: "volumeInUnits"
                }],
                staticClass: "value",
                attrs: {
                    type: "text",
                    inputmode: "decimal",
                    readonly: g.isMobile()
                },
                domProps: {
                    value: g.volumeInUnits
                },
                on: {
                    keypress: g.validateInput,
                    blur: g.blurUnits,
                    keyup: g.updateUnitsInput,
                    input: function(t) {
                        t.target.composing || (g.volumeInUnits = t.target.value)
                    }
                }
            })]), b("div", {
                staticClass: "plus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.increaseVolumeInUnits.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("add")])]), b("div", {
                staticClass: "minus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.decreaseVolumeInUnits.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("remove")])])]), b("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "currency" === g.volumeType,
                    expression: "volumeType==='currency'"
                }],
                staticClass: "volume-with-buttons value-container value-container--grid",
                class: {
                    transparent: g.currencyTransparent
                },
                on: {
                    click: function(t) {
                        return g.focusCurrency()
                    }
                }
            }, [b("div", {
                staticClass: "subtitle-input"
            }, [b("span", [g._v(g._s(g.tokens.orderMenu.volume))]), b("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: g.volumeInCurrency,
                    expression: "volumeInCurrency"
                }],
                staticClass: "value",
                attrs: {
                    type: "text",
                    inputmode: "decimal",
                    readonly: g.isMobile()
                },
                domProps: {
                    value: g.volumeInCurrency
                },
                on: {
                    keypress: g.validateInput,
                    blur: g.blurCurrency,
                    keyup: g.updateCurrencyInput,
                    input: function(t) {
                        t.target.composing || (g.volumeInCurrency = t.target.value)
                    }
                }
            })]), b("div", {
                staticClass: "plus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.increaseVolumeInCurrency.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("add")])]), b("div", {
                staticClass: "minus",
                on: {
                    click: function(t) {
                        return t.stopPropagation(),
                            g.decreaseVolumeInCurrency.apply(null, arguments)
                    }
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("remove")])])]), b("div", {
                staticClass: "btns",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, g._l(g.volumesTypes, (function(t, e) {
                    return b("div", {
                        key: e,
                        staticClass: "btn",
                        class: {
                            active: g.volumeType === t
                        },
                        on: {
                            click: function(e) {
                                g.volumeType = t
                            }
                        }
                    }, [g._v(g._s(g.tokens.orderMenu[t]))])
                }
            )), 0)]), b("div", {
                staticClass: "grid-item order-vals"
            }, [b("div", {
                staticClass: "order-val"
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.contractSize) + ":")]), b("span", {
                staticClass: "digit"
            }, [g._v(g._s(g.contractSize.toLocaleString()))])]), b("div", {
                staticClass: "order-val"
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.position) + ":")]), b("span", {
                staticClass: "digit"
            }, [g._v(g._s(g.orderVals.position.toLocaleString()))])]), b("div", {
                staticClass: "order-val"
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.margin) + ":")]), b("span", {
                staticClass: "digit",
                class: {
                    red: g.orderVals.margin > g.balances.equity - g.balances.margin
                }
            }, [g._v(g._s(g.currencySign(g.activeAccount.currency)) + g._s(g.orderVals.margin.toLocaleString()))])]), b("div", {
                staticClass: "order-val"
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.freeMargin) + ":")]), b("span", {
                staticClass: "digit",
                class: {
                    red: g.orderVals.freeMargin < 0
                }
            }, [g._v(g._s(g.currencySign(g.activeAccount.currency) + g.orderVals.freeMargin.toLocaleString(void 0, {
                minimumFractionDigits: g.activeAccount.precision,
                maximumFractionDigits: g.activeAccount.precision
            })))])]), b("div", {
                staticClass: "order-val",
                class: {
                    hide: g.pendingPrice
                }
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.spread) + ":")]), b("span", {
                staticClass: "digit"
            }, [g._v(g._s(g.spread))])]), b("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: 1 == g.showLeverage,
                    expression: "showLeverage==1"
                }],
                staticClass: "order-val"
            }, [b("span", {
                staticClass: "title"
            }, [g._v(g._s(g.tokens.orderMenu.leverage) + ":")]), b("span", {
                staticClass: "digit"
            }, [g._v("1:" + g._s(g.computedLeverage))])]), b("button", {
                staticClass: "profit-calculator",
                on: {
                    click: g.showProfitCalculator
                }
            }, [b("i", {
                staticClass: "material-icons"
            }, [g._v("legend_toggle")]), g._v(g._s(g.tokens.profitCalculatorModal.profitCalculator))])]), b("div", {
                ref: "autoclose-holder",
                staticClass: "grid-item tpsl grey-input",
                on: {
                    click: g.showAutoCloseModal
                }
            }, [b("span", [g._v(g._s(g.tokens.orderMenu.takeProfitStopLoss))]), b("span", {
                staticClass: "expiration"
            }, [b("span", {
                class: {
                    hide: g.tp || 0 != g.tp || g.sl || 0 != g.sl
                }
            }, [g._v(g._s(g.tokens.orderMenu.notSet))]), b("span", {
                class: {
                    hide: 0 == g.tp
                }
            }, [g._v(g._s("$" === g.tpType ? g.currencySign(g.activeAccount.currency) : "") + g._s(g.tp) + g._s("%" === g.tpType ? "%" : ""))]), b("span", [g._v(g._s(g.tp > 0 && g.sl > 0 ? " & " : ""))]), b("span", {
                class: {
                    hide: 0 == g.sl
                }
            }, [g._v(g._s("$" === g.slType ? g.currencySign(g.activeAccount.currency) : "") + g._s(g.sl) + g._s("%" === g.slType ? "%" : ""))])])]), b("div", {
                staticClass: "grid-item pending grey-input"
            }, [b("div", {
                ref: "pending-holder",
                staticClass: "time",
                on: {
                    click: g.showPendingModal
                }
            }, [b("div", [g._v(g._s(g.tokens.orderMenu.pending))]), b("div", {
                staticClass: "expiration"
            }, [b("span", [g._v(g._s(g.pendingPrice ? g.tokens.orderMenu.at + " " + g.pendingPrice : g.tokens.orderMenu.market))])])])]), b("div", {
                staticClass: "grid-item buy-sell"
            }, [b("div", {
                staticClass: "button up",
                class: {
                    disabled: g.tradeDisabled,
                    close: !g.sessionsState[g.currentSym]
                },
                on: {
                    click: function(t) {
                        return g.openOrder(0)
                    }
                }
            }, [b("span", [g._v(g._s(g.sessionsState[g.currentSym] ? g.tokens.orderMenu.buy.toUpperCase() : "Closed"))]), b("span", {
                staticClass: "price"
            }, [b("span", [g._v(g._s(g.sessionsState[g.currentSym] && g.symbols[g.currentSym] && null !== (t = g.symbols[g.currentSym]) && void 0 !== t && t.quote && null !== (e = g.symbols[g.currentSym]) && void 0 !== e && e.quote.bid ? g.symbols[g.currentSym] && g.symbols[g.currentSym].quote && null !== (s = g.symbols[g.currentSym]) && void 0 !== s && s.quote.ask ? null === (a = g.symbols[g.currentSym]) || void 0 === a ? void 0 : a.quote.ask.toFixed(g.symbols[g.currentSym].precision).slice(0, -2) : 0 : ""))]), b("span", [g._v(g._s(g.sessionsState[g.currentSym] && g.symbols[g.currentSym] && null !== (i = g.symbols[g.currentSym]) && void 0 !== i && i.quote && null !== (o = g.symbols[g.currentSym]) && void 0 !== o && o.quote.bid ? g.symbols[g.currentSym] && null !== (n = g.symbols[g.currentSym]) && void 0 !== n && n.quote ? null === (r = g.symbols[g.currentSym]) || void 0 === r ? void 0 : r.quote.ask.toFixed(g.symbols[g.currentSym].precision).slice(-2) : 0 : ""))])])]), b("div", {
                staticClass: "button down",
                class: {
                    disabled: g.tradeDisabled,
                    close: !g.sessionsState[g.currentSym]
                },
                on: {
                    click: function(t) {
                        return g.openOrder(1)
                    }
                }
            }, [b("span", [g._v(g._s(g.sessionsState[g.currentSym] ? g.tokens.orderMenu.sell.toUpperCase() : "Closed"))]), b("span", {
                staticClass: "price"
            }, [b("span", [g._v(g._s(g.sessionsState[g.currentSym] && g.symbols[g.currentSym] && null !== (l = g.symbols[g.currentSym]) && void 0 !== l && l.quote && null !== (c = g.symbols[g.currentSym]) && void 0 !== c && c.quote.bid ? g.symbols[g.currentSym] && null !== (d = g.symbols[g.currentSym]) && void 0 !== d && d.quote && null !== (u = g.symbols[g.currentSym]) && void 0 !== u && u.quote.ask ? null === (m = g.symbols[g.currentSym]) || void 0 === m ? void 0 : m.quote.bid.toFixed(g.symbols[g.currentSym].precision).slice(0, -2) : 0 : ""))]), b("span", [g._v(g._s(g.sessionsState[g.currentSym] && g.symbols[g.currentSym] && null !== (p = g.symbols[g.currentSym]) && void 0 !== p && p.quote && null !== (h = g.symbols[g.currentSym]) && void 0 !== h && h.quote.bid ? g.symbols[g.currentSym] && null !== (v = g.symbols[g.currentSym]) && void 0 !== v && v.quote ? null === (f = g.symbols[g.currentSym]) || void 0 === f ? void 0 : f.quote.bid.toFixed(g.symbols[g.currentSym].precision).slice(-2) : 0 : ""))])])])]), g.isMobile() || g.ordersPane ? g._e() : b("div", {
                staticClass: "grid-item meter"
            }, [b("div", {
                staticClass: "background"
            }, [b("img", {
                attrs: {
                    src: g.staticBase + "misc/meter-scale.png"
                }
            })]), b("div", {
                staticClass: "sell"
            }, [b("div", {
                staticClass: "animal bear"
            }, [b("img", {
                attrs: {
                    src: g.staticBase + "misc/bear.svg"
                }
            })]), b("div", {
                staticClass: "word"
            }, [g._v("SELL")]), b("div", {
                staticClass: "percent"
            }, [g._v(g._s((100 - g.trend).toFixed(1) + "%"))])]), b("div", {
                staticClass: "buy"
            }, [b("div", {
                staticClass: "animal bull"
            }, [b("img", {
                attrs: {
                    src: g.staticBase + "misc/bull.svg"
                }
            })]), b("div", {
                staticClass: "word"
            }, [g._v("BUY")]), b("div", {
                staticClass: "percent"
            }, [g._v(g._s(g.trend.toFixed(1) + "%"))])]), b("img", {
                staticClass: "arrow",
                style: `transform: rotate(${g.angle}deg)`,
                attrs: {
                    src: g.staticBase + "misc/meter-arrow.png"
                }
            })])], 1)
        }
            , uS = []
            , mS = (s("d9e2"),
                function() {
                    var t = this
                        , e = t._self._c;
                    return e("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.visible && t.isMobile,
                            expression: "visible && isMobile"
                        }],
                        staticClass: "modal-wrapper",
                        on: {
                            click: t.closeCalc
                        }
                    }, [e("div", {
                        staticClass: "modal",
                        style: {
                            top: t.position.top + "px",
                            left: t.position.left + "px"
                        },
                        on: {
                            click: function(t) {
                                t.stopPropagation()
                            }
                        }
                    }, [e("div", {
                        staticClass: "calc"
                    }, [e("div", {
                        staticClass: "calc-text"
                    }, [t._v(t._s(t.calcValue))]), e("div", {
                        staticClass: "buttons-row"
                    }, [e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(7)
                            }
                        }
                    }, [t._v("7")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(8)
                            }
                        }
                    }, [t._v("8")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(9)
                            }
                        }
                    }, [t._v("9")])]), e("div", {
                        staticClass: "buttons-row"
                    }, [e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(4)
                            }
                        }
                    }, [t._v("4")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(5)
                            }
                        }
                    }, [t._v("5")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(6)
                            }
                        }
                    }, [t._v("6")])]), e("div", {
                        staticClass: "buttons-row"
                    }, [e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(1)
                            }
                        }
                    }, [t._v("1")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(2)
                            }
                        }
                    }, [t._v("2")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(3)
                            }
                        }
                    }, [t._v("3")])]), e("div", {
                        staticClass: "buttons-row"
                    }, [e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(".")
                            }
                        }
                    }, [t._v(".")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.updateCalcText(0)
                            }
                        }
                    }, [t._v("0")]), e("div", {
                        staticClass: "calc-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.backCalcText.apply(null, arguments)
                            }
                        }
                    }, [e("i", {
                        staticClass: "material-icons",
                        staticStyle: {
                            "font-size": "1.2em"
                        }
                    }, [t._v("backspace")])])]), e("button", {
                        staticClass: "apply-button",
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.apply.apply(null, arguments)
                            }
                        }
                    }, [t._v("Apply ")])])])])
                }
        )
            , pS = []
            , hS = {
            name: "Calculator",
            props: ["input", "visible"],
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    calcValue: null
                }
            },
            methods: {
                updateCalcText(t) {
                    if (0 !== t || "0" !== this.calcValue) {
                        if (-1 === [0, "."].indexOf(t) && "0" === this.calcValue)
                            this.calcValue = String(t);
                        else {
                            if ("." === t && this.calcValue.indexOf(".") > -1)
                                return;
                            if ("." === t && 0 === this.calcValue.length)
                                return;
                            this.calcValue += t
                        }
                        this.sendNumberOutside()
                    }
                },
                backCalcText() {
                    this.calcValue = 1 === this.calcValue.length ? "0" : this.calcValue.slice(0, this.calcValue.length - 1),
                        this.sendNumberOutside()
                },
                sendNumberOutside() {
                    this.$emit("number-changed", this.calcValue)
                },
                closeCalc() {
                    this.$emit("close"),
                        this.calcValue = null
                },
                apply() {
                    this.$emit("apply", this.calcValue),
                        this.closeCalc()
                }
            },
            computed: {
                position() {
                    if (!this.calcValue)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 320,
                        height: 256
                    };
                    return {
                        left: 0,
                        top: t.height - e.height - 200 - 30
                    }
                }
            },
            watch: {
                visible(t, e) {
                    null === this.calcValue && t && !e && (this.calcValue = String(this.input))
                }
            }
        }
            , vS = hS
            , fS = (s("b01a"),
            y(vS, mS, pS, !1, null, "7919a9b5", null))
            , gS = fS.exports
            , bS = {
            name: "OrderMenu",
            components: {
                Calculator: gS
            },
            props: ["chart", "gridId", "visible"],
            data() {
                var t, e;
                return {
                    staticBase: pt["Cb"],
                    showLeverage: pt["yb"],
                    time: Date.now(),
                    calcCoef: 1,
                    leverage: 100,
                    tp: "",
                    tpType: "=",
                    sl: "",
                    slType: "=",
                    pendingPrice: "",
                    volumesTypes: (null === (t = this.user) || void 0 === t ? void 0 : t.volume_units.split(",")) || pt["Nb"],
                    volumeType: (null === (e = this.user) || void 0 === e ? void 0 : e.volume_units.split(",")[0]) || "lots",
                    volumeInUnits: 1,
                    volumeInLots: 0,
                    volumeInCurrency: 0,
                    calculatorIsVisible: !1,
                    calculatorInput: "",
                    lotsTransparent: !1,
                    unitsTransparent: !1,
                    currencyTransparent: !1,
                    lotStepLength: 2,
                    lotStepStr: "",
                    lotStepChecks: [],
                    customTpSl: pt["E"]
                }
            },
            mounted() {
                this.$store.commit(n["G"], {
                    contractSize: this.contractSize
                })
            },
            methods: {
                showProfitCalculator() {
                    this.$store.commit(n["F"], {
                        profitCalculator: !0,
                        account: !1
                    })
                },
                decreaseVolumeInLots() {
                    this.volumeInLots = Number((this.volumeInLots - this.symbols[this.currentSym].lot_step < 0 ? this.volumeInLots : parseFloat(this.volumeInLots) - this.symbols[this.currentSym].lot_step).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((this.volumeInLots * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                increaseVolumeInLots() {
                    this.volumeInLots = Number((parseFloat(this.volumeInLots) + this.symbols[this.currentSym].lot_step).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((this.volumeInLots * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                decreaseVolumeInUnits() {
                    this.volumeInUnits = this.volumeInUnits <= 1 ? this.volumeInUnits : this.volumeInUnits - 1,
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                increaseVolumeInUnits() {
                    this.volumeInUnits = parseFloat(this.volumeInUnits) + 1,
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))
                },
                decreaseVolumeInCurrency() {
                    this.volumeInCurrency = this.volumeInCurrency <= 1 ? this.volumeInCurrency : this.volumeInCurrency - 1,
                        this.volumeInUnits = Number((this.volumeInCurrency * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))
                },
                increaseVolumeInCurrency() {
                    this.volumeInCurrency = parseFloat(this.volumeInCurrency) + 1,
                        this.volumeInUnits = Number((this.volumeInCurrency * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))
                },
                focusLots() {
                    this.lotsTransparent = !0,
                        this.calculatorIsVisible = !0,
                        this.calculatorInput = "lots"
                },
                blurLots() {
                    this.lotsTransparent = !1
                },
                updateLotsInput(t) {
                    let e = t.target.value;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInLots = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((e * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : this.volumeInLots = e.split(",")[0] + ".") : this.volumeInLots = ""
                },
                focusUnits() {
                    this.unitsTransparent = !0,
                        this.calculatorIsVisible = !0,
                        this.calculatorInput = "units"
                },
                blurUnits() {
                    this.unitsTransparent = !1
                },
                updateUnitsInput(t) {
                    let e = t.target.value;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInUnits = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((e / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((e * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : this.volumeInUnits = e.split(",")[0] + ".") : this.volumeInUnits = ""
                },
                focusCurrency() {
                    this.currencyTransparent = !0,
                        this.calculatorIsVisible = !0,
                        this.calculatorInput = "currency"
                },
                blurCurrency() {
                    this.currencyTransparent = !1
                },
                updateCurrencyInput(t) {
                    let e = t.target.value;
                    0 !== e.length && this.checkLotStepZeros ? "." !== e.slice(-1) && -1 === this.checkLotStepZeros.indexOf(e) && ("," !== e.slice(-1) ? (this.volumeInCurrency = Number(parseFloat(e).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((e * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))) : this.volumeInCurrency = e.split(",")[0] + ".") : this.volumeInCurrency = ""
                },
                applyCalcValue(t) {
                    this.lotStepLength && ("lots" === this.calculatorInput ? (this.volumeInLots = Number(parseFloat(t).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((t * this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((this.volumeInUnits * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : "units" === this.calculatorInput ? (this.volumeInUnits = Number(parseFloat(t).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((t / this.contractSize).toFixed(this.lotStepLength)),
                        this.volumeInCurrency = Number((t * this.symbols[this.currentSym].quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))) : (this.volumeInCurrency = Number(parseFloat(t).toFixed(this.lotStepLength)),
                        this.volumeInUnits = Number((t * this.computedConversions.acc / (this.computedConversions.base * this.symbols[this.currentSym].quote.bid)).toFixed(this.lotStepLength)),
                        this.volumeInLots = Number((this.volumeInUnits / this.contractSize).toFixed(this.lotStepLength))))
                },
                showAutoCloseModal() {
                    let t = this.$refs["autoclose-holder"].getBoundingClientRect()
                        , e = this.$refs["order-menu"].getBoundingClientRect();
                    this.$store.commit(n["I"], {
                        left: t.left,
                        top: t.top,
                        posY: e.y,
                        posX: e.width / 2,
                        symbolActive: this.symbols[this.currentSym],
                        orderActive: null,
                        tp: this.tp,
                        tpType: this.tpType,
                        sl: this.sl,
                        slType: this.slType
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !0
                        })
                },
                showPendingModal() {
                    let t = this.$refs["pending-holder"].getBoundingClientRect()
                        , e = this.$refs["order-menu"].getBoundingClientRect();
                    this.$store.commit(n["N"], {
                        left: t.left,
                        top: t.top,
                        posY: e.y,
                        posX: e.width / 2,
                        price: this.pendingPrice
                    }),
                        this.$store.commit(n["F"], {
                            pending: !0
                        })
                },
                validateInput(t) {
                    -1 === ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", ","].indexOf(t.key) && t.preventDefault(),
                    "." !== t.key && "," !== t.key || -1 === t.target.value.indexOf(".") && -1 === t.target.value.indexOf(",") || t.preventDefault()
                },
                currencySign: l["e"],
                isMobile: l["h"],
                openOrder(t) {
                    if (!this.symbols[this.currentSym])
                        return;
                    if (!this.sessionsState[this.currentSym] || !this.symbols[this.currentSym].enable)
                        return void this.$store.commit(n["V"], "MARKET_CLOSED");
                    if (!this.activeAccount.enable)
                        return void this.$store.commit(n["V"], "TRADING_DISABLED");
                    let e = this.pendingPrice || this.symbols[this.currentSym].quote[t ? "bid" : "ask"]
                        , s = 0
                        , a = 0;
                    if (this.tp)
                        switch (this.tpType) {
                            case "%":
                                a = Number(e) + (t ? -1 : 1) * e * this.tp / (100 * this.leverage);
                                break;
                            case "$":
                                a = Number(e) + (t ? -1 : 1) * e * this.tp / (this.leverage * this.volume);
                                break;
                            case "=":
                                a = this.tp;
                                break
                        }
                    if (this.sl)
                        switch (this.slType) {
                            case "%":
                                s = Number(e) + (t ? 1 : -1) * e * this.sl / (100 * this.leverage);
                                break;
                            case "$":
                                s = Number(e) + (t ? 1 : -1) * e * this.sl / (this.leverage * this.volume);
                                break;
                            case "=":
                                s = this.sl;
                                break
                        }
                    if (this.pendingPrice) {
                        let e = 0;
                        e = t ? this.pendingPrice < this.symbols[this.currentSym].quote.bid ? 5 : 3 : this.pendingPrice < this.symbols[this.currentSym].quote.ask ? 2 : 4,
                            t = e
                    }
                    if (this.customTpSl) {
                        if (0 == t) {
                            if (s && this.pendingPrice - s < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid SL");
                            if (a && a - this.pendingPrice < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid TP")
                        }
                        if (1 == t) {
                            if (s && s - this.pendingPrice < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid SL");
                            if (a && this.pendingPrice - a < 20 * Math.pow(10, this.symbols[this.currentSym].precision))
                                return void this.$store.commit(n["V"], "Invalid TP")
                        }
                    }
                    let i = {
                        type: t,
                        symbol: this.currentSym,
                        volume: this.orderVals.position,
                        account_id: this.activeAccount.id,
                        sl: s,
                        tp: a,
                        price_open: this.pendingPrice || void 0
                    };
                    this.$store.dispatch(r["j"], i).then( () => {
                            this.tp = "",
                                this.sl = ""
                        }
                    )
                },
                calcPrice(t, e, s, a, i="tp") {
                    let o = e.volume
                        , n = 1
                        , r = t.base_currency
                        , l = 1
                        , c = s.currency;
                    void 0 !== this.symbols["USD" + r] ? n = this.symbols["USD" + r].quote.bid : void 0 !== this.symbols[r + "USD"] && (n = 1 / this.symbols[r + "USD"].quote.bid),
                        void 0 !== this.symbols["USD" + c] ? l = this.symbols["USD" + c].quote.bid : void 0 !== this.symbols[c + "USD"] && (l = 1 / this.symbols[c + "USD"].quote.bid),
                        o *= l / n;
                    let d = a / o
                        , u = "tp" === i ? 1 : -1;
                    switch (e.type) {
                        case 0:
                            return parseFloat(this.symbols[e.symbol].quote.bid + u * d);
                        case 1:
                            return parseFloat(this.symbols[e.symbol].quote.ask + u * d);
                        case 2:
                        case 4:
                            return e.price_open + u * d;
                        case 3:
                        case 5:
                            return e.price_open - u * d;
                        default:
                            throw new Error("Invalid order type")
                    }
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "sessionsState", "activeAccount", "accounts", "modals", "tokens", "modalAutoClose", "modalPending", "tradeDisabled", "gridLayout", "ordersPane", "orders", "user", "autoCloseMode", "conversions", "notifications"]),
                checkLotStepZeros() {
                    if (0 == this.lotStepStr)
                        return;
                    let t = []
                        , e = "0.0"
                        , s = this.lotStepStr.slice(0, -1);
                    for (let a = 0; a < 10; a++) {
                        if (t.push(e),
                        "0" !== s && e === s)
                            break;
                        e += "0"
                    }
                    return t
                },
                computedLeverage() {
                    return this.symbols[this.currentSym] ? this.symbols[this.currentSym].leverage_default || this.activeAccount.leverage : 1
                },
                trend() {
                    return this.symbols && this.currentSym ? this.symbols[this.currentSym].quote.trend : 50
                },
                angle() {
                    return 1.8 * this.trend - 90
                },
                balances() {
                    let t = {
                        balance: 0,
                        orders: 0,
                        profit: 0,
                        credit: 0,
                        equity: 0,
                        margin: 0
                    };
                    if (!this.activeAccount.id)
                        return t;
                    t.balance = this.activeAccount.balance,
                        t.credit = this.activeAccount.credit;
                    let e = {};
                    for (let s in this.activeAccount.orders) {
                        let a = this.activeAccount.orders[s];
                        a.easy_amount = a.easy_amount || a.margin,
                            t.orders += a.easy_amount,
                        void 0 === e[a.symbol] && (e[a.symbol] = 0),
                            e[a.symbol] += a.type % 2 ? -a.margin : a.margin,
                        this.symbols[a.symbol] && (t.profit += a.type < 2 ? a.point * (a.type ? a.price_open - this.symbols[a.symbol].quote.ask : this.symbols[a.symbol].quote.bid - a.price_open) * Math.pow(10, this.symbols[a.symbol].precision) : 0)
                    }
                    for (let s in e)
                        t.margin += Math.abs(e[s]) * (1 / this.conversions[this.activeAccount.currency]);
                    return t.equity = t.balance + t.credit + t.profit,
                        t
                },
                curSymObj() {
                    return this.symbols[this.currentSym] || {
                        lot_step: 0
                    }
                },
                orderVals() {
                    let t = {
                        position: 0,
                        margin: 0,
                        freeMargin: 0,
                        leverage: 1
                    };
                    if (!this.symbols[this.currentSym] || !this.activeAccount.id || !this.volumeInLots)
                        return t;
                    t.position = parseFloat(this.volumeInLots) * this.contractSize,
                        t.leverage = this.symbols[this.currentSym].leverage_default || this.activeAccount.leverage;
                    let e = 0
                        , s = {};
                    for (let p in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[p];
                        void 0 === s[t.symbol] && (s[t.symbol] = 0),
                            s[t.symbol] += t.type % 2 ? -t.margin : t.margin,
                            this.symbols[t.symbol]
                    }
                    for (let p in s)
                        e += Math.abs(s[p]);
                    let a = 1
                        , i = this.symbols[this.currentSym].base_currency
                        , o = 1
                        , n = this.activeAccount.currency
                        , r = 1;
                    void 0 !== this.symbols["USD" + i] ? a = this.symbols["USD" + i].quote.bid : void 0 !== this.symbols[i + "USD"] && (a = 1 / this.symbols[i + "USD"].quote.bid),
                        void 0 !== this.symbols["USD" + n] ? o = this.symbols["USD" + n].quote.bid : void 0 !== this.symbols[n + "USD"] && (o = 1 / this.symbols[n + "USD"].quote.bid);
                    let l = o / a
                        , c = t.position / t.leverage;
                    t.margin = parseFloat((c * this.symbols[this.currentSym].quote.bid * l).toFixed(this.activeAccount.precision)) || 0,
                    "BTC" !== n && (r = this.conversions[n],
                        t.margin /= r),
                    "RUB" === n && (r = 1 / this.conversions[n],
                        t.margin = parseFloat((r * this.symbols[this.currentSym].quote.bid / t.leverage).toFixed(this.activeAccount.precision)) || 0);
                    let d = 0;
                    for (let p in this.orders) {
                        let t = this.orders[p];
                        t.type > 1 || !this.symbols[t.symbol] || (d += t.point * (0 === t.type ? this.symbols[t.symbol].quote.bid - t.price_open : t.price_open - this.symbols[t.symbol].quote.ask) * Math.pow(10, this.symbols[t.symbol].precision) + t.swap + t.commission)
                    }
                    let u = this.activeAccount.balance + this.activeAccount.credit + d
                        , m = u - e;
                    return t.freeMargin = m.toLocaleString(void 0, {
                        minimumFractionDigits: this.activeAccount.precision,
                        maximumFractionDigits: this.activeAccount.precision
                    }),
                        t
                },
                currentSym() {
                    return this.chart.symbol || ""
                },
                contractSize() {
                    return void 0 !== this.symbols[this.currentSym] && this.symbols[this.currentSym].lot || 1
                },
                spread() {
                    return this.currentSym && this.symbols[this.currentSym] ? Number(this.symbols[this.currentSym].quote.ask - this.symbols[this.currentSym].quote.bid).toFixed(this.symbols[this.currentSym].precision) : 0
                },
                computedConversions() {
                    let t = {
                        base: 1,
                        acc: 1
                    };
                    if (void 0 === this.symbols[this.currentSym])
                        return t;
                    let e = this.activeAccount.currency;
                    return "USD" !== e && (void 0 !== this.symbols[e + "USD"] ? t.acc = this.symbols[e + "USD"].quote.bid : void 0 !== this.symbols["USD" + e] ? t.acc = 1 / this.symbols["USD" + e].quote.bid : t.acc = this.conversions[e]),
                        t
                },
                calculatorInputValue() {
                    switch (this.calculatorInput) {
                        case "lots":
                            return this.volumeInLots;
                        case "currency":
                            return this.volumeInCurrency;
                        case "units":
                        default:
                            return this.volumeInUnits
                    }
                }
            },
            watch: {
                activeAccount(t) {
                    t && (this.leverage = t.leverage)
                },
                sl(t) {
                    this.sl = String(t).split(",").join(".")
                },
                tp(t) {
                    this.tp = String(t).split(",").join(".")
                },
                modalAutoClose: {
                    deep: !0,
                    handler(t) {
                        t.orderActive || (t.event && (this.tp = t.tp,
                            this.sl = t.sl,
                            this.$store.commit(n["I"], {
                                event: 0
                            })),
                            this.tpType = t.tpType,
                            this.slType = t.slType)
                    }
                },
                modalPending: {
                    deep: !0,
                    handler(t) {
                        t.event && (this.pendingPrice = t.price,
                            this.$store.commit(n["N"], {
                                event: 0
                            }))
                    }
                },
                curSymObj: {
                    deep: !0,
                    handler(t, e) {
                        t !== e && t.lot_step && (this.$set(this, "lotStepLength", t.lot_step.toString().length - 2 > 0 ? t.lot_step.toString().length - 2 : 2),
                            this.$set(this, "lotStepStr", t.lot_step.toString()),
                            this.$set(this, "lotStepChecks", this.checkLotStepZeros),
                            this.volumeInLots = t.lot_step || .01,
                            this.volumeInUnits = Number((this.volumeInLots * t.lot).toFixed(3)),
                        void 0 !== t.quote && (this.volumeInCurrency = Number((this.volumeInUnits * t.quote.bid * this.computedConversions.base / this.computedConversions.acc).toFixed(this.activeAccount.precision))))
                    }
                },
                user: {
                    deep: !0,
                    handler(t) {
                        "" === t.volume_units ? this.$set(this, "volumesTypes", pt["Nb"]) : this.$set(this, "volumesTypes", this.user.volume_units.split(",")),
                            this.$set(this, "volumeType", "lots")
                    }
                }
            }
        }
            , yS = bS
            , _S = (s("7d62"),
            y(yS, dS, uS, !1, null, "1fb68322", null))
            , CS = _S.exports
            , wS = {
            name: "Chart",
            components: {
                OrderMenu: CS
            },
            props: ["chart", "gridId"],
            mounted() {
                setInterval( () => {
                        if (this.tvWidget && this.chart.id && this.ready) {
                            for (let t in l["i"])
                                "tv-" === t.slice(0, 3) && t !== "tv-" + this.gridCharts[0] && t !== "tv-" + this.gridCharts[1] && t !== "tv-" + this.gridCharts[2] && t !== "tv-" + this.gridCharts[3] && l["i"].removeItem(t);
                            try {
                                this.tvWidget.save(t => {
                                        l["i"].setItem("tv-" + this.chart.id, JSON.stringify(t))
                                    }
                                )
                            } catch (t) {
                                this.$set(this, "ready", !1),
                                    console.log(t)
                            }
                        }
                    }
                    , 5e3),
                    document.addEventListener("visibilitychange", () => {
                            document.hidden ? this.inactiveStart = Date.now() : Date.now() - this.inactiveStart > 1e4 && this.tvWidget && this.chart.id && this.ready && this.tvWidget.chart().resetData()
                        }
                    )
            },
            data() {
                return {
                    tvWidget: null,
                    tvSession: "",
                    tvSessionStartByDate: [0, 0, 0, 0, 0, 0, 0, 0],
                    readyCallback: null,
                    lastCandle: {},
                    subs: {},
                    orderMenu: Object(l["h"])(),
                    showOrderActive: !1,
                    ready: !1,
                    inactiveStart: 0,
                    tradingviewTheme: pt["Lb"],
                    widgetLogoShow: pt["Qb"],
                    brand: pt["e"],
                    currentFrame: 1,
                    tradingviewDefaultTimeframe: pt["Jb"]
                }
            },
            methods: {
                showSymbolsModal() {
                    this.$store.commit(n["F"], {
                        symbols: !0
                    }),
                        this.$store.commit(n["P"], {
                            action: "update",
                            id: null,
                            gridId: this.gridId
                        })
                },
                drawChart() {
                    var t;
                    if (!this.currentSym)
                        return;
                    let e = l["i"].getItem("tv-" + this.chart.id)
                        , s = l["i"].getItem("tv-" + this.chart.id + "-interval") || this.tradingviewDefaultTimeframe || "1";
                    try {
                        e = JSON.parse(e)
                    } catch (i) {
                        console.log("No chart data")
                    }
                    this.ready = !1,
                        this.tvWidget = new Ye["widget"]({
                            symbol: this.currentSym,
                            interval: s,
                            fullscreen: !1,
                            autosize: !0,
                            container: "chart-" + this.gridId,
                            saved_data: e || void 0,
                            datafeed: {
                                onReady: t => {
                                    setTimeout( () => {
                                            t({
                                                exchanges: [pt["A"]],
                                                symbols_types: ["Crypto"],
                                                supported_resolutions: pt["g"]
                                            })
                                        }
                                        , 1)
                                }
                                ,
                                searchSymbols: (t, e, s, a) => {
                                    let i = [];
                                    for (let o in this.symbols)
                                        t && this.symbols[o].visible && (this.symbols[o].symbol.toLowerCase().includes(t.toLowerCase()) || this.symbols[o].alias.toLowerCase().includes(t.toLowerCase())) && i.push({
                                            symbol: this.symbols[o].symbol,
                                            full_name: this.symbols[o].alias,
                                            description: this.symbols[o].alias,
                                            type: this.symbols[o].market,
                                            exchange: pt["A"],
                                            ticker: this.symbols[o].symbol
                                        });
                                    a(i)
                                }
                                ,
                                resolveSymbol: (t, e, s) => {
                                    let a = this.symbols[t];
                                    if (this.ready = !1,
                                    void 0 === a)
                                        return void setTimeout( () => {
                                                s()
                                            }
                                            , 1);
                                    this.chart.symbol !== a.symbol && setTimeout( () => {
                                            this.$store.commit(n["Eb"], {
                                                id: this.chart.id,
                                                symbol: a.symbol
                                            })
                                        }
                                        , 1),
                                        this.tvSessionStartByDate = [0, 0, 0, 0, 0, 0, 0, 0];
                                    const i = t => {
                                            let e = [];
                                            for (let s = 0; s < 7; s++)
                                                e = e.concat(t[s]);
                                            return e
                                        }
                                        , o = t => {
                                            let e = [];
                                            for (let s = 0; s < 7; s++)
                                                e.push(t.slice(24 * s, 24 * (s + 1)));
                                            return e
                                        }
                                    ;
                                    let r = this.symbols[t].sessions;
                                    r = i(r),
                                        r = o(r);
                                    const l = (t, e) => {
                                            let s = {
                                                start: String(t).split("."),
                                                stop: String(e + 1).split(".")
                                            };
                                            return ("0" + s.start[0]).slice(-2) + ("0" + (void 0 !== s.start[1] ? Math.round(60 * s.start[1] / Math.pow(10, String(s.start[1]).length)) : 0)).slice(-2) + "-" + ("0" + s.stop[0]).slice(-2) + ("0" + (void 0 !== s.stop[1] ? Math.round(60 * s.stop[1] / Math.pow(10, String(s.stop[1]).length)) : 0)).slice(-2)
                                        }
                                    ;
                                    let c = [];
                                    for (let n = 0; n < 7; n++) {
                                        let t = []
                                            , e = r[n]
                                            , s = 0
                                            , a = 0
                                            , i = !1;
                                        for (let o = 0; o < 24; o++) {
                                            let r = e[o];
                                            0 !== r || i ? 0 === r && i ? (t.push(l(s, a)),
                                                i = !1,
                                                s += 2,
                                                a += 2) : 1 !== r || i ? 1 === r && i ? a++ : i ? i && (a += r,
                                                t.push(l(s, a)),
                                                i = !1) : (i = !0,
                                                s += r,
                                                this.tvSessionStartByDate[n] = Math.round(3600 * s)) : (i = !0,
                                                this.tvSessionStartByDate[n] = Math.round(3600 * s)) : (s++,
                                                a++)
                                        }
                                        i && t.push(l(s, a)),
                                        t.length && c.push(t.join(",") + ":" + (n + 1))
                                    }
                                    this.tvSession = c.join("|");
                                    let d = {
                                        name: a.alias,
                                        ticker: a.symbol,
                                        description: a.alias,
                                        type: a.market,
                                        session: c.join("|"),
                                        exchange: pt["A"],
                                        timezone: "Etc/UTC",
                                        minmov: 1,
                                        pricescale: Math.pow(10, a.precision),
                                        has_intraday: !0,
                                        has_seconds: !1,
                                        has_daily: !0,
                                        has_weekly_and_monthly: !1,
                                        has_empty_bars: !1,
                                        force_session_rebuild: !1,
                                        has_no_volume: !0,
                                        volume_precision: 2,
                                        data_status: "streaming",
                                        expired: !1,
                                        currency_code: a.base_currency
                                    };
                                    setTimeout( () => {
                                            e(d)
                                        }
                                        , 1)
                                }
                                ,
                                getBars: (t, e, s, a) => {
                                    "D" !== e && "1D" !== e || (e = "1440");
                                    let i = 0;
                                    s.firstDataRequest || (i = Math.round((Math.floor(Date.now() / 1e3) - s.to) / (60 * e)));
                                    let o = Math.round((Math.floor(Date.now() / 1e3) - s.from) / (60 * e)) - i;
                                    (s => {
                                            qs["a"].get("/quotes/" + s + "/history", {
                                                frame: 60 * parseInt(e),
                                                count: o,
                                                offset: i,
                                                group: this.symbols[t.ticker].group
                                            }).then(t => {
                                                    if (s !== this.currentSym)
                                                        return;
                                                    let i = [];
                                                    if (!t || !t.length)
                                                        return a(i, {
                                                            noData: !0
                                                        });
                                                    let o = 0
                                                        , n = 0;
                                                    t.forEach(t => {
                                                            let s, a = new Date(1e3 * t[5]), r = this.tvSessionStartByDate[a.getUTCDay()], l = 86400 * Math.floor(t[5] / 86400) + r;
                                                            r ? e < 1440 ? l > t[5] && l < t[5] + 60 * e ? (s = 1e3 * l,
                                                            o !== 86400 * Math.floor(t[5] / 86400) && (o = 86400 * Math.floor(t[5] / 86400),
                                                                n = l - t[5])) : s = 1e3 * (t[5] + n) : s = 1e3 * (86400 * Math.round(t[5] / 86400) + r) : s = 1e3 * t[5],
                                                                i.push({
                                                                    open: t[0],
                                                                    high: t[1],
                                                                    low: t[2],
                                                                    close: t[3],
                                                                    volume: t[4],
                                                                    time: s
                                                                })
                                                        }
                                                    ),
                                                        this.lastCandle = i[i.length - 1],
                                                        a(i),
                                                        this.showOrderActive = !0,
                                                        this.ready = !0,
                                                        l["i"].setItem("tv-" + this.chart.id + "-interval", e)
                                                }
                                            )
                                        }
                                    )(t.ticker)
                                }
                                ,
                                subscribeBars: (t, e, s, a) => {
                                    "D" !== e && "1D" !== e || (e = "1440"),
                                    void 0 === this.subs[t.ticker] && (this.subs[t.ticker] = {}),
                                        this.subs[t.ticker][a] = {
                                            symbol: t.ticker,
                                            frame: 60 * e,
                                            cb: s,
                                            last: null
                                        },
                                        this.currentFrame = e
                                }
                                ,
                                unsubscribeBars: t => {
                                    for (let e in this.subs)
                                        for (let s in this.subs[e])
                                            if (t === s)
                                                return void delete this.subs[e][s]
                                }
                            },
                            library_path: pt["f"] ? "https://p-cdn.co/" + pt["e"] + "/tradingview/" : "/tradingview/",
                            overrides: {
                                "paneProperties.background": this.lightTheme ? "#fff" : this.themeColors["background-dark"],
                                "paneProperties.backgroundType": "solid",
                                "paneProperties.vertGridProperties.color": this.lightTheme ? "#9eb2da" : "#303642",
                                "paneProperties.horzGridProperties.color": this.lightTheme ? "#9eb2da" : "#303642",
                                "scalesProperties.backgroundColor": this.themeColors["background-dark"],
                                "scalesProperties.lineColor": this.themeColors["line"],
                                "scalesProperties.textColor": this.themeColors["font"],
                                editorFontsList: ["-apple-system", "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica Neue", "Arial", "Noto Sans", "sans-serif", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"]
                            },
                            theme: this.lightTheme ? "Light" : this.tradingviewTheme,
                            toolbar_bg: this.themeColors["background-dark"],
                            loading_screen: {
                                backgroundColor: this.themeColors["background-dark"]
                            },
                            custom_css_url: pt["f"] ? "https://p-cdn.co/" + pt["e"] + "/brands/" + pt["e"] + "/tradingview.css" : "/brands/" + pt["e"] + "/tradingview.css",
                            disabled_features: Object(l["h"])() ? [this.widgetLogoShow ? "" : "widget_logo", "control_bar", "timeframes_toolbar", "legend_widget", "header_compare", "header_fullscreen_button"] : ["header_compare", this.widgetLogoShow ? "" : "widget_logo"],
                            time_frames: [{
                                text: "5y",
                                resolution: "1W",
                                description: "5 Years"
                            }, {
                                text: "1y",
                                resolution: "1W",
                                description: "1 Year"
                            }, {
                                text: "3m",
                                resolution: "60",
                                description: "3 Months"
                            }, {
                                text: "1m",
                                resolution: "30",
                                description: "1 Month"
                            }, {
                                text: "5d",
                                resolution: "5",
                                description: "5 Days"
                            }, {
                                text: "1d",
                                resolution: "1",
                                description: "1 Day"
                            }]
                        });
                    const a = JSON.parse(l["i"].getItem("tradingview.chartproperties"));
                    null !== a && void 0 !== a && null !== (t = a.paneProperties) && void 0 !== t && t.background && (a.paneProperties.background = this.lightTheme ? "#fff" : "#000",
                        l["i"].setItem("tradingview.chartproperties", a))
                },
                checkSession: l["a"],
                toggleOrderMenu() {
                    this.orderMenu = !this.orderMenu
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "activeAccount", "themeColors", "tokens", "gridLayout", "gridCharts", "staticBase", "lightTheme"]),
                currentSym() {
                    return this.chart.symbol || ""
                },
                quote() {
                    return this.chart.symbol && this.symbols[this.chart.symbol] ? this.symbols[this.chart.symbol].quote : {
                        symbol: "",
                        bid: null,
                        ask: null
                    }
                },
                orders() {
                    return this.activeAccount.orders
                }
            },
            watch: {
                themeColors() {
                    for (let t in l["i"])
                        if (t.startsWith("tv-") && !t.endsWith("-interval")) {
                            let e = JSON.parse(l["i"].getItem(t));
                            e.charts[0].chartProperties.paneProperties.background = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.backgroundGradientEndColor = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.backgroundGradientStartColor = this.lightTheme ? "#ffffff" : this.themeColors["background-dark"],
                                e.charts[0].chartProperties.paneProperties.horzGridProperties.color = this.lightTheme ? "#9eb2da" : "#303642",
                                e.charts[0].chartProperties.paneProperties.vertGridProperties.color = this.lightTheme ? "#9eb2da" : "#303642",
                                e.charts[0].chartProperties.scalesProperties.lineColor = this.lightTheme ? "#fff" : this.themeColors["background-dark"];
                            let s = JSON.stringify(e);
                            l["i"].setItem(t, s)
                        }
                    this.drawChart()
                },
                quote: {
                    deep: !0,
                    handler(t) {
                        if (t && this.ready && void 0 !== this.subs[t.symbol])
                            for (let e in this.subs[t.symbol]) {
                                let s = 1e3 * this.subs[t.symbol][e].frame * Math.floor(Date.now() / (1e3 * this.subs[t.symbol][e].frame));
                                if (Number(e.split("_").pop()) !== Number(this.currentFrame))
                                    continue;
                                let a = new Date
                                    , i = Math.floor(Date.now() / 1e3)
                                    , o = this.subs[t.symbol][e].frame
                                    , n = this.tvSessionStartByDate[a.getUTCDay()]
                                    , r = 86400 * Math.floor(i / 86400) + n;
                                n && r < i && i < r + o && (s = 1e3 * r),
                                    null === this.subs[t.symbol][e].last ? (this.subs[t.symbol][e].last = this.lastCandle,
                                        this.subs[t.symbol][e].last = {
                                            time: s,
                                            open: this.lastCandle.open,
                                            high: Math.max(t.bid, this.lastCandle.high),
                                            low: Math.min(t.bid, this.lastCandle.low),
                                            close: t.bid
                                        },
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last)) : this.subs[t.symbol][e].last.time !== s ? (this.subs[t.symbol][e].last = {
                                        time: s,
                                        open: t.bid,
                                        high: t.bid,
                                        low: t.bid,
                                        close: t.bid
                                    },
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last)) : (this.subs[t.symbol][e].last.high = Math.max(this.subs[t.symbol][e].last.high, t.bid),
                                        this.subs[t.symbol][e].last.low = Math.min(this.subs[t.symbol][e].last.low, t.bid),
                                        this.subs[t.symbol][e].last.close = t.bid,
                                        this.subs[t.symbol][e].cb(this.subs[t.symbol][e].last))
                            }
                    }
                },
                currentSym(t, e) {
                    e !== t && this.drawChart()
                },
                gridLayout() {
                    this.orderMenu = !this.orderMenu,
                        setTimeout( () => {
                                this.orderMenu = !this.orderMenu
                            }
                            , 2)
                }
            }
        }
            , kS = wS
            , SS = (s("a951"),
            s("36b9"),
            y(kS, lS, cS, !1, null, "496a91be", null))
            , xS = SS.exports
            , MS = {
            name: "Grid",
            components: {
                Chart: xS
            },
            computed: {
                ...Object(o["b"])(["blur", "gridCharts", "charts", "gridLayout"]),
                visibleCharts() {
                    let t = [];
                    for (let e in this.gridCharts) {
                        let s = this.gridCharts[e];
                        void 0 !== s && void 0 !== this.charts[s] ? t.push(this.charts[s]) : t.push(!1)
                    }
                    return t
                }
            }
        }
            , AS = MS
            , DS = (s("598d"),
            y(AS, nS, rS, !1, null, "f5a179a2", null))
            , PS = DS.exports
            , TS = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "orders-pane",
                class: {
                    hide: !t.ordersPane
                }
            }, [e("div", {
                staticClass: "tabs"
            }, [e("div", {
                staticClass: "tab-item",
                class: {
                    active: "active" === t.tabActive
                },
                on: {
                    click: function(e) {
                        return t.activateTab("active")
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.ordersPane.ordersActive.toUpperCase()))])]), e("div", {
                staticClass: "tab-item",
                class: {
                    active: "history" === t.tabActive
                },
                on: {
                    click: function(e) {
                        return t.activateTab("history")
                    }
                }
            }, [e("span", [t._v(t._s(t.tokens.ordersPane.ordersHistory.toUpperCase()))])])]), e("div", {
                staticClass: "tables-container",
                attrs: {
                    id: "tables-container"
                }
            }, [e("OrdersTable", {
                class: {
                    hide: "active" !== t.tabActive
                }
            }), e("HistoryTable", {
                class: {
                    hide: "history" !== t.tabActive
                },
                attrs: {
                    active: "history" === t.tabActive
                }
            })], 1), e("i", {
                staticClass: "material-icons expander pointer",
                on: {
                    click: function(e) {
                        return t.closeOrdersPane()
                    }
                }
            }, [t._v("expand_more")])])
        }
            , LS = []
            , IS = function() {
            var t = this
                , e = t._self._c;
            return e("table", {
                staticClass: "orders-table"
            }, [e("thead", [e("tr", [e("th", [t._v(" " + t._s(t.tokens.ordersPane.symbol) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("id")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.id) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("type")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.type) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("volume")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.volume) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openPrice) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("expiration")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.timedOrder) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openTime) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("sl")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.sl) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("tp")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.tp) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.price) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("commission")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.commission) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("swap")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.swap) + " ")]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.pnl) + " ")]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.actions) + " ")])])]), e("tbody", t._l(t.orders, (function(s, a) {
                    var i;
                    return e("tr", {
                        key: a,
                        on: {
                            click: function(e) {
                                return t.setActiveSymbol(s.symbol)
                            }
                        }
                    }, [e("td", [e("span", {
                        staticClass: "symbol",
                        class: "symbol-" + (null === (i = s.symbol) || void 0 === i ? void 0 : i.toUpperCase())
                    }), t._v(" " + t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.id) + " ")]), e("td", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.orderTypeString(s.type)) + " ")]), e("td", [t._v(" " + t._s(s.volume.toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : 0) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.expiration ? new Date(1e3 * s.expiration).toLocaleString() : "-") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_open).toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.sl && t.symbols[s.symbol] ? s.sl.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "-") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.tp && t.symbols[s.symbol] ? s.tp.toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "-") + " ")]), e("td", {
                        class: t.symbols[s.symbol] ? -1 === [0, 3, 5].indexOf(s.type) ? t.symbols[s.symbol].quote.dirAsk : t.symbols[s.symbol].quote.dirBid : ""
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? (t.symbols[s.symbol].quote[-1 === [0, 3, 5].indexOf(s.type) ? "ask" : "bid"] || 0).toLocaleString(void 0, {
                        minimumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3,
                        maximumFractionDigits: t.symbols[s.symbol] ? t.symbols[s.symbol].precision : 3
                    }) : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.commission.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.swap.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        class: t.getOrderStyle(s)
                    }, [t._v(" " + t._s(t.getOrderPnl(s)) + " ")]), e("td", [e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showTimePickerModal(e, s.id, a, s)
                            }
                        }
                    }, [t._v(t._s(t.tokens.ordersPane.closeInTime))]), e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showAutoCloseModal(e, s.id, a)
                            }
                        }
                    }, [t._v(t._s(t.tokens.ordersPane.edit))]), e("span", {
                        on: {
                            click: function(e) {
                                return e.stopPropagation(),
                                    t.showCloseOrderConfirmation(s.id, a)
                            }
                        }
                    }, [t._v(t._s(t.tokens.ordersPane.close))])])])
                }
            )), 0)])
        }
            , FS = []
            , OS = {
            name: "OrdersTable",
            data() {
                return {
                    disableOrderSort: pt["H"]
                }
            },
            computed: {
                ...Object(o["b"])(["tokens", "orders", "symbols", "activeAccount", "user", "chartActive", "staticBase"])
            },
            methods: {
                orderTypeString: l["j"],
                timeToString: l["o"],
                currencySign: l["e"],
                sortBy(t) {
                    this.disableOrderSort || this.$store.commit(n["yb"], {
                        sort: t,
                        account: this.activeAccount.id
                    })
                },
                getOrderStyle(t) {
                    const e = this.symbols[t.symbol];
                    if (!e)
                        return "";
                    const s = t.type ? t.price_open - e.quote.ask : e.quote.bid - t.price_open
                        , a = t.point * s * Math.pow(10, e.precision) + t.swap + t.commission;
                    return a >= 0 ? "green" : "red"
                },
                getOrderPnl(t) {
                    const e = this.symbols[t.symbol];
                    if (t.type >= 2)
                        return "0";
                    if (!e)
                        return "-";
                    const s = t.type ? t.price_open - e.quote.ask : e.quote.bid - t.price_open
                        , a = t.point * s * Math.pow(10, e.precision) + t.swap + t.commission
                        , i = a.toLocaleString(void 0, {
                        minimumFractionDigits: this.activeAccount.precision,
                        maximumFractionDigits: this.activeAccount.precision
                    });
                    return `${Object(l["e"])(this.activeAccount.currency)}${i}`
                },
                setActiveSymbol(t) {
                    this.$store.commit(n["Eb"], {
                        symbol: t,
                        id: this.chartActive
                    })
                },
                showCloseOrderConfirmation(t, e) {
                    this.activeAccount.enable ? (this.$store.commit(n["J"], {
                        activeOrderId: t,
                        index: e
                    }),
                        this.$store.commit(n["F"], {
                            closePosition: !0
                        })) : this.$store.commit(n["V"], "TRADING_DISABLED")
                },
                showTimePickerModal(t, e, s, a) {
                    let i = t.target.getBoundingClientRect();
                    this.$store.commit(n["Q"], {
                        left: i.left + 100,
                        top: i.top - 50,
                        symbolActive: null,
                        orderActive: e,
                        item: parseInt(s),
                        expiration: a.expiration
                    }),
                        this.$store.commit(n["F"], {
                            timePicker: !0
                        })
                },
                showAutoCloseModal(t, e, s) {
                    let a = t.target.getBoundingClientRect();
                    this.$store.commit(n["I"], {
                        left: a.left,
                        top: a.top - 150,
                        symbolActive: null,
                        orderActive: e,
                        tp: this.activeAccount.orders[s].tp || "",
                        tpType: "=",
                        sl: this.activeAccount.orders[s].sl || "",
                        slType: "=",
                        item: parseInt(s)
                    }),
                        this.$store.commit(n["F"], {
                            autoClose: !0
                        })
                }
            }
        }
            , BS = OS
            , NS = (s("c678"),
            y(BS, IS, FS, !1, null, "7443a8ce", null))
            , $S = NS.exports
            , VS = function() {
            var t = this
                , e = t._self._c;
            return e("table", [e("thead", [e("tr", [e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("symbol")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.symbol) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("id")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.id) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("type")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.type) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("volume")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.volume) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("price_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openPrice) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_open")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.openTime) + " ")]), e("th", {
                on: {
                    click: function(e) {
                        return t.sortBy("price_close")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.closePrice) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("time_close")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.closeTime) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("commission")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.commission) + " ")]), e("th", {
                staticClass: "no-mobile",
                on: {
                    click: function(e) {
                        return t.sortBy("swap")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.ordersPane.swap) + " ")]), e("th", [t._v(" " + t._s(t.tokens.ordersPane.pnl) + " ")])])]), e("tbody", {
                ref: "tables-container"
            }, t._l(t.history, (function(s, a) {
                    return e("tr", {
                        key: a
                    }, [e("td", [e("span", {
                        staticClass: "symbol",
                        class: s.symbol ? "symbol-" + s.symbol.toUpperCase() : ""
                    }), t._v(" " + t._s(t.symbols[s.symbol] ? t.symbols[s.symbol].alias : "") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(s.id) + " ")]), e("td", {
                        class: s.type % 2 ? "red" : "green"
                    }, [t._v(" " + t._s(t.orderTypeString(s.type)) + " ")]), e("td", [t._v(" " + t._s(s.volume.toLocaleString()) + " ")]), ["stage", "interlendholdings", "mftreasuries"].includes(t.brand) ? e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 5
                    }) : 0) + " ")]) : e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.symbols[s.symbol] ? s.price_open.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : 0) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_open).toLocaleString()) + " ")]), ["stage", "interlendholdings", "mftreasuries"].includes(t.brand) ? e("td", [t._v(" " + t._s(t.symbols[s.symbol] && s.price_close ? s.price_close.toLocaleString(void 0, {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 5
                    }) : "0") + " ")]) : e("td", [t._v(" " + t._s(t.symbols[s.symbol] && s.price_close ? s.price_close.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    }) : "0") + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(new Date(1e3 * s.time_close).toLocaleString()) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.commission.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        staticClass: "no-mobile"
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.swap.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")]), e("td", {
                        class: s.profit > 0 ? "green" : s.profit < 0 ? "red" : ""
                    }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency) + s.profit.toLocaleString(void 0, {
                        minimumFractionDigits: t.activeAccount.precision,
                        maximumFractionDigits: t.activeAccount.precision
                    })) + " ")])])
                }
            )), 0)])
        }
            , ES = []
            , US = {
            name: "HistoryTable",
            props: ["active"],
            mounted() {
                setInterval( () => {
                        if (!this.active)
                            return void (this.historyPage = 1);
                        const t = document.getElementById("tables-container")
                            , e = t.scrollTop + t.clientHeight === t.scrollHeight
                            , s = this.activeAccount.history.length > 20 * this.historyPage;
                        e && s && this.historyPage++
                    }
                    , 1e3)
            },
            data() {
                return {
                    historyPage: 1,
                    disableOrderSort: pt["H"],
                    brand: pt["e"]
                }
            },
            methods: {
                orderTypeString: l["j"],
                timeToString: l["o"],
                currencySign: l["e"],
                sortBy(t) {
                    this.disableOrderSort || this.$store.commit(n["xb"], {
                        sort: t,
                        account: this.activeAccount.id
                    })
                }
            },
            computed: {
                ...Object(o["b"])(["symbols", "tokens", "activeAccount", "staticBase"]),
                history() {
                    const t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        , e = [];
                    if (!this.activeAccount.history)
                        return e;
                    const s = 0
                        , a = 20 * this.historyPage
                        , i = this.activeAccount.history.slice(s, a);
                    return i.forEach(s => {
                            const a = new Date(1e3 * s.time_close);
                            s.timeStr = ("0" + a.getHours()).slice(-2) + ":" + ("0" + a.getMinutes()).slice(-2),
                                s.dayStr = t[a.getMonth()] + " " + ("0" + a.getDate()).slice(-2),
                                s.month = t[a.getMonth()],
                                s.day = ("0" + a.getDate()).slice(-2),
                                s.amount = s.easy_amount || s.margin,
                                e.push(s)
                        }
                    ),
                        e
                }
            },
            watch: {
                activeAccount() {
                    this.historyPage = 1,
                        document.getElementById("tables-container").scrollTo(0, 0)
                }
            }
        }
            , HS = US
            , jS = (s("3f4f"),
            y(HS, VS, ES, !1, null, "0a0bce9d", null))
            , qS = jS.exports
            , RS = {
            name: "OrdersPane",
            data() {
                return {
                    tabActive: "active"
                }
            },
            components: {
                HistoryTable: qS,
                OrdersTable: $S
            },
            methods: {
                closeOrdersPane() {
                    this.$store.commit(n["bb"], !1)
                },
                activateTab(t) {
                    this.tabActive = t,
                        "history" === t ? this.$store.commit(n["A"], !0) : this.$store.commit(n["A"], !1)
                }
            },
            computed: {
                ...Object(o["b"])(["ordersPane", "tokens"])
            }
        }
            , WS = RS
            , zS = (s("6d76"),
            y(WS, TS, LS, !1, null, "2968666e", null))
            , GS = zS.exports
            , YS = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "status-bar"
            }, [e("div", {
                staticClass: "row"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.balance) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance > 0 ? t.activeAccount.balance : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.credit) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.credit > 0 ? t.activeAccount.credit : 0).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "more-info"
            }, [e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.equity) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance + t.activeAccount.credit + t.pnl).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.margin) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.margin.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile() && !t.statusBarItemsShowMobile
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.marginLevel) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(t.activeAccount.balance + t.activeAccount.credit + t.pnl !== 0 && t.margin ? (100 * (t.activeAccount.balance + t.activeAccount.credit + t.pnl) / t.margin).toFixed(2) + "%" : "-"))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile()
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.freeMargin) + ":")]), e("span", {
                staticClass: "content"
            }, [t._v(t._s(0 !== t.margin ? t.currencySign(t.activeAccount.currency) + (t.activeAccount.balance + t.activeAccount.credit + t.pnl - t.margin).toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            }) : "-"))])]), e("div", {
                staticClass: "row",
                class: {
                    hide: 0 === t.margin || t.isMobile()
                }
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.pnl) + ":")]), e("span", {
                staticClass: "content",
                class: t.pnl < 0 ? "red" : t.pnl > 0 ? "green" : ""
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.pnl.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])])]), e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.ordersPane && t.historyTableIsActive,
                    expression: "ordersPane && historyTableIsActive"
                }],
                staticClass: "right"
            }, [e("span", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.statusBar.profitTotal) + ":")]), e("span", {
                staticClass: "content",
                class: t.profitTotal < 0 ? "red" : t.profitTotal > 0 ? "green" : ""
            }, [t._v(t._s(t.currencySign(t.activeAccount.currency) + t.profitTotal.toLocaleString(void 0, {
                minimumFractionDigits: t.activeAccount.precision,
                maximumFractionDigits: t.activeAccount.precision
            })))])]), e("i", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: !t.ordersPane,
                    expression: "!ordersPane"
                }],
                staticClass: "material-icons expander pointer",
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.openOrdersPane()
                    }
                }
            }, [t._v("expand_less")])])
        }
            , ZS = []
            , JS = {
            name: "StatusBar",
            data() {
                return {
                    profitTotal: 0,
                    statusBarItemsShowMobile: pt["Db"]
                }
            },
            methods: {
                currencySign: l["e"],
                isMobile: l["h"],
                openOrdersPane() {
                    this.$store.commit(n["bb"], !0)
                }
            },
            computed: {
                ...Object(o["b"])(["orders", "symbols", "activeAccount", "tokens", "ordersPane", "historyTableIsActive", "conversions"]),
                pnl() {
                    let t = 0;
                    for (let e in this.orders) {
                        let s = this.orders[e];
                        s.type > 1 || !this.symbols[s.symbol] || (t += s.point * (0 === s.type ? this.symbols[s.symbol].quote.bid - s.price_open : s.price_open - this.symbols[s.symbol].quote.ask) * Math.pow(10, this.symbols[s.symbol].precision) + s.swap + s.commission)
                    }
                    return t
                },
                margin() {
                    let t = 0
                        , e = {};
                    for (let s in this.activeAccount.orders) {
                        let t = this.activeAccount.orders[s];
                        void 0 === e[t.symbol] && (e[t.symbol] = 0),
                            e[t.symbol] += t.type % 2 ? -t.margin : t.margin,
                            this.symbols[t.symbol]
                    }
                    for (let s in e)
                        t += Math.abs(e[s]) * (1 / this.conversions[this.activeAccount.currency]);
                    return t
                }
            },
            watch: {
                activeAccount: {
                    deep: !0,
                    handler(t) {
                        t.profitTotal ? this.profitTotal = t.profitTotal : this.profitTotal = 0
                    }
                }
            }
        }
            , KS = JS
            , XS = (s("ab3b"),
            y(KS, YS, ZS, !1, null, "20d48c1d", null))
            , QS = XS.exports
            , tx = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.modals.fullscreen,
                    expression: "modals.fullscreen"
                }],
                staticClass: "fullscreen",
                class: {
                    mobile: t.isMobile,
                    "aspin-design": t.aspinDesign
                }
            }, [e("header", {
                staticClass: "fs",
                class: {
                    mobile: t.isMobile
                }
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.isMobile,
                    expression: "isMobile"
                }],
                staticClass: "empty"
            }), t.isMobile ? t._e() : e("a", {
                class: {
                    mobile: t.isMobile
                },
                style: {
                    cursor: t.logoRedirectOff ? "default" : "",
                    "pointer-events": t.hideLogo ? "none" : "auto"
                },
                attrs: {
                    target: t.logoRedirectOff ? "" : "_blank"
                }
            }, [e("img", {
                class: {
                    hide: !t.logo.url
                },
                style: {
                    height: t.logo.height,
                    opacity: t.hideLogo ? 0 : 1
                },
                attrs: {
                    src: t.logoComputed
                },
                on: {
                    error: t.errorHandler
                }
            }), e("span", {
                class: {
                    hide: t.logo.url
                }
            }, [e("span", {
                staticClass: "brand"
            }, [t._v(t._s(t.tokens.header.cfd))]), t._v(" " + t._s(t.tokens.header.platform))])]), e("div", {
                staticClass: "right"
            }, [!t.isMobile && t.aspinDesign ? e("div", {
                staticClass: "plate"
            }, [e("img", {
                attrs: {
                    src: t.plate
                }
            })]) : t._e(), e("div", {
                staticClass: "head",
                class: {
                    mobile: t.isMobile
                }
            }, [e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.close
                }
            }, [t._v(t._s(t.tokens.fullScreen.startTrading))])]), t.aspinDesign ? e("div", {
                staticClass: "lang"
            }, [e("div", {
                staticClass: "flag fs small-flag",
                class: "flag-" + t.langActive,
                on: {
                    click: function(e) {
                        t.showLang = !t.showLang
                    }
                }
            }), e("div", {
                staticClass: "lang-box",
                class: {
                    active: t.showLang
                }
            }, t._l(t.languages, (function(s) {
                    return e("div", {
                        key: s,
                        staticClass: "lang-item",
                        on: {
                            click: function(e) {
                                return t.changeLang(s)
                            }
                        }
                    }, [e("div", {
                        staticClass: "flag fs small-flag",
                        class: "flag-" + s
                    }), e("div", {
                        staticClass: "name"
                    }, [t._v(t._s(t.rawTokens[s] ? t.rawTokens[s]._name : ""))])])
                }
            )), 0)]) : t._e(), t.aspinDesign && t.whiteAspinTheme && !t.isMobile ? e("div", {
                staticClass: "switch",
                class: {
                    active: t.lightTheme
                },
                on: {
                    click: t.switchTheme
                }
            }, [e("div", {
                staticClass: "dark"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 17 26",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M16.8541 25.5321C14.9465 26.0547 12.9292 26.1218 10.9631 25.7281C8.99706 25.3343 7.13654 24.4907 5.52997 23.2644C3.92339 22.0381 2.6152 20.463 1.70972 18.6649C0.804239 16.8667 0.32652 14.8952 0.314659 12.9075C0.302796 10.9198 0.75712 8.97095 1.6414 7.21636C2.52568 5.46177 3.81545 3.94997 5.40785 2.80153C7.00026 1.65309 8.85124 0.899784 10.8132 0.601678C12.7752 0.303572 14.7938 0.468917 16.7082 1.08453C14.4117 1.6864 12.3558 2.93599 10.783 4.68588C9.67642 5.91662 8.83084 7.3602 8.29457 8.93408C7.7583 10.5079 7.54185 12.1812 7.65761 13.8583C7.77338 15.5353 8.21907 17.1831 8.96922 18.7076C9.71936 20.2321 10.7592 21.6032 12.0294 22.7427C13.419 24.0142 15.0677 24.9674 16.8541 25.5321Z",
                    fill: "#fff"
                }
            })])]), e("div", {
                staticClass: "light"
            }, [e("svg", {
                attrs: {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    viewBox: "0 0 24 24",
                    fill: "none"
                }
            }, [e("path", {
                attrs: {
                    "fill-rule": "evenodd",
                    "clip-rule": "evenodd",
                    d: "M7.51448 3.82869C7.21508 3.70277 6.12701 3.27318 5.58662 3.08801C5.15895 2.92709 4.71196 2.82496 4.25757 2.78433C4.07501 2.84359 4.07501 3.76203 4.13343 4.31753C4.19185 4.87304 4.39632 5.5989 4.44014 5.93961C4.6227 6.97656 7.82118 3.97682 7.51448 3.85831V3.82869ZM13.9772 2.91025C13.7946 2.59917 13.1958 1.56222 12.9475 1.07338C12.725 0.677215 12.4415 0.319654 12.1077 0.0142102C11.9252 -0.111705 11.3191 0.628971 11.0781 1.05856C10.8371 1.48815 10.4136 2.23624 10.2967 2.48066C9.74904 3.3991 14.1013 3.22133 13.948 2.91025H13.9772ZM14.2766 5.19894C13.5276 5.00082 12.7576 4.89635 11.9836 4.88785C11.2288 4.89629 10.4781 5.0008 9.74904 5.19894C8.01982 5.74779 6.54164 6.90676 5.58235 8.46584C4.62305 10.0249 4.24611 11.881 4.51981 13.6976C4.79352 15.5143 5.69977 17.1715 7.07435 18.3688C8.44893 19.5662 10.2009 20.2245 12.0128 20.2245C13.8247 20.2245 15.5767 19.5662 16.9513 18.3688C18.3258 17.1715 19.2321 15.5143 19.5058 13.6976C19.7795 11.881 19.4026 10.0249 18.4433 8.46584C17.484 6.90676 16.0058 5.74779 14.2766 5.19894ZM19.4686 6.42105C19.5344 6.05071 19.7096 4.88785 19.8338 4.33975C19.9457 3.89442 19.9655 3.43042 19.8922 2.97691C19.8338 2.79174 18.9283 2.91766 18.3879 3.09542C17.8475 3.27318 17.1757 3.59167 16.9274 3.65092C15.905 4.01386 19.4029 6.70991 19.4613 6.40624L19.4686 6.42105ZM21.5206 12.6649C21.7616 12.4798 22.6744 11.6872 23.0907 11.3169C23.4442 11.0445 23.7502 10.7141 23.9962 10.3392C24.0619 10.1541 23.2659 9.66521 22.7328 9.48004C22.1998 9.29487 21.5206 9.05045 21.2724 8.93194C20.25 8.5616 21.2139 12.9094 21.5133 12.6353L21.5206 12.6649ZM19.0451 18.7903H21.1044C21.574 18.8125 22.0439 18.7498 22.4919 18.6052C22.6744 18.5459 22.3093 17.6275 22.0683 17.1238C21.7755 16.6726 21.5121 16.2025 21.2797 15.7165C20.7393 14.8573 18.7457 18.7755 19.0451 18.7755V18.7903ZM13.3126 21.916C13.5536 22.0937 14.4591 22.8937 14.8827 23.2566C15.2265 23.5598 15.6129 23.8094 16.0292 23.9973C16.2702 24.0565 16.5769 23.1381 16.6937 22.59C16.8105 22.0419 16.8763 21.3012 16.9347 20.9901C17.1172 19.9532 13.0717 21.6715 13.2834 21.916H13.3126ZM6.9741 20.5457C7.03252 20.8494 7.21508 22.0271 7.33192 22.5678C7.36805 23.0153 7.4922 23.451 7.69704 23.8491C7.8796 24.0343 8.66827 23.6047 9.08451 23.2344C9.50075 22.864 10.0557 22.3826 10.2967 22.1974C11.0781 21.5234 6.91568 20.1754 6.9741 20.5457ZM2.93582 15.3388C2.81168 15.5832 2.20558 16.6276 1.9719 17.1164C1.70312 17.5 1.51656 17.9365 1.42421 18.3978C1.42421 18.5829 2.32972 18.7681 2.88471 18.7681H4.44014C5.64504 18.7681 3.04536 15.1536 2.92852 15.3388H2.93582ZM3.17681 8.72455C2.8774 8.85046 1.78934 9.27265 1.24165 9.46522C0.804243 9.60221 0.390397 9.80709 0.0148327 10.0726C-0.102007 10.2577 0.496796 10.991 0.92034 11.2947C1.34388 11.5984 1.89157 12.1539 2.13255 12.339C2.91392 13.0131 3.4543 8.63567 3.1549 8.72455H3.17681Z",
                    fill: "#258BD4"
                }
            })])])]) : t._e(), t.aspinDesign ? e("div", {
                staticClass: "avatar"
            }, [e("div", {
                staticClass: "circle"
            }, [e("i", {
                staticClass: "material-icons",
                class: {
                    hide: t.user.avatar
                }
            }, [t._v("person")]), e("img", {
                class: {
                    hide: !t.user.avatar
                },
                attrs: {
                    src: t.user.avatar ? t.apiBase + "/avatar/" + t.user.avatar : ""
                }
            })])]) : t._e(), t.aspinDesign ? e("img", {
                staticClass: "settings",
                attrs: {
                    src: t.staticBase + `aspin-design/settings-i${t.lightTheme ? "-black" : ""}.png`,
                    alt: ""
                },
                on: {
                    click: function(e) {
                        return t.changePage("settings")
                    }
                }
            }) : t._e()])]), e("div", {
                staticClass: "menu",
                class: {
                    mobile: t.isMobile
                }
            }, [e("HamburgerMenu")], 1), e("div", {
                staticClass: "empty-aside menu",
                class: {
                    hide: !t.isMobile
                }
            }, [e("HamburgerMenu")], 1), e("main", {
                ref: "fullscreen",
                staticClass: "fs",
                class: {
                    dashboard: "dashboard" === t.modalFullscreen.page && !t.aspinDesign,
                    "aspin-design": t.aspinDesign
                }
            }, ["dashboard" === t.modalFullscreen.page ? e("Dashboard", {
                staticClass: "cabinet-item",
                class: {
                    dashboard: !t.aspinDesign,
                    mobile: t.isMobile
                }
            }) : t._e(), e("Personal", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "personal" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='personal'"
                }],
                staticClass: "cabinet-item"
            }), e("Deposit", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "deposit" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='deposit'"
                }],
                staticClass: "cabinet-item"
            }), e("Withdrawal", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "withdrawal" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='withdrawal'"
                }],
                staticClass: "cabinet-item"
            }), e("Verification", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "verification" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='verification'"
                }],
                staticClass: "cabinet-item"
            }), e("Accounts", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "accounts" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='accounts'"
                }],
                staticClass: "cabinet-item"
            }), e("Support", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "support" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='support'"
                }],
                staticClass: "cabinet-item support",
                class: {
                    mobile: t.isMobile
                }
            }), e("Savings", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "savings" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='savings'"
                }],
                staticClass: "cabinet-item"
            }), e("Settings", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: "settings" === t.modalFullscreen.page,
                    expression: "modalFullscreen.page==='settings'"
                }],
                staticClass: "cabinet-item"
            }), t.verificationState ? t._e() : e("div", {
                staticClass: "complete-verification"
            }, [t._v(" " + t._s(t.tokens.fullScreenDashboard.completeVerification) + " ")])], 1)])
        }
            , ex = []
            , sx = function() {
            var t = this
                , e = t._self._c;
            return e("div", [t.aspinDesign ? t._e() : e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.personalInfo.toUpperCase()) + " ")]), t.aspinDesign ? e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreen.personalInfo.toUpperCase()))])])]) : t._e(), t.aspinDesign ? e("div", [e("div", {
                staticClass: "personal-info"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.firstName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.firstname,
                    expression: "personal.firstname"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.firstname
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "firstname", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/name-l.png",
                    alt: ""
                }
            }) : t._e()]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.lastName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.lastname,
                    expression: "personal.lastname"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.lastname
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "lastname", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/name-l.png",
                    alt: ""
                }
            }) : t._e()])]), e("hr"), t.aspinDesign ? e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreen.contactInfo.toUpperCase()))])])]) : t._e(), e("div", {
                staticClass: "personal-info"
            }, [t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.email,
                    expression: "personal.email"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.email
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "email", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/email-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email) + " 2")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.email2,
                    expression: "personal.email2"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: "fxprotrading" === t.brand && t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.email2
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "email2", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/email-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.address))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.address,
                    expression: "personal.address"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.address
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "address", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/location.png",
                    alt: ""
                }
            }) : t._e()]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.country))]), t.disableEditPersonalInfo ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.country,
                    expression: "personal.country"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text",
                    disabled: ""
                },
                domProps: {
                    value: t.personal.country
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "country", e.target.value)
                    }
                }
            }) : t._e(), t.disableEditPersonalInfo ? t._e() : e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.country,
                    expression: "personal.country"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                on: {
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.$set(t.personal, "country", e.target.multiple ? s : s[0])
                    }
                }
            }, [e("option", {
                attrs: {
                    value: "Afghanistan"
                }
            }, [t._v("Afghanistan")]), e("option", {
                attrs: {
                    value: "Albania"
                }
            }, [t._v("Albania")]), e("option", {
                attrs: {
                    value: "Algeria"
                }
            }, [t._v("Algeria")]), e("option", {
                attrs: {
                    value: "American Samoa"
                }
            }, [t._v("American Samoa")]), e("option", {
                attrs: {
                    value: "Andorra"
                }
            }, [t._v("Andorra")]), e("option", {
                attrs: {
                    value: "Angola"
                }
            }, [t._v("Angola")]), e("option", {
                attrs: {
                    value: "Anguilla"
                }
            }, [t._v("Anguilla")]), e("option", {
                attrs: {
                    value: "Antigua & Barbuda"
                }
            }, [t._v("Antigua & Barbuda")]), e("option", {
                attrs: {
                    value: "Argentina"
                }
            }, [t._v("Argentina")]), e("option", {
                attrs: {
                    value: "Armenia"
                }
            }, [t._v("Armenia")]), e("option", {
                attrs: {
                    value: "Aruba"
                }
            }, [t._v("Aruba")]), e("option", {
                attrs: {
                    value: "Australia"
                }
            }, [t._v("Australia")]), e("option", {
                attrs: {
                    value: "Austria"
                }
            }, [t._v("Austria")]), e("option", {
                attrs: {
                    value: "Azerbaijan"
                }
            }, [t._v("Azerbaijan")]), e("option", {
                attrs: {
                    value: "Bahamas"
                }
            }, [t._v("Bahamas")]), e("option", {
                attrs: {
                    value: "Bahrain"
                }
            }, [t._v("Bahrain")]), e("option", {
                attrs: {
                    value: "Bangladesh"
                }
            }, [t._v("Bangladesh")]), e("option", {
                attrs: {
                    value: "Barbados"
                }
            }, [t._v("Barbados")]), e("option", {
                attrs: {
                    value: "Belarus"
                }
            }, [t._v("Belarus")]), e("option", {
                attrs: {
                    value: "Belgium"
                }
            }, [t._v("Belgium")]), e("option", {
                attrs: {
                    value: "Belize"
                }
            }, [t._v("Belize")]), e("option", {
                attrs: {
                    value: "Benin"
                }
            }, [t._v("Benin")]), e("option", {
                attrs: {
                    value: "Bermuda"
                }
            }, [t._v("Bermuda")]), e("option", {
                attrs: {
                    value: "Bhutan"
                }
            }, [t._v("Bhutan")]), e("option", {
                attrs: {
                    value: "Bolivia"
                }
            }, [t._v("Bolivia")]), e("option", {
                attrs: {
                    value: "Bonaire"
                }
            }, [t._v("Bonaire")]), e("option", {
                attrs: {
                    value: "Bosnia & Herzegovina"
                }
            }, [t._v("Bosnia & Herzegovina")]), e("option", {
                attrs: {
                    value: "Botswana"
                }
            }, [t._v("Botswana")]), e("option", {
                attrs: {
                    value: "Brazil"
                }
            }, [t._v("Brazil")]), e("option", {
                attrs: {
                    value: "British Indian Ocean Ter"
                }
            }, [t._v("British Indian Ocean Ter")]), e("option", {
                attrs: {
                    value: "Brunei"
                }
            }, [t._v("Brunei")]), e("option", {
                attrs: {
                    value: "Bulgaria"
                }
            }, [t._v("Bulgaria")]), e("option", {
                attrs: {
                    value: "Burkina Faso"
                }
            }, [t._v("Burkina Faso")]), e("option", {
                attrs: {
                    value: "Burundi"
                }
            }, [t._v("Burundi")]), e("option", {
                attrs: {
                    value: "Cambodia"
                }
            }, [t._v("Cambodia")]), e("option", {
                attrs: {
                    value: "Cameroon"
                }
            }, [t._v("Cameroon")]), e("option", {
                attrs: {
                    value: "Canada"
                }
            }, [t._v("Canada")]), e("option", {
                attrs: {
                    value: "Canary Islands"
                }
            }, [t._v("Canary Islands")]), e("option", {
                attrs: {
                    value: "Cape Verde"
                }
            }, [t._v("Cape Verde")]), e("option", {
                attrs: {
                    value: "Cayman Islands"
                }
            }, [t._v("Cayman Islands")]), e("option", {
                attrs: {
                    value: "Central African Republic"
                }
            }, [t._v("Central African Republic")]), e("option", {
                attrs: {
                    value: "Chad"
                }
            }, [t._v("Chad")]), e("option", {
                attrs: {
                    value: "Channel Islands"
                }
            }, [t._v("Channel Islands")]), e("option", {
                attrs: {
                    value: "Chile"
                }
            }, [t._v("Chile")]), e("option", {
                attrs: {
                    value: "China"
                }
            }, [t._v("China")]), e("option", {
                attrs: {
                    value: "Christmas Island"
                }
            }, [t._v("Christmas Island")]), e("option", {
                attrs: {
                    value: "Cocos Island"
                }
            }, [t._v("Cocos Island")]), e("option", {
                attrs: {
                    value: "Colombia"
                }
            }, [t._v("Colombia")]), e("option", {
                attrs: {
                    value: "Comoros"
                }
            }, [t._v("Comoros")]), e("option", {
                attrs: {
                    value: "Congo"
                }
            }, [t._v("Congo")]), e("option", {
                attrs: {
                    value: "Cook Islands"
                }
            }, [t._v("Cook Islands")]), e("option", {
                attrs: {
                    value: "Costa Rica"
                }
            }, [t._v("Costa Rica")]), e("option", {
                attrs: {
                    value: "Cote DIvoire"
                }
            }, [t._v("Cote DIvoire")]), e("option", {
                attrs: {
                    value: "Croatia"
                }
            }, [t._v("Croatia")]), e("option", {
                attrs: {
                    value: "Cuba"
                }
            }, [t._v("Cuba")]), e("option", {
                attrs: {
                    value: "Curaco"
                }
            }, [t._v("Curacao")]), e("option", {
                attrs: {
                    value: "Cyprus"
                }
            }, [t._v("Cyprus")]), e("option", {
                attrs: {
                    value: "Czech Republic"
                }
            }, [t._v("Czech Republic")]), e("option", {
                attrs: {
                    value: "Denmark"
                }
            }, [t._v("Denmark")]), e("option", {
                attrs: {
                    value: "Djibouti"
                }
            }, [t._v("Djibouti")]), e("option", {
                attrs: {
                    value: "Dominica"
                }
            }, [t._v("Dominica")]), e("option", {
                attrs: {
                    value: "Dominican Republic"
                }
            }, [t._v("Dominican Republic")]), e("option", {
                attrs: {
                    value: "East Timor"
                }
            }, [t._v("East Timor")]), e("option", {
                attrs: {
                    value: "Ecuador"
                }
            }, [t._v("Ecuador")]), e("option", {
                attrs: {
                    value: "Egypt"
                }
            }, [t._v("Egypt")]), e("option", {
                attrs: {
                    value: "El Salvador"
                }
            }, [t._v("El Salvador")]), e("option", {
                attrs: {
                    value: "Equatorial Guinea"
                }
            }, [t._v("Equatorial Guinea")]), e("option", {
                attrs: {
                    value: "Eritrea"
                }
            }, [t._v("Eritrea")]), e("option", {
                attrs: {
                    value: "Estonia"
                }
            }, [t._v("Estonia")]), e("option", {
                attrs: {
                    value: "Ethiopia"
                }
            }, [t._v("Ethiopia")]), e("option", {
                attrs: {
                    value: "Falkland Islands"
                }
            }, [t._v("Falkland Islands")]), e("option", {
                attrs: {
                    value: "Faroe Islands"
                }
            }, [t._v("Faroe Islands")]), e("option", {
                attrs: {
                    value: "Fiji"
                }
            }, [t._v("Fiji")]), e("option", {
                attrs: {
                    value: "Finland"
                }
            }, [t._v("Finland")]), e("option", {
                attrs: {
                    value: "France"
                }
            }, [t._v("France")]), e("option", {
                attrs: {
                    value: "French Guiana"
                }
            }, [t._v("French Guiana")]), e("option", {
                attrs: {
                    value: "French Polynesia"
                }
            }, [t._v("French Polynesia")]), e("option", {
                attrs: {
                    value: "French Southern Ter"
                }
            }, [t._v("French Southern Ter")]), e("option", {
                attrs: {
                    value: "Gabon"
                }
            }, [t._v("Gabon")]), e("option", {
                attrs: {
                    value: "Gambia"
                }
            }, [t._v("Gambia")]), e("option", {
                attrs: {
                    value: "Georgia"
                }
            }, [t._v("Georgia")]), e("option", {
                attrs: {
                    value: "Germany"
                }
            }, [t._v("Germany")]), e("option", {
                attrs: {
                    value: "Ghana"
                }
            }, [t._v("Ghana")]), e("option", {
                attrs: {
                    value: "Gibraltar"
                }
            }, [t._v("Gibraltar")]), e("option", {
                attrs: {
                    value: "Great Britain"
                }
            }, [t._v("Great Britain")]), e("option", {
                attrs: {
                    value: "Greece"
                }
            }, [t._v("Greece")]), e("option", {
                attrs: {
                    value: "Greenland"
                }
            }, [t._v("Greenland")]), e("option", {
                attrs: {
                    value: "Grenada"
                }
            }, [t._v("Grenada")]), e("option", {
                attrs: {
                    value: "Guadeloupe"
                }
            }, [t._v("Guadeloupe")]), e("option", {
                attrs: {
                    value: "Guam"
                }
            }, [t._v("Guam")]), e("option", {
                attrs: {
                    value: "Guatemala"
                }
            }, [t._v("Guatemala")]), e("option", {
                attrs: {
                    value: "Guinea"
                }
            }, [t._v("Guinea")]), e("option", {
                attrs: {
                    value: "Guyana"
                }
            }, [t._v("Guyana")]), e("option", {
                attrs: {
                    value: "Haiti"
                }
            }, [t._v("Haiti")]), e("option", {
                attrs: {
                    value: "Hawaii"
                }
            }, [t._v("Hawaii")]), e("option", {
                attrs: {
                    value: "Honduras"
                }
            }, [t._v("Honduras")]), e("option", {
                attrs: {
                    value: "Hong Kong"
                }
            }, [t._v("Hong Kong")]), e("option", {
                attrs: {
                    value: "Hungary"
                }
            }, [t._v("Hungary")]), e("option", {
                attrs: {
                    value: "Iceland"
                }
            }, [t._v("Iceland")]), e("option", {
                attrs: {
                    value: "Indonesia"
                }
            }, [t._v("Indonesia")]), e("option", {
                attrs: {
                    value: "India"
                }
            }, [t._v("India")]), e("option", {
                attrs: {
                    value: "Iran"
                }
            }, [t._v("Iran")]), e("option", {
                attrs: {
                    value: "Iraq"
                }
            }, [t._v("Iraq")]), e("option", {
                attrs: {
                    value: "Ireland"
                }
            }, [t._v("Ireland")]), e("option", {
                attrs: {
                    value: "Isle of Man"
                }
            }, [t._v("Isle of Man")]), e("option", {
                attrs: {
                    value: "Israel"
                }
            }, [t._v("Israel")]), e("option", {
                attrs: {
                    value: "Italy"
                }
            }, [t._v("Italy")]), e("option", {
                attrs: {
                    value: "Jamaica"
                }
            }, [t._v("Jamaica")]), e("option", {
                attrs: {
                    value: "Japan"
                }
            }, [t._v("Japan")]), e("option", {
                attrs: {
                    value: "Jordan"
                }
            }, [t._v("Jordan")]), e("option", {
                attrs: {
                    value: "Kazakhstan"
                }
            }, [t._v("Kazakhstan")]), e("option", {
                attrs: {
                    value: "Kenya"
                }
            }, [t._v("Kenya")]), e("option", {
                attrs: {
                    value: "Kiribati"
                }
            }, [t._v("Kiribati")]), e("option", {
                attrs: {
                    value: "Korea North"
                }
            }, [t._v("Korea North")]), e("option", {
                attrs: {
                    value: "Korea Sout"
                }
            }, [t._v("Korea South")]), e("option", {
                attrs: {
                    value: "Kuwait"
                }
            }, [t._v("Kuwait")]), e("option", {
                attrs: {
                    value: "Kyrgyzstan"
                }
            }, [t._v("Kyrgyzstan")]), e("option", {
                attrs: {
                    value: "Laos"
                }
            }, [t._v("Laos")]), e("option", {
                attrs: {
                    value: "Latvia"
                }
            }, [t._v("Latvia")]), e("option", {
                attrs: {
                    value: "Lebanon"
                }
            }, [t._v("Lebanon")]), e("option", {
                attrs: {
                    value: "Lesotho"
                }
            }, [t._v("Lesotho")]), e("option", {
                attrs: {
                    value: "Liberia"
                }
            }, [t._v("Liberia")]), e("option", {
                attrs: {
                    value: "Libya"
                }
            }, [t._v("Libya")]), e("option", {
                attrs: {
                    value: "Liechtenstein"
                }
            }, [t._v("Liechtenstein")]), e("option", {
                attrs: {
                    value: "Lithuania"
                }
            }, [t._v("Lithuania")]), e("option", {
                attrs: {
                    value: "Luxembourg"
                }
            }, [t._v("Luxembourg")]), e("option", {
                attrs: {
                    value: "Macau"
                }
            }, [t._v("Macau")]), e("option", {
                attrs: {
                    value: "Macedonia"
                }
            }, [t._v("Macedonia")]), e("option", {
                attrs: {
                    value: "Madagascar"
                }
            }, [t._v("Madagascar")]), e("option", {
                attrs: {
                    value: "Malaysia"
                }
            }, [t._v("Malaysia")]), e("option", {
                attrs: {
                    value: "Malawi"
                }
            }, [t._v("Malawi")]), e("option", {
                attrs: {
                    value: "Maldives"
                }
            }, [t._v("Maldives")]), e("option", {
                attrs: {
                    value: "Mali"
                }
            }, [t._v("Mali")]), e("option", {
                attrs: {
                    value: "Malta"
                }
            }, [t._v("Malta")]), e("option", {
                attrs: {
                    value: "Marshall Islands"
                }
            }, [t._v("Marshall Islands")]), e("option", {
                attrs: {
                    value: "Martinique"
                }
            }, [t._v("Martinique")]), e("option", {
                attrs: {
                    value: "Mauritania"
                }
            }, [t._v("Mauritania")]), e("option", {
                attrs: {
                    value: "Mauritius"
                }
            }, [t._v("Mauritius")]), e("option", {
                attrs: {
                    value: "Mayotte"
                }
            }, [t._v("Mayotte")]), e("option", {
                attrs: {
                    value: "Mexico"
                }
            }, [t._v("Mexico")]), e("option", {
                attrs: {
                    value: "Midway Islands"
                }
            }, [t._v("Midway Islands")]), e("option", {
                attrs: {
                    value: "Moldova"
                }
            }, [t._v("Moldova")]), e("option", {
                attrs: {
                    value: "Monaco"
                }
            }, [t._v("Monaco")]), e("option", {
                attrs: {
                    value: "Mongolia"
                }
            }, [t._v("Mongolia")]), e("option", {
                attrs: {
                    value: "Montserrat"
                }
            }, [t._v("Montserrat")]), e("option", {
                attrs: {
                    value: "Morocco"
                }
            }, [t._v("Morocco")]), e("option", {
                attrs: {
                    value: "Mozambique"
                }
            }, [t._v("Mozambique")]), e("option", {
                attrs: {
                    value: "Myanmar"
                }
            }, [t._v("Myanmar")]), e("option", {
                attrs: {
                    value: "Nambia"
                }
            }, [t._v("Nambia")]), e("option", {
                attrs: {
                    value: "Nauru"
                }
            }, [t._v("Nauru")]), e("option", {
                attrs: {
                    value: "Nepal"
                }
            }, [t._v("Nepal")]), e("option", {
                attrs: {
                    value: "Netherland Antilles"
                }
            }, [t._v("Netherland Antilles")]), e("option", {
                attrs: {
                    value: "Netherlands"
                }
            }, [t._v("Netherlands (Holland, Europe)")]), e("option", {
                attrs: {
                    value: "Nevis"
                }
            }, [t._v("Nevis")]), e("option", {
                attrs: {
                    value: "New Caledonia"
                }
            }, [t._v("New Caledonia")]), e("option", {
                attrs: {
                    value: "New Zealand"
                }
            }, [t._v("New Zealand")]), e("option", {
                attrs: {
                    value: "Nicaragua"
                }
            }, [t._v("Nicaragua")]), e("option", {
                attrs: {
                    value: "Niger"
                }
            }, [t._v("Niger")]), e("option", {
                attrs: {
                    value: "Nigeria"
                }
            }, [t._v("Nigeria")]), e("option", {
                attrs: {
                    value: "Niue"
                }
            }, [t._v("Niue")]), e("option", {
                attrs: {
                    value: "Norfolk Island"
                }
            }, [t._v("Norfolk Island")]), e("option", {
                attrs: {
                    value: "Norway"
                }
            }, [t._v("Norway")]), e("option", {
                attrs: {
                    value: "Oman"
                }
            }, [t._v("Oman")]), e("option", {
                attrs: {
                    value: "Pakistan"
                }
            }, [t._v("Pakistan")]), e("option", {
                attrs: {
                    value: "Palau Island"
                }
            }, [t._v("Palau Island")]), e("option", {
                attrs: {
                    value: "Palestine"
                }
            }, [t._v("Palestine")]), e("option", {
                attrs: {
                    value: "Panama"
                }
            }, [t._v("Panama")]), e("option", {
                attrs: {
                    value: "Papua New Guinea"
                }
            }, [t._v("Papua New Guinea")]), e("option", {
                attrs: {
                    value: "Paraguay"
                }
            }, [t._v("Paraguay")]), e("option", {
                attrs: {
                    value: "Peru"
                }
            }, [t._v("Peru")]), e("option", {
                attrs: {
                    value: "Phillipines"
                }
            }, [t._v("Philippines")]), e("option", {
                attrs: {
                    value: "Pitcairn Island"
                }
            }, [t._v("Pitcairn Island")]), e("option", {
                attrs: {
                    value: "Poland"
                }
            }, [t._v("Poland")]), e("option", {
                attrs: {
                    value: "Portugal"
                }
            }, [t._v("Portugal")]), e("option", {
                attrs: {
                    value: "Puerto Rico"
                }
            }, [t._v("Puerto Rico")]), e("option", {
                attrs: {
                    value: "Qatar"
                }
            }, [t._v("Qatar")]), e("option", {
                attrs: {
                    value: "Republic of Montenegro"
                }
            }, [t._v("Republic of Montenegro")]), e("option", {
                attrs: {
                    value: "Reunion"
                }
            }, [t._v("Reunion")]), e("option", {
                attrs: {
                    value: "Romania"
                }
            }, [t._v("Romania")]), e("option", {
                attrs: {
                    value: "Russia"
                }
            }, [t._v("Russia")]), e("option", {
                attrs: {
                    value: "Rwanda"
                }
            }, [t._v("Rwanda")]), e("option", {
                attrs: {
                    value: "St Barthelemy"
                }
            }, [t._v("St Barthelemy")]), e("option", {
                attrs: {
                    value: "St Eustatius"
                }
            }, [t._v("St Eustatius")]), e("option", {
                attrs: {
                    value: "St Helena"
                }
            }, [t._v("St Helena")]), e("option", {
                attrs: {
                    value: "St Kitts-Nevis"
                }
            }, [t._v("St Kitts-Nevis")]), e("option", {
                attrs: {
                    value: "St Lucia"
                }
            }, [t._v("St Lucia")]), e("option", {
                attrs: {
                    value: "St Maarten"
                }
            }, [t._v("St Maarten")]), e("option", {
                attrs: {
                    value: "St Pierre & Miquelon"
                }
            }, [t._v("St Pierre & Miquelon")]), e("option", {
                attrs: {
                    value: "St Vincent & Grenadines"
                }
            }, [t._v("St Vincent & Grenadines")]), e("option", {
                attrs: {
                    value: "Saipan"
                }
            }, [t._v("Saipan")]), e("option", {
                attrs: {
                    value: "Samoa"
                }
            }, [t._v("Samoa")]), e("option", {
                attrs: {
                    value: "Samoa American"
                }
            }, [t._v("Samoa American")]), e("option", {
                attrs: {
                    value: "San Marino"
                }
            }, [t._v("San Marino")]), e("option", {
                attrs: {
                    value: "Sao Tome & Principe"
                }
            }, [t._v("Sao Tome & Principe")]), e("option", {
                attrs: {
                    value: "Saudi Arabia"
                }
            }, [t._v("Saudi Arabia")]), e("option", {
                attrs: {
                    value: "Serbia"
                }
            }, [t._v("Serbia")]), e("option", {
                attrs: {
                    value: "Senegal"
                }
            }, [t._v("Senegal")]), e("option", {
                attrs: {
                    value: "Seychelles"
                }
            }, [t._v("Seychelles")]), e("option", {
                attrs: {
                    value: "Sierra Leone"
                }
            }, [t._v("Sierra Leone")]), e("option", {
                attrs: {
                    value: "Singapore"
                }
            }, [t._v("Singapore")]), e("option", {
                attrs: {
                    value: "Slovakia"
                }
            }, [t._v("Slovakia")]), e("option", {
                attrs: {
                    value: "Slovenia"
                }
            }, [t._v("Slovenia")]), e("option", {
                attrs: {
                    value: "Solomon Islands"
                }
            }, [t._v("Solomon Islands")]), e("option", {
                attrs: {
                    value: "Somalia"
                }
            }, [t._v("Somalia")]), e("option", {
                attrs: {
                    value: "South Africa"
                }
            }, [t._v("South Africa")]), e("option", {
                attrs: {
                    value: "Spain"
                }
            }, [t._v("Spain")]), e("option", {
                attrs: {
                    value: "Sri Lanka"
                }
            }, [t._v("Sri Lanka")]), e("option", {
                attrs: {
                    value: "Sudan"
                }
            }, [t._v("Sudan")]), e("option", {
                attrs: {
                    value: "Suriname"
                }
            }, [t._v("Suriname")]), e("option", {
                attrs: {
                    value: "Swaziland"
                }
            }, [t._v("Swaziland")]), e("option", {
                attrs: {
                    value: "Sweden"
                }
            }, [t._v("Sweden")]), e("option", {
                attrs: {
                    value: "Switzerland"
                }
            }, [t._v("Switzerland")]), e("option", {
                attrs: {
                    value: "Syria"
                }
            }, [t._v("Syria")]), e("option", {
                attrs: {
                    value: "Tahiti"
                }
            }, [t._v("Tahiti")]), e("option", {
                attrs: {
                    value: "Taiwan"
                }
            }, [t._v("Taiwan")]), e("option", {
                attrs: {
                    value: "Tajikistan"
                }
            }, [t._v("Tajikistan")]), e("option", {
                attrs: {
                    value: "Tanzania"
                }
            }, [t._v("Tanzania")]), e("option", {
                attrs: {
                    value: "Thailand"
                }
            }, [t._v("Thailand")]), e("option", {
                attrs: {
                    value: "Togo"
                }
            }, [t._v("Togo")]), e("option", {
                attrs: {
                    value: "Tokelau"
                }
            }, [t._v("Tokelau")]), e("option", {
                attrs: {
                    value: "Tonga"
                }
            }, [t._v("Tonga")]), e("option", {
                attrs: {
                    value: "Trinidad & Tobago"
                }
            }, [t._v("Trinidad & Tobago")]), e("option", {
                attrs: {
                    value: "Tunisia"
                }
            }, [t._v("Tunisia")]), e("option", {
                attrs: {
                    value: "Turkey"
                }
            }, [t._v("Turkey")]), e("option", {
                attrs: {
                    value: "Turkmenistan"
                }
            }, [t._v("Turkmenistan")]), e("option", {
                attrs: {
                    value: "Turks & Caicos Is"
                }
            }, [t._v("Turks & Caicos Is")]), e("option", {
                attrs: {
                    value: "Tuvalu"
                }
            }, [t._v("Tuvalu")]), e("option", {
                attrs: {
                    value: "Uganda"
                }
            }, [t._v("Uganda")]), e("option", {
                attrs: {
                    value: "United Kingdom"
                }
            }, [t._v("United Kingdom")]), e("option", {
                attrs: {
                    value: "Ukraine"
                }
            }, [t._v("Ukraine")]), e("option", {
                attrs: {
                    value: "United Arab Erimates"
                }
            }, [t._v("United Arab Emirates")]), e("option", {
                attrs: {
                    value: "United States of America"
                }
            }, [t._v("United States of America")]), e("option", {
                attrs: {
                    value: "Uruguay"
                }
            }, [t._v("Uruguay")]), e("option", {
                attrs: {
                    value: "Uzbekistan"
                }
            }, [t._v("Uzbekistan")]), e("option", {
                attrs: {
                    value: "Vanuatu"
                }
            }, [t._v("Vanuatu")]), e("option", {
                attrs: {
                    value: "Vatican City State"
                }
            }, [t._v("Vatican City State")]), e("option", {
                attrs: {
                    value: "Venezuela"
                }
            }, [t._v("Venezuela")]), e("option", {
                attrs: {
                    value: "Vietnam"
                }
            }, [t._v("Vietnam")]), e("option", {
                attrs: {
                    value: "Virgin Islands (Brit)"
                }
            }, [t._v("Virgin Islands (Brit)")]), e("option", {
                attrs: {
                    value: "Virgin Islands (USA)"
                }
            }, [t._v("Virgin Islands (USA)")]), e("option", {
                attrs: {
                    value: "Wake Island"
                }
            }, [t._v("Wake Island")]), e("option", {
                attrs: {
                    value: "Wallis & Futana Is"
                }
            }, [t._v("Wallis & Futana Is")]), e("option", {
                attrs: {
                    value: "Yemen"
                }
            }, [t._v("Yemen")]), e("option", {
                attrs: {
                    value: "Zaire"
                }
            }, [t._v("Zaire")]), e("option", {
                attrs: {
                    value: "Zambia"
                }
            }, [t._v("Zambia")]), e("option", {
                attrs: {
                    value: "Zimbabwe"
                }
            }, [t._v("Zimbabwe")])])]), "stage" === t.brand ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.state))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.state,
                    expression: "personal.state"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.state
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "state", e.target.value)
                    }
                }
            })]) : t._e(), "stage" === t.brand ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.postcode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.postcode,
                    expression: "personal.postcode"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.postcode
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "postcode", e.target.value)
                    }
                }
            })]) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.phone,
                    expression: "personal.phone"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: ""
                },
                domProps: {
                    value: t.personal.phone
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "phone", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/phone-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone) + " 2")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.phone2,
                    expression: "personal.phone2"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: "fxprotrading" === t.brand
                },
                domProps: {
                    value: t.personal.phone2
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "phone2", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/phone-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e()]), e("hr")]) : e("div", {
                staticClass: "personal-info"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.firstName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.firstname,
                    expression: "personal.firstname"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.firstname
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "firstname", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/name-l.png",
                    alt: ""
                }
            }) : t._e()]), t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.email,
                    expression: "personal.email"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.email
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "email", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/email-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.lastName))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.lastname,
                    expression: "personal.lastname"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.lastname
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "lastname", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/name-l.png",
                    alt: ""
                }
            }) : t._e()]), t.user.hide_email_platform && !t.hideEmail ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.email) + " 2")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.email2,
                    expression: "personal.email2"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: "fxprotrading" === t.brand && t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.email2
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "email2", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/email-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.address))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.address,
                    expression: "personal.address"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.address
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "address", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/location.png",
                    alt: ""
                }
            }) : t._e()]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.country))]), t.disableEditPersonalInfo ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.country,
                    expression: "personal.country"
                }],
                staticClass: "fs",
                attrs: {
                    type: "text",
                    disabled: ""
                },
                domProps: {
                    value: t.personal.country
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "country", e.target.value)
                    }
                }
            }) : t._e(), t.disableEditPersonalInfo ? t._e() : e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.country,
                    expression: "personal.country"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                on: {
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.$set(t.personal, "country", e.target.multiple ? s : s[0])
                    }
                }
            }, [e("option", {
                attrs: {
                    value: "Afghanistan"
                }
            }, [t._v("Afghanistan")]), e("option", {
                attrs: {
                    value: "Albania"
                }
            }, [t._v("Albania")]), e("option", {
                attrs: {
                    value: "Algeria"
                }
            }, [t._v("Algeria")]), e("option", {
                attrs: {
                    value: "American Samoa"
                }
            }, [t._v("American Samoa")]), e("option", {
                attrs: {
                    value: "Andorra"
                }
            }, [t._v("Andorra")]), e("option", {
                attrs: {
                    value: "Angola"
                }
            }, [t._v("Angola")]), e("option", {
                attrs: {
                    value: "Anguilla"
                }
            }, [t._v("Anguilla")]), e("option", {
                attrs: {
                    value: "Antigua & Barbuda"
                }
            }, [t._v("Antigua & Barbuda")]), e("option", {
                attrs: {
                    value: "Argentina"
                }
            }, [t._v("Argentina")]), e("option", {
                attrs: {
                    value: "Armenia"
                }
            }, [t._v("Armenia")]), e("option", {
                attrs: {
                    value: "Aruba"
                }
            }, [t._v("Aruba")]), e("option", {
                attrs: {
                    value: "Australia"
                }
            }, [t._v("Australia")]), e("option", {
                attrs: {
                    value: "Austria"
                }
            }, [t._v("Austria")]), e("option", {
                attrs: {
                    value: "Azerbaijan"
                }
            }, [t._v("Azerbaijan")]), e("option", {
                attrs: {
                    value: "Bahamas"
                }
            }, [t._v("Bahamas")]), e("option", {
                attrs: {
                    value: "Bahrain"
                }
            }, [t._v("Bahrain")]), e("option", {
                attrs: {
                    value: "Bangladesh"
                }
            }, [t._v("Bangladesh")]), e("option", {
                attrs: {
                    value: "Barbados"
                }
            }, [t._v("Barbados")]), e("option", {
                attrs: {
                    value: "Belarus"
                }
            }, [t._v("Belarus")]), e("option", {
                attrs: {
                    value: "Belgium"
                }
            }, [t._v("Belgium")]), e("option", {
                attrs: {
                    value: "Belize"
                }
            }, [t._v("Belize")]), e("option", {
                attrs: {
                    value: "Benin"
                }
            }, [t._v("Benin")]), e("option", {
                attrs: {
                    value: "Bermuda"
                }
            }, [t._v("Bermuda")]), e("option", {
                attrs: {
                    value: "Bhutan"
                }
            }, [t._v("Bhutan")]), e("option", {
                attrs: {
                    value: "Bolivia"
                }
            }, [t._v("Bolivia")]), e("option", {
                attrs: {
                    value: "Bonaire"
                }
            }, [t._v("Bonaire")]), e("option", {
                attrs: {
                    value: "Bosnia & Herzegovina"
                }
            }, [t._v("Bosnia & Herzegovina")]), e("option", {
                attrs: {
                    value: "Botswana"
                }
            }, [t._v("Botswana")]), e("option", {
                attrs: {
                    value: "Brazil"
                }
            }, [t._v("Brazil")]), e("option", {
                attrs: {
                    value: "British Indian Ocean Ter"
                }
            }, [t._v("British Indian Ocean Ter")]), e("option", {
                attrs: {
                    value: "Brunei"
                }
            }, [t._v("Brunei")]), e("option", {
                attrs: {
                    value: "Bulgaria"
                }
            }, [t._v("Bulgaria")]), e("option", {
                attrs: {
                    value: "Burkina Faso"
                }
            }, [t._v("Burkina Faso")]), e("option", {
                attrs: {
                    value: "Burundi"
                }
            }, [t._v("Burundi")]), e("option", {
                attrs: {
                    value: "Cambodia"
                }
            }, [t._v("Cambodia")]), e("option", {
                attrs: {
                    value: "Cameroon"
                }
            }, [t._v("Cameroon")]), e("option", {
                attrs: {
                    value: "Canada"
                }
            }, [t._v("Canada")]), e("option", {
                attrs: {
                    value: "Canary Islands"
                }
            }, [t._v("Canary Islands")]), e("option", {
                attrs: {
                    value: "Cape Verde"
                }
            }, [t._v("Cape Verde")]), e("option", {
                attrs: {
                    value: "Cayman Islands"
                }
            }, [t._v("Cayman Islands")]), e("option", {
                attrs: {
                    value: "Central African Republic"
                }
            }, [t._v("Central African Republic")]), e("option", {
                attrs: {
                    value: "Chad"
                }
            }, [t._v("Chad")]), e("option", {
                attrs: {
                    value: "Channel Islands"
                }
            }, [t._v("Channel Islands")]), e("option", {
                attrs: {
                    value: "Chile"
                }
            }, [t._v("Chile")]), e("option", {
                attrs: {
                    value: "China"
                }
            }, [t._v("China")]), e("option", {
                attrs: {
                    value: "Christmas Island"
                }
            }, [t._v("Christmas Island")]), e("option", {
                attrs: {
                    value: "Cocos Island"
                }
            }, [t._v("Cocos Island")]), e("option", {
                attrs: {
                    value: "Colombia"
                }
            }, [t._v("Colombia")]), e("option", {
                attrs: {
                    value: "Comoros"
                }
            }, [t._v("Comoros")]), e("option", {
                attrs: {
                    value: "Congo"
                }
            }, [t._v("Congo")]), e("option", {
                attrs: {
                    value: "Cook Islands"
                }
            }, [t._v("Cook Islands")]), e("option", {
                attrs: {
                    value: "Costa Rica"
                }
            }, [t._v("Costa Rica")]), e("option", {
                attrs: {
                    value: "Cote DIvoire"
                }
            }, [t._v("Cote DIvoire")]), e("option", {
                attrs: {
                    value: "Croatia"
                }
            }, [t._v("Croatia")]), e("option", {
                attrs: {
                    value: "Cuba"
                }
            }, [t._v("Cuba")]), e("option", {
                attrs: {
                    value: "Curaco"
                }
            }, [t._v("Curacao")]), e("option", {
                attrs: {
                    value: "Cyprus"
                }
            }, [t._v("Cyprus")]), e("option", {
                attrs: {
                    value: "Czech Republic"
                }
            }, [t._v("Czech Republic")]), e("option", {
                attrs: {
                    value: "Denmark"
                }
            }, [t._v("Denmark")]), e("option", {
                attrs: {
                    value: "Djibouti"
                }
            }, [t._v("Djibouti")]), e("option", {
                attrs: {
                    value: "Dominica"
                }
            }, [t._v("Dominica")]), e("option", {
                attrs: {
                    value: "Dominican Republic"
                }
            }, [t._v("Dominican Republic")]), e("option", {
                attrs: {
                    value: "East Timor"
                }
            }, [t._v("East Timor")]), e("option", {
                attrs: {
                    value: "Ecuador"
                }
            }, [t._v("Ecuador")]), e("option", {
                attrs: {
                    value: "Egypt"
                }
            }, [t._v("Egypt")]), e("option", {
                attrs: {
                    value: "El Salvador"
                }
            }, [t._v("El Salvador")]), e("option", {
                attrs: {
                    value: "Equatorial Guinea"
                }
            }, [t._v("Equatorial Guinea")]), e("option", {
                attrs: {
                    value: "Eritrea"
                }
            }, [t._v("Eritrea")]), e("option", {
                attrs: {
                    value: "Estonia"
                }
            }, [t._v("Estonia")]), e("option", {
                attrs: {
                    value: "Ethiopia"
                }
            }, [t._v("Ethiopia")]), e("option", {
                attrs: {
                    value: "Falkland Islands"
                }
            }, [t._v("Falkland Islands")]), e("option", {
                attrs: {
                    value: "Faroe Islands"
                }
            }, [t._v("Faroe Islands")]), e("option", {
                attrs: {
                    value: "Fiji"
                }
            }, [t._v("Fiji")]), e("option", {
                attrs: {
                    value: "Finland"
                }
            }, [t._v("Finland")]), e("option", {
                attrs: {
                    value: "France"
                }
            }, [t._v("France")]), e("option", {
                attrs: {
                    value: "French Guiana"
                }
            }, [t._v("French Guiana")]), e("option", {
                attrs: {
                    value: "French Polynesia"
                }
            }, [t._v("French Polynesia")]), e("option", {
                attrs: {
                    value: "French Southern Ter"
                }
            }, [t._v("French Southern Ter")]), e("option", {
                attrs: {
                    value: "Gabon"
                }
            }, [t._v("Gabon")]), e("option", {
                attrs: {
                    value: "Gambia"
                }
            }, [t._v("Gambia")]), e("option", {
                attrs: {
                    value: "Georgia"
                }
            }, [t._v("Georgia")]), e("option", {
                attrs: {
                    value: "Germany"
                }
            }, [t._v("Germany")]), e("option", {
                attrs: {
                    value: "Ghana"
                }
            }, [t._v("Ghana")]), e("option", {
                attrs: {
                    value: "Gibraltar"
                }
            }, [t._v("Gibraltar")]), e("option", {
                attrs: {
                    value: "Great Britain"
                }
            }, [t._v("Great Britain")]), e("option", {
                attrs: {
                    value: "Greece"
                }
            }, [t._v("Greece")]), e("option", {
                attrs: {
                    value: "Greenland"
                }
            }, [t._v("Greenland")]), e("option", {
                attrs: {
                    value: "Grenada"
                }
            }, [t._v("Grenada")]), e("option", {
                attrs: {
                    value: "Guadeloupe"
                }
            }, [t._v("Guadeloupe")]), e("option", {
                attrs: {
                    value: "Guam"
                }
            }, [t._v("Guam")]), e("option", {
                attrs: {
                    value: "Guatemala"
                }
            }, [t._v("Guatemala")]), e("option", {
                attrs: {
                    value: "Guinea"
                }
            }, [t._v("Guinea")]), e("option", {
                attrs: {
                    value: "Guyana"
                }
            }, [t._v("Guyana")]), e("option", {
                attrs: {
                    value: "Haiti"
                }
            }, [t._v("Haiti")]), e("option", {
                attrs: {
                    value: "Hawaii"
                }
            }, [t._v("Hawaii")]), e("option", {
                attrs: {
                    value: "Honduras"
                }
            }, [t._v("Honduras")]), e("option", {
                attrs: {
                    value: "Hong Kong"
                }
            }, [t._v("Hong Kong")]), e("option", {
                attrs: {
                    value: "Hungary"
                }
            }, [t._v("Hungary")]), e("option", {
                attrs: {
                    value: "Iceland"
                }
            }, [t._v("Iceland")]), e("option", {
                attrs: {
                    value: "Indonesia"
                }
            }, [t._v("Indonesia")]), e("option", {
                attrs: {
                    value: "India"
                }
            }, [t._v("India")]), e("option", {
                attrs: {
                    value: "Iran"
                }
            }, [t._v("Iran")]), e("option", {
                attrs: {
                    value: "Iraq"
                }
            }, [t._v("Iraq")]), e("option", {
                attrs: {
                    value: "Ireland"
                }
            }, [t._v("Ireland")]), e("option", {
                attrs: {
                    value: "Isle of Man"
                }
            }, [t._v("Isle of Man")]), e("option", {
                attrs: {
                    value: "Israel"
                }
            }, [t._v("Israel")]), e("option", {
                attrs: {
                    value: "Italy"
                }
            }, [t._v("Italy")]), e("option", {
                attrs: {
                    value: "Jamaica"
                }
            }, [t._v("Jamaica")]), e("option", {
                attrs: {
                    value: "Japan"
                }
            }, [t._v("Japan")]), e("option", {
                attrs: {
                    value: "Jordan"
                }
            }, [t._v("Jordan")]), e("option", {
                attrs: {
                    value: "Kazakhstan"
                }
            }, [t._v("Kazakhstan")]), e("option", {
                attrs: {
                    value: "Kenya"
                }
            }, [t._v("Kenya")]), e("option", {
                attrs: {
                    value: "Kiribati"
                }
            }, [t._v("Kiribati")]), e("option", {
                attrs: {
                    value: "Korea North"
                }
            }, [t._v("Korea North")]), e("option", {
                attrs: {
                    value: "Korea Sout"
                }
            }, [t._v("Korea South")]), e("option", {
                attrs: {
                    value: "Kuwait"
                }
            }, [t._v("Kuwait")]), e("option", {
                attrs: {
                    value: "Kyrgyzstan"
                }
            }, [t._v("Kyrgyzstan")]), e("option", {
                attrs: {
                    value: "Laos"
                }
            }, [t._v("Laos")]), e("option", {
                attrs: {
                    value: "Latvia"
                }
            }, [t._v("Latvia")]), e("option", {
                attrs: {
                    value: "Lebanon"
                }
            }, [t._v("Lebanon")]), e("option", {
                attrs: {
                    value: "Lesotho"
                }
            }, [t._v("Lesotho")]), e("option", {
                attrs: {
                    value: "Liberia"
                }
            }, [t._v("Liberia")]), e("option", {
                attrs: {
                    value: "Libya"
                }
            }, [t._v("Libya")]), e("option", {
                attrs: {
                    value: "Liechtenstein"
                }
            }, [t._v("Liechtenstein")]), e("option", {
                attrs: {
                    value: "Lithuania"
                }
            }, [t._v("Lithuania")]), e("option", {
                attrs: {
                    value: "Luxembourg"
                }
            }, [t._v("Luxembourg")]), e("option", {
                attrs: {
                    value: "Macau"
                }
            }, [t._v("Macau")]), e("option", {
                attrs: {
                    value: "Macedonia"
                }
            }, [t._v("Macedonia")]), e("option", {
                attrs: {
                    value: "Madagascar"
                }
            }, [t._v("Madagascar")]), e("option", {
                attrs: {
                    value: "Malaysia"
                }
            }, [t._v("Malaysia")]), e("option", {
                attrs: {
                    value: "Malawi"
                }
            }, [t._v("Malawi")]), e("option", {
                attrs: {
                    value: "Maldives"
                }
            }, [t._v("Maldives")]), e("option", {
                attrs: {
                    value: "Mali"
                }
            }, [t._v("Mali")]), e("option", {
                attrs: {
                    value: "Malta"
                }
            }, [t._v("Malta")]), e("option", {
                attrs: {
                    value: "Marshall Islands"
                }
            }, [t._v("Marshall Islands")]), e("option", {
                attrs: {
                    value: "Martinique"
                }
            }, [t._v("Martinique")]), e("option", {
                attrs: {
                    value: "Mauritania"
                }
            }, [t._v("Mauritania")]), e("option", {
                attrs: {
                    value: "Mauritius"
                }
            }, [t._v("Mauritius")]), e("option", {
                attrs: {
                    value: "Mayotte"
                }
            }, [t._v("Mayotte")]), e("option", {
                attrs: {
                    value: "Mexico"
                }
            }, [t._v("Mexico")]), e("option", {
                attrs: {
                    value: "Midway Islands"
                }
            }, [t._v("Midway Islands")]), e("option", {
                attrs: {
                    value: "Moldova"
                }
            }, [t._v("Moldova")]), e("option", {
                attrs: {
                    value: "Monaco"
                }
            }, [t._v("Monaco")]), e("option", {
                attrs: {
                    value: "Mongolia"
                }
            }, [t._v("Mongolia")]), e("option", {
                attrs: {
                    value: "Montserrat"
                }
            }, [t._v("Montserrat")]), e("option", {
                attrs: {
                    value: "Morocco"
                }
            }, [t._v("Morocco")]), e("option", {
                attrs: {
                    value: "Mozambique"
                }
            }, [t._v("Mozambique")]), e("option", {
                attrs: {
                    value: "Myanmar"
                }
            }, [t._v("Myanmar")]), e("option", {
                attrs: {
                    value: "Nambia"
                }
            }, [t._v("Nambia")]), e("option", {
                attrs: {
                    value: "Nauru"
                }
            }, [t._v("Nauru")]), e("option", {
                attrs: {
                    value: "Nepal"
                }
            }, [t._v("Nepal")]), e("option", {
                attrs: {
                    value: "Netherland Antilles"
                }
            }, [t._v("Netherland Antilles")]), e("option", {
                attrs: {
                    value: "Netherlands"
                }
            }, [t._v("Netherlands (Holland, Europe)")]), e("option", {
                attrs: {
                    value: "Nevis"
                }
            }, [t._v("Nevis")]), e("option", {
                attrs: {
                    value: "New Caledonia"
                }
            }, [t._v("New Caledonia")]), e("option", {
                attrs: {
                    value: "New Zealand"
                }
            }, [t._v("New Zealand")]), e("option", {
                attrs: {
                    value: "Nicaragua"
                }
            }, [t._v("Nicaragua")]), e("option", {
                attrs: {
                    value: "Niger"
                }
            }, [t._v("Niger")]), e("option", {
                attrs: {
                    value: "Nigeria"
                }
            }, [t._v("Nigeria")]), e("option", {
                attrs: {
                    value: "Niue"
                }
            }, [t._v("Niue")]), e("option", {
                attrs: {
                    value: "Norfolk Island"
                }
            }, [t._v("Norfolk Island")]), e("option", {
                attrs: {
                    value: "Norway"
                }
            }, [t._v("Norway")]), e("option", {
                attrs: {
                    value: "Oman"
                }
            }, [t._v("Oman")]), e("option", {
                attrs: {
                    value: "Pakistan"
                }
            }, [t._v("Pakistan")]), e("option", {
                attrs: {
                    value: "Palau Island"
                }
            }, [t._v("Palau Island")]), e("option", {
                attrs: {
                    value: "Palestine"
                }
            }, [t._v("Palestine")]), e("option", {
                attrs: {
                    value: "Panama"
                }
            }, [t._v("Panama")]), e("option", {
                attrs: {
                    value: "Papua New Guinea"
                }
            }, [t._v("Papua New Guinea")]), e("option", {
                attrs: {
                    value: "Paraguay"
                }
            }, [t._v("Paraguay")]), e("option", {
                attrs: {
                    value: "Peru"
                }
            }, [t._v("Peru")]), e("option", {
                attrs: {
                    value: "Phillipines"
                }
            }, [t._v("Philippines")]), e("option", {
                attrs: {
                    value: "Pitcairn Island"
                }
            }, [t._v("Pitcairn Island")]), e("option", {
                attrs: {
                    value: "Poland"
                }
            }, [t._v("Poland")]), e("option", {
                attrs: {
                    value: "Portugal"
                }
            }, [t._v("Portugal")]), e("option", {
                attrs: {
                    value: "Puerto Rico"
                }
            }, [t._v("Puerto Rico")]), e("option", {
                attrs: {
                    value: "Qatar"
                }
            }, [t._v("Qatar")]), e("option", {
                attrs: {
                    value: "Republic of Montenegro"
                }
            }, [t._v("Republic of Montenegro")]), e("option", {
                attrs: {
                    value: "Reunion"
                }
            }, [t._v("Reunion")]), e("option", {
                attrs: {
                    value: "Romania"
                }
            }, [t._v("Romania")]), e("option", {
                attrs: {
                    value: "Russia"
                }
            }, [t._v("Russia")]), e("option", {
                attrs: {
                    value: "Rwanda"
                }
            }, [t._v("Rwanda")]), e("option", {
                attrs: {
                    value: "St Barthelemy"
                }
            }, [t._v("St Barthelemy")]), e("option", {
                attrs: {
                    value: "St Eustatius"
                }
            }, [t._v("St Eustatius")]), e("option", {
                attrs: {
                    value: "St Helena"
                }
            }, [t._v("St Helena")]), e("option", {
                attrs: {
                    value: "St Kitts-Nevis"
                }
            }, [t._v("St Kitts-Nevis")]), e("option", {
                attrs: {
                    value: "St Lucia"
                }
            }, [t._v("St Lucia")]), e("option", {
                attrs: {
                    value: "St Maarten"
                }
            }, [t._v("St Maarten")]), e("option", {
                attrs: {
                    value: "St Pierre & Miquelon"
                }
            }, [t._v("St Pierre & Miquelon")]), e("option", {
                attrs: {
                    value: "St Vincent & Grenadines"
                }
            }, [t._v("St Vincent & Grenadines")]), e("option", {
                attrs: {
                    value: "Saipan"
                }
            }, [t._v("Saipan")]), e("option", {
                attrs: {
                    value: "Samoa"
                }
            }, [t._v("Samoa")]), e("option", {
                attrs: {
                    value: "Samoa American"
                }
            }, [t._v("Samoa American")]), e("option", {
                attrs: {
                    value: "San Marino"
                }
            }, [t._v("San Marino")]), e("option", {
                attrs: {
                    value: "Sao Tome & Principe"
                }
            }, [t._v("Sao Tome & Principe")]), e("option", {
                attrs: {
                    value: "Saudi Arabia"
                }
            }, [t._v("Saudi Arabia")]), e("option", {
                attrs: {
                    value: "Serbia"
                }
            }, [t._v("Serbia")]), e("option", {
                attrs: {
                    value: "Senegal"
                }
            }, [t._v("Senegal")]), e("option", {
                attrs: {
                    value: "Seychelles"
                }
            }, [t._v("Seychelles")]), e("option", {
                attrs: {
                    value: "Sierra Leone"
                }
            }, [t._v("Sierra Leone")]), e("option", {
                attrs: {
                    value: "Singapore"
                }
            }, [t._v("Singapore")]), e("option", {
                attrs: {
                    value: "Slovakia"
                }
            }, [t._v("Slovakia")]), e("option", {
                attrs: {
                    value: "Slovenia"
                }
            }, [t._v("Slovenia")]), e("option", {
                attrs: {
                    value: "Solomon Islands"
                }
            }, [t._v("Solomon Islands")]), e("option", {
                attrs: {
                    value: "Somalia"
                }
            }, [t._v("Somalia")]), e("option", {
                attrs: {
                    value: "South Africa"
                }
            }, [t._v("South Africa")]), e("option", {
                attrs: {
                    value: "Spain"
                }
            }, [t._v("Spain")]), e("option", {
                attrs: {
                    value: "Sri Lanka"
                }
            }, [t._v("Sri Lanka")]), e("option", {
                attrs: {
                    value: "Sudan"
                }
            }, [t._v("Sudan")]), e("option", {
                attrs: {
                    value: "Suriname"
                }
            }, [t._v("Suriname")]), e("option", {
                attrs: {
                    value: "Swaziland"
                }
            }, [t._v("Swaziland")]), e("option", {
                attrs: {
                    value: "Sweden"
                }
            }, [t._v("Sweden")]), e("option", {
                attrs: {
                    value: "Switzerland"
                }
            }, [t._v("Switzerland")]), e("option", {
                attrs: {
                    value: "Syria"
                }
            }, [t._v("Syria")]), e("option", {
                attrs: {
                    value: "Tahiti"
                }
            }, [t._v("Tahiti")]), e("option", {
                attrs: {
                    value: "Taiwan"
                }
            }, [t._v("Taiwan")]), e("option", {
                attrs: {
                    value: "Tajikistan"
                }
            }, [t._v("Tajikistan")]), e("option", {
                attrs: {
                    value: "Tanzania"
                }
            }, [t._v("Tanzania")]), e("option", {
                attrs: {
                    value: "Thailand"
                }
            }, [t._v("Thailand")]), e("option", {
                attrs: {
                    value: "Togo"
                }
            }, [t._v("Togo")]), e("option", {
                attrs: {
                    value: "Tokelau"
                }
            }, [t._v("Tokelau")]), e("option", {
                attrs: {
                    value: "Tonga"
                }
            }, [t._v("Tonga")]), e("option", {
                attrs: {
                    value: "Trinidad & Tobago"
                }
            }, [t._v("Trinidad & Tobago")]), e("option", {
                attrs: {
                    value: "Tunisia"
                }
            }, [t._v("Tunisia")]), e("option", {
                attrs: {
                    value: "Turkey"
                }
            }, [t._v("Turkey")]), e("option", {
                attrs: {
                    value: "Turkmenistan"
                }
            }, [t._v("Turkmenistan")]), e("option", {
                attrs: {
                    value: "Turks & Caicos Is"
                }
            }, [t._v("Turks & Caicos Is")]), e("option", {
                attrs: {
                    value: "Tuvalu"
                }
            }, [t._v("Tuvalu")]), e("option", {
                attrs: {
                    value: "Uganda"
                }
            }, [t._v("Uganda")]), e("option", {
                attrs: {
                    value: "United Kingdom"
                }
            }, [t._v("United Kingdom")]), e("option", {
                attrs: {
                    value: "Ukraine"
                }
            }, [t._v("Ukraine")]), e("option", {
                attrs: {
                    value: "United Arab Erimates"
                }
            }, [t._v("United Arab Emirates")]), e("option", {
                attrs: {
                    value: "United States of America"
                }
            }, [t._v("United States of America")]), e("option", {
                attrs: {
                    value: "Uruguay"
                }
            }, [t._v("Uruguay")]), e("option", {
                attrs: {
                    value: "Uzbekistan"
                }
            }, [t._v("Uzbekistan")]), e("option", {
                attrs: {
                    value: "Vanuatu"
                }
            }, [t._v("Vanuatu")]), e("option", {
                attrs: {
                    value: "Vatican City State"
                }
            }, [t._v("Vatican City State")]), e("option", {
                attrs: {
                    value: "Venezuela"
                }
            }, [t._v("Venezuela")]), e("option", {
                attrs: {
                    value: "Vietnam"
                }
            }, [t._v("Vietnam")]), e("option", {
                attrs: {
                    value: "Virgin Islands (Brit)"
                }
            }, [t._v("Virgin Islands (Brit)")]), e("option", {
                attrs: {
                    value: "Virgin Islands (USA)"
                }
            }, [t._v("Virgin Islands (USA)")]), e("option", {
                attrs: {
                    value: "Wake Island"
                }
            }, [t._v("Wake Island")]), e("option", {
                attrs: {
                    value: "Wallis & Futana Is"
                }
            }, [t._v("Wallis & Futana Is")]), e("option", {
                attrs: {
                    value: "Yemen"
                }
            }, [t._v("Yemen")]), e("option", {
                attrs: {
                    value: "Zaire"
                }
            }, [t._v("Zaire")]), e("option", {
                attrs: {
                    value: "Zambia"
                }
            }, [t._v("Zambia")]), e("option", {
                attrs: {
                    value: "Zimbabwe"
                }
            }, [t._v("Zimbabwe")])])]), "stage" === t.brand ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.state))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.state,
                    expression: "personal.state"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.state
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "state", e.target.value)
                    }
                }
            })]) : t._e(), "stage" === t.brand ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.postcode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.postcode,
                    expression: "personal.postcode"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: t.disableEditPersonalInfo
                },
                domProps: {
                    value: t.personal.postcode
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "postcode", e.target.value)
                    }
                }
            })]) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.phone,
                    expression: "personal.phone"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: ""
                },
                domProps: {
                    value: t.personal.phone
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "phone", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/phone-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e(), t.user.hide_phone_platform ? e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenPersonal.phone) + " 2")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.personal.phone2,
                    expression: "personal.phone2"
                }],
                staticClass: "form-control fs",
                attrs: {
                    disabled: "fxprotrading" === t.brand
                },
                domProps: {
                    value: t.personal.phone2
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.personal, "phone2", e.target.value)
                    }
                }
            }), t.aspinDesign ? e("img", {
                staticClass: "aspin-icon",
                attrs: {
                    src: t.staticBase + "aspin-design/phone-l.png",
                    alt: ""
                }
            }) : t._e()]) : t._e()]), t.aspinDesign ? e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("span", [t._v(t._s(t.tokens.fullScreenPersonal.created) + " " + t._s(t.userCreated))])])]), t.disableEditPersonalInfo ? t._e() : e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("button", {
                on: {
                    click: t.savePersonal
                }
            }, [t._v(t._s(t.tokens.fullScreenPersonal.saveChanges))])])])]) : t._e(), t.aspinDesign || t.disableEditPersonalInfo ? t._e() : e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("button", {
                on: {
                    click: t.savePersonal
                }
            }, [t._v(t._s(t.tokens.fullScreenPersonal.saveChanges))])])]), e("div", {
                staticClass: "col"
            })]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenPersonal.profilePhoto.toUpperCase()) + " ")])])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col avatar"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "circle",
                class: {
                    pointer: !t.user.avatar,
                    over: t.fileOver
                },
                on: {
                    drop: function(e) {
                        return e.preventDefault(),
                            t.addFile.apply(null, arguments)
                    },
                    dragover: [function(t) {
                        t.preventDefault()
                    }
                        , function(e) {
                            return t.over(!0)
                        }
                    ],
                    dragenter: function(e) {
                        return t.over(!0)
                    },
                    dragleave: function(e) {
                        return t.over(!1)
                    }
                }
            }, [e("img", {
                class: {
                    hide: t.user.avatar
                },
                attrs: {
                    src: "" + (t.aspinDesign ? t.staticBase + "aspin-design/avatar.png" : t.staticBase + "misc/avatar.png"),
                    alt: ""
                }
            }), e("img", {
                class: {
                    hide: !t.user.avatar
                },
                attrs: {
                    src: t.user.avatar ? t.apiBase + "/avatar/" + t.user.avatar : ""
                }
            })]), e("input", {
                staticClass: "avatar",
                attrs: {
                    type: "file"
                },
                on: {
                    change: t.documentSelected
                }
            })]), e("div", {
                staticClass: "form-row fs"
            }, [t._v(" " + t._s(t.tokens.fullScreenAvatar.dropFile) + " ")])]), e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "quote-block"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenAvatar.notAllowed) + ": ")])]), e("div", {
                staticClass: "form-row fs"
            }, [t._v(" - " + t._s(t.tokens.fullScreenAvatar.notAllowedLine1)), e("br"), t._v(" - " + t._s(t.tokens.fullScreenAvatar.notAllowedLine2)), e("br"), t._v(" - " + t._s(t.tokens.fullScreenAvatar.notAllowedLine3)), e("br"), t._v(" - " + t._s(t.tokens.fullScreenAvatar.notAllowedLine4)), e("br"), t._v(" - " + t._s(t.tokens.fullScreenAvatar.notAllowedLine5)), e("br")]), e("div", {
                staticClass: "form-row fs"
            }, [t._v(" " + t._s(t.tokens.fullScreenAvatar.requirements) + " ")])])])])])
        }
            , ax = []
            , ix = {
            name: "Personal",
            data() {
                return {
                    personal: {
                        firstname: "",
                        lastname: "",
                        address: "",
                        country: "",
                        state: "",
                        postcode: "",
                        phone: "",
                        phone2: "",
                        email: "",
                        email2: ""
                    },
                    apiBase: pt["ub"],
                    fileOver: !1,
                    brand: pt["e"],
                    aspinDesign: pt["b"],
                    hideEmail: pt["N"],
                    staticBase: pt["Cb"]
                }
            },
            methods: {
                savePersonal() {
                    if (this.disableEditPersonalInfo)
                        return void this.$store.commit(n["V"], "This feature is disabled");
                    let t = {
                        phone2: this.personal.phone2,
                        email2: this.personal.email2,
                        lastname: this.personal.lastname,
                        firstname: this.personal.firstname,
                        address: this.personal.address,
                        country: this.personal.country
                    };
                    "stage" === this.brand && (t.state = this.personal.state,
                        t.postcode = this.personal.postcode),
                        this.$store.dispatch(r["E"], t)
                },
                addFile(t) {
                    if (this.fileOver = !1,
                        !t.dataTransfer.files)
                        return;
                    let e = new FormData;
                    e.append("file", t.dataTransfer.files[0]),
                        this.$store.dispatch(r["f"], e)
                },
                documentSelected(t) {
                    let e = new FormData;
                    e.append("file", t.target.files[0]),
                        this.$store.dispatch(r["f"], e),
                        t.target.value = ""
                },
                over(t) {
                    this.fileOver = t
                },
                hideLastSymbols(t, e) {
                    let s = t.substring(0, t.length - e)
                        , a = "";
                    for (let i = 0; i < e; i++)
                        a += "*";
                    return s + a
                }
            },
            computed: {
                ...Object(o["b"])(["user", "tokens", "variables"]),
                userCreated() {
                    return Object(l["o"])(this.user.created && this.user.created.toString().length < 12 ? 1e3 * this.user.created : this.user.created)
                },
                disableEditPersonalInfo() {
                    return !!parseInt(this.variables.CFD_DISABLE_EDIT_USER_INFO)
                }
            },
            watch: {
                user: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            this.personal[e] = t[e],
                            -1 !== ["swissiam", "profitrisecg", "grandcapitalcg", "fulbrightsl"].indexOf(pt["e"]) && "phone" === e && t[e] && (this.personal[e] = this.hideLastSymbols(t[e], 3))
                    }
                }
            }
        }
            , ox = ix
            , nx = (s("b0ec"),
            y(ox, sx, ax, !1, null, "5dc23d98", null))
            , rx = nx.exports
            , lx = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                on: {
                    click: function(e) {
                        t.activeSelect = !1
                    }
                }
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.withdrawal,
                    expression: "withdrawal"
                }]
            }, [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.withdrawal.toUpperCase()) + " ")]), e("div", {
                staticClass: "row fs flex-start",
                class: {
                    hide: !t.user.enable_withdrawal
                }
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenWithdrawal.requestNewWithdrawal) + " ")])]), e("div", {
                staticClass: "col fs"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.amount))]), e("div", {
                staticClass: "input-box"
            }, [e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.amount,
                    expression: "amount"
                }],
                staticClass: "form-control fs",
                domProps: {
                    value: t.amount
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.amount = e.target.value)
                    }
                }
            }), t.withdrawalCurrencies.length ? e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.activeCurrency,
                    expression: "activeCurrency"
                }],
                staticClass: "currency form-control",
                on: {
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.activeCurrency = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.withdrawalCurrencies, (function(s, a) {
                    return e("option", {
                        key: a
                    }, [t._v(t._s(s))])
                }
            )), 0) : e("div", {
                staticClass: "currency"
            }, [t._v(" " + t._s(t.currencySign(t.activeAccount.currency)) + " ")])])]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.withdrawalDetails))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.method,
                    expression: "method"
                }],
                staticClass: "form-control fs",
                class: {
                    activeSelect: t.activeSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.activeSelect = !t.activeSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.method = e.target.multiple ? s : s[0]
                    }
                }
            }, t._l(t.getWithdrawalOptions, (function(s, a) {
                    return e("option", {
                        key: a,
                        domProps: {
                            value: a
                        }
                    }, [t._v(" " + t._s(t.bitcoinWithdrawalText && "bitcoin" === a ? t.tokens.fullScreenWithdrawal[t.bitcoinWithdrawalText] : t.tokens.fullScreenWithdrawal[a]) + " ")])
                }
            )), 0)])]), e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenWithdrawal.withdrawalDetails.toUpperCase()) + " ")])]), e("div", {
                staticClass: "col fs"
            }, [e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bitcoin" !== t.method && "ethereum" !== t.method && "usdt" !== t.method && "usdc" !== t.method && "matic" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.address))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.btc.wallet,
                    expression: "methods.btc.wallet"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.btc.wallet
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.btc, "wallet", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "zelle" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v("Phone Number or E-mail")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.zelle.contact,
                    expression: "methods.zelle.contact"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.zelle.contact
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.zelle, "contact", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "zelle" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v("First Name and Last Name Zelle")]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.zelle.name,
                    expression: "methods.zelle.name"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.zelle.name
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.zelle, "name", e.target.value)
                    }
                }
            })]), t.bankWithdrawalFields.includes("account") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankAccount))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.account,
                    expression: "methods.bank.account"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.account
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "account", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("holder") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankHolder))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.holder,
                    expression: "methods.bank.holder"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.holder
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "holder", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("iban") ? e("div", {
                staticClass: "form-row",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankIban))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.iban,
                    expression: "methods.bank.iban"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.iban
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "iban", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("swift") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankSwift))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.swift,
                    expression: "methods.bank.swift"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.swift
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "swift", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("recipientAddress") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.recipientAddress))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.recipientAddress,
                    expression: "methods.bank.recipientAddress"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.recipientAddress
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "recipientAddress", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("routingNumber") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.routingNumber))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.routingNumber,
                    expression: "methods.bank.routingNumber"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.routingNumber
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "routingNumber", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("bankBeneficiary") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankBeneficiary))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.bankBeneficiary,
                    expression: "methods.bank.bankBeneficiary"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.bankBeneficiary
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "bankBeneficiary", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("bankAddress") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankAddress))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.bankAddress,
                    expression: "methods.bank.bankAddress"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.bankAddress
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "bankAddress", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("bankCode") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.bankCode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.bankCode,
                    expression: "methods.bank.bankCode"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.bankCode
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "bankCode", e.target.value)
                    }
                }
            })]) : t._e(), t.bankWithdrawalFields.includes("desc") ? e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "bank" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.desc))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.bank.desc,
                    expression: "methods.bank.desc"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.bank.desc
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.bank, "desc", e.target.value)
                    }
                }
            })]) : t._e(), e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "card" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.cardNumber))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.card.number,
                    expression: "methods.card.number"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.card.number
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.card, "number", e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row fs",
                class: {
                    hide: "card" !== t.method
                }
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.cardHolder))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.methods.card.holder,
                    expression: "methods.card.holder"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "text"
                },
                domProps: {
                    value: t.methods.card.holder
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.methods.card, "holder", e.target.value)
                    }
                }
            })])])]), e("div", {
                staticClass: "form-row pad fs-bottom",
                class: {
                    hide: !t.user.enable_withdrawal
                }
            }, [e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.requestWithdrawal
                }
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.requestWithdrawal) + " ")])]), e("div", {
                staticClass: "table-cont"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenWithdrawal.withdrawalRequests) + " ")])]), e("table", {
                staticClass: "cabinet fs"
            }, [e("thead", [e("tr", [e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.time.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.amount.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.currency.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.info.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenWithdrawal.status.toUpperCase()))])])]), e("tbody", t._l(t.withdrawals.slice(0, 10), (function(s) {
                    return e("tr", {
                        key: s.id
                    }, [e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(new Date(1e3 * s.time_created).toLocaleString()))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(t.currencySign(s.currency) + Math.abs(s.amount).toFixed(t.activeAccount.precision)) + " ")]), e("td", {
                        attrs: {
                            colspan: "fs"
                        }
                    }, [t._v(t._s(s.currency))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(s.comment))]), e("td", {
                        staticClass: "fs",
                        class: t.tokens.statuses[s.status]
                    }, [t._v(" " + t._s(t.tokens.statuses[s.status]) + " "), 0 !== s.status || t.hideWithdrawal ? t._e() : e("i", {
                        staticClass: "material-icons cancel-withdrawal",
                        attrs: {
                            title: "Cancel withdrawal request"
                        },
                        on: {
                            click: function(e) {
                                return t.confirmCancelWithdrawal(s.id)
                            }
                        }
                    }, [t._v("cancel")])])])
                }
            )), 0)])])]), t.withdrawal ? t._e() : e("div", {
                staticClass: "pad"
            }, [t._m(0)])])
        }
            , cx = [function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "pad-item"
            }, [e("h2", [t._v(" Please contact your account manager for withdrawal details ")])])
        }
        ]
            , dx = {
            name: "Withdrawal",
            data() {
                return {
                    amount: "",
                    hideWithdrawal: pt["h"],
                    method: pt["Sb"].bank ? "bank" : "bitcoin",
                    activeSelect: !1,
                    activeCurrency: "",
                    aspinDesign: pt["b"],
                    bankWithdrawalFields: pt["c"],
                    methods: {
                        btc: {
                            wallet: ""
                        },
                        bank: {
                            account: "",
                            holder: "",
                            iban: "",
                            swift: "",
                            recipientAddress: "",
                            routingNumber: "",
                            bankBeneficiary: "",
                            bankAddress: "",
                            bankCode: "",
                            desc: ""
                        },
                        card: {
                            number: "",
                            holder: ""
                        },
                        zelle: {
                            contact: "",
                            name: ""
                        }
                    },
                    withdrawal: !0,
                    withdrawalOptions: pt["Sb"],
                    withdrawalCurrencies: pt["Rb"],
                    bitcoinWithdrawalText: pt["d"]
                }
            },
            methods: {
                confirmCancelWithdrawal(t) {
                    this.$store.commit(n["R"], t),
                        this.$store.commit(n["F"], {
                            withdrawalCancel: !0
                        })
                },
                requestWithdrawal() {
                    let t = String(this.amount);
                    t = t.includes(",") ? t.replace(/,/, ".") : t,
                        t = parseFloat(t);
                    for (let s in this.withdrawals)
                        if (0 === this.withdrawals[s].status)
                            return void this.$store.commit(n["V"], "LOCAL_ONE_PENDING_WITHDRAWAL");
                    if (isNaN(parseFloat(t)))
                        return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"]);
                    if ("bitcoin" === this.method) {
                        if (t * this.symbols["BTCUSD"].quote.bid < pt["fb"])
                            return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"])
                    } else if (("bank" === this.method || "card" === this.method) && t < pt["fb"])
                        return void this.$store.commit(n["V"], "Minimum withdrawal amount is $" + pt["fb"]);
                    let e = "";
                    switch (this.method) {
                        case "bitcoin":
                            e = this.methods.btc.wallet;
                            break;
                        case "bank":
                            e = `Account: ${this.methods.bank.account}\nAccount holder: ${this.methods.bank.holder}${this.methods.bank.iban ? "\nIBAN: " + this.methods.bank.iban : ""}${this.methods.bank.swift ? "\nSWIFT: " + this.methods.bank.swift : ""}${this.methods.bank.recipientAddress ? "\nRecipient Address: " + this.methods.bank.recipientAddress : ""}${this.methods.bank.routingNumber ? "\nRouting Number: " + this.methods.bank.routingNumber : ""}${this.methods.bank.bankBeneficiary ? "\nBank of Beneficiary Name: " + this.methods.bank.bankBeneficiary : ""}${this.methods.bank.bankAddress ? "\nBank Address: " + this.methods.bank.bankAddress : ""}${this.methods.bank.bankCode ? "\nBank code (BSB): " + this.methods.bank.bankCode : ""}${this.methods.bank.desc ? "\nDescription: " + this.methods.bank.desc : ""}`;
                            break;
                        case "card":
                            e = `Card: ${this.methods.card.number}\nCard holder: ${this.methods.card.holder}`;
                            break;
                        case "ethereum":
                            e = "ETH: " + this.methods.btc.wallet;
                            break;
                        case "usdt":
                            e = "USDT: " + this.methods.btc.wallet;
                            break;
                        case "USDC":
                            e = "USDC: " + this.methods.btc.wallet;
                            break;
                        case "matic":
                            e = "MATIC: " + this.methods.btc.wallet;
                            break;
                        case "zelle":
                            e = `Phone/Eamil:${this.methods.zelle.contact}\nFull Name Zelle: ${this.methods.zelle.name}`;
                            break
                    }
                    this.$store.dispatch(r["X"], {
                        wallet: e,
                        amount: t,
                        account_id: this.activeAccount.id,
                        product: this.activeAccount.product,
                        currency: this.activeAccount.currency
                    }),
                        this.methods.btc.wallet = "",
                        this.methods.bank.account = "",
                        this.methods.bank.holder = "",
                        this.methods.bank.iban = "",
                        this.methods.bank.swift = "",
                        this.methods.bank.recipientAddress = "",
                        this.methods.bank.routingNumber = "",
                        this.methods.bank.bankBeneficiary = "",
                        this.methods.bank.bankAddress = "",
                        this.methods.bank.bankCode = "",
                        this.methods.bank.desc = "",
                        this.methods.card.number = "",
                        this.methods.card.holder = "",
                        this.methods.zelle.name = "",
                        this.methods.zelle.contact = ""
                },
                setWithdrawalMethod(t) {
                    this.$set(this, "withdrawal", !0),
                        Object.keys(t).length ? this.$set(this, "method", Object.values(t)[0]) : this.$set(this, "withdrawal", !1)
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["withdrawals", "activeAccount", "realAccount", "symbols", "user", "tokens", "withdrawalList"]),
                getWithdrawalOptions() {
                    const t = Object.values(this.withdrawalList).reduce( (t, e) => {
                            const s = e.name;
                            return this.withdrawalOptions[s] && (t[s] = this.withdrawalOptions[s]),
                                t
                        }
                        , {});
                    return this.setWithdrawalMethod(t),
                        t
                }
            },
            activeAccount: {
                handler() {
                    void 0 !== this.activeAccount && (this.withdrawalCurrencies = [],
                        this.withdrawalCurrencies = pt["Rb"],
                    this.withdrawalCurrencies.length && this.withdrawalCurrencies.push(this.activeAccount.currency),
                        this.activeCurrency = this.withdrawalCurrencies[1] || this.activeAccount.currency)
                }
            }
        }
            , ux = dx
            , mx = (s("164c"),
            y(ux, lx, cx, !1, null, "47b6afaa", null))
            , px = mx.exports
            , hx = function() {
            var t = this
                , e = t._self._c;
            return e("div", [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.verification.toUpperCase()) + " ")]), t.aspinDesign ? e("div", {
                staticClass: "row form-row"
            }, t._l(t.documentsData, (function(s, a) {
                    return e("div", {
                        key: "docData" + a,
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "document",
                        class: {
                            over: s.over && -1 === [0, 1].indexOf(s.status),
                            [s.cssClass]: !!s.cssClass
                        },
                        attrs: {
                            title: s.title
                        },
                        on: {
                            drop: function(e) {
                                return e.preventDefault(),
                                    (e => t.addFile(s.type, e)).apply(null, arguments)
                            },
                            dragover: [function(t) {
                                t.preventDefault()
                            }
                                , function(e) {
                                    return t.over(s.type, !0)
                                }
                            ],
                            dragenter: function(e) {
                                return t.over(s.type, !0)
                            },
                            dragleave: function(e) {
                                return t.over(s.type, !1)
                            }
                        }
                    }, [e("div", {
                        staticClass: "document-inner"
                    }, [e("div", {
                        staticClass: "img-inner"
                    }, [e("img", {
                        staticClass: "icon",
                        class: s.cssClass,
                        attrs: {
                            src: t.staticBase + `aspin-design/verification/${t.getVerificationState(s)}.svg`,
                            alt: ""
                        }
                    }), 0 !== s.status && 1 !== s.status && t.aspinDesign ? e("img", {
                        staticClass: "plus",
                        attrs: {
                            src: t.staticBase + "aspin-design/verification/plus.svg",
                            alt: ""
                        }
                    }) : t._e(), 1 === s.status && t.aspinDesign ? e("img", {
                        staticClass: "confirmed",
                        attrs: {
                            src: t.staticBase + "aspin-design/verification/confirmed.svg",
                            alt: ""
                        }
                    }) : t._e(), 0 === s.status && t.aspinDesign ? e("img", {
                        staticClass: "review",
                        attrs: {
                            src: t.staticBase + "aspin-design/verification/review.svg",
                            alt: ""
                        }
                    }) : t._e()]), e("div", {
                        staticClass: "docname",
                        class: s.cssClass
                    }, [t._v(t._s(s.text))])]), e("div", {
                        staticClass: "tip",
                        class: {
                            hide: -1 !== [0, 1].indexOf(s.status)
                        }
                    }, [t._v(" " + t._s(t.tokens.fullScreenVerification.dragAndDrop) + " ")]), e("input", {
                        class: {
                            hide: -1 === [-1, 2].indexOf(s.status)
                        },
                        attrs: {
                            type: "file",
                            title: s.title
                        },
                        on: {
                            change: function(e) {
                                return t.documentSelected(e, s.type)
                            }
                        }
                    })])])
                }
            )), 0) : e("div", {
                staticClass: "row form-row"
            }, t._l(t.documentsData, (function(s, a) {
                    return e("div", {
                        key: "docData" + a,
                        staticClass: "col"
                    }, [e("div", {
                        staticClass: "document",
                        class: {
                            over: s.over && -1 === [0, 1].indexOf(s.status)
                        },
                        attrs: {
                            title: s.title
                        },
                        on: {
                            drop: function(e) {
                                return e.preventDefault(),
                                    (e => t.addFile(s.type, e)).apply(null, arguments)
                            },
                            dragover: [function(t) {
                                t.preventDefault()
                            }
                                , function(e) {
                                    return t.over(s.type, !0)
                                }
                            ],
                            dragenter: function(e) {
                                return t.over(s.type, !0)
                            },
                            dragleave: function(e) {
                                return t.over(s.type, !1)
                            }
                        }
                    }, [e("div", {
                        staticClass: "document-inner"
                    }, [e("div", {
                        staticClass: "img-inner"
                    }, [e("img", {
                        staticClass: "icon",
                        class: s.cssClass,
                        attrs: {
                            src: t.staticBase + `misc/${s.icon}.svg`,
                            alt: ""
                        }
                    })]), e("div", {
                        staticClass: "docname",
                        class: s.cssClass
                    }, [t._v(t._s(s.text))])]), e("div", {
                        staticClass: "tip",
                        class: {
                            hide: -1 !== [0, 1].indexOf(s.status)
                        }
                    }, [t._v(" " + t._s(t.tokens.fullScreenVerification.dragAndDrop) + " ")]), e("input", {
                        class: {
                            hide: -1 === [-1, 2].indexOf(s.status)
                        },
                        attrs: {
                            type: "file",
                            title: s.title
                        },
                        on: {
                            change: function(e) {
                                return t.documentSelected(e, s.type)
                            }
                        }
                    })])])
                }
            )), 0), t.disableDocUploadedLine ? t._e() : e("div", {
                staticClass: "progress-bar"
            }, [e("div", {
                staticClass: "empty"
            }, [e("div", {
                staticClass: "filled",
                style: {
                    width: t.searchSuccessfully / t.documentsData.length * 100 + "%"
                }
            })]), e("p", [t._v(t._s(t.progressBarState))])]), t.questions.length > 0 && !t.disableQuestions ? e("div", {
                staticClass: "questions"
            }, [e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenVerification.questionnaire.toUpperCase()))])])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "questions-item"
            }, t._l(t.questions, (function(s) {
                    return e("div", {
                        key: s.id
                    }, [e("div", {
                        staticClass: "form-row fs"
                    }, [e("label", {
                        staticClass: "fs"
                    }, [t._v(t._s(s.question))]), e("input", {
                        directives: [{
                            name: "model",
                            rawName: "v-model",
                            value: s.answer,
                            expression: "question.answer"
                        }],
                        staticClass: "form-control fs",
                        attrs: {
                            type: "text"
                        },
                        domProps: {
                            value: s.answer
                        },
                        on: {
                            input: function(e) {
                                e.target.composing || t.$set(s, "answer", e.target.value)
                            }
                        }
                    })])])
                }
            )), 0)]), e("div", {
                staticClass: "form-row fs"
            }, [e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.sendAnswers
                }
            }, [t._v(t._s(t.tokens.fullScreenVerification.sendAnswers) + " ")])])]) : t._e(), e("div", {
                staticClass: "form-row fs",
                staticStyle: {
                    "margin-top": "20px"
                }
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenVerification.documentsList))])]), e("div", {
                staticClass: "table-cont"
            }, [e("table", {
                staticClass: "cabinet fs"
            }, [e("thead", [e("tr", [e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenVerification.document.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenVerification.timeUploaded.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenVerification.timeProcessed.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenVerification.status.toUpperCase()))])])]), e("tbody", t._l(t.documents, (function(s) {
                    return e("tr", {
                        key: s.id,
                        staticClass: "fs"
                    }, [e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(t.tokens.fullScreenVerification[t.newVerificationText ? "types2" : "types"][s.type]))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(t._s(new Date(1e3 * s.time_created).toLocaleString()))]), e("td", {
                        staticClass: "fs"
                    }, [t._v(" " + t._s(s.time_processed ? new Date(1e3 * s.time_processed).toLocaleString() : "-") + " ")]), e("td", {
                        staticClass: "fs",
                        class: t.tokens.statuses[s.status]
                    }, [t._v(t._s(t.tokens.statuses[s.status]))])])
                }
            )), 0)])])])
        }
            , vx = []
            , fx = {
            name: "Verification",
            data() {
                return {
                    kycDocuments: pt["V"],
                    kycDocumentsIcons: pt["W"],
                    aspinDesign: pt["b"],
                    newVerificationText: pt["lb"],
                    disableDocUploadedLine: pt["M"],
                    staticBase: pt["Cb"],
                    disableQuestions: pt["I"]
                }
            },
            methods: {
                addFile(t, e) {
                    if (this.documentsData[t].over = !1,
                    !e.dataTransfer.files || -1 !== [0, 1].indexOf(this.documentsData[t].status))
                        return;
                    let s = new FormData;
                    s.append("file", e.dataTransfer.files[0]),
                        s.append("data", JSON.stringify({
                            type: t
                        })),
                        this.$store.dispatch(r["q"], s)
                },
                over(t, e) {
                    this.documentsData[t].over = e
                },
                documentSelected(t, e) {
                    let s = new FormData;
                    s.append("file", t.target.files[0]),
                        s.append("data", JSON.stringify({
                            type: e
                        })),
                        this.$store.dispatch(r["q"], s),
                        t.target.value = ""
                },
                sendAnswers() {
                    let t = [];
                    for (let e in this.questions)
                        t.push({
                            question_id: this.questions[e].id,
                            answer: this.questions[e].answer
                        });
                    qs["a"].post("/kyc/questions", {
                        answers: t
                    }).then( () => {
                            this.$store.commit(n["U"], "Answers have been saved")
                        }
                    )
                },
                getVerificationState(t) {
                    return t.icon
                }
            },
            computed: {
                ...Object(o["b"])(["documents", "tokens", "questions"]),
                documentsData: function() {
                    let t = []
                        , e = this.documents
                        , s = this.kycDocumentsIcons
                        , a = !1
                        , i = ""
                        , o = ""
                        , n = ""
                        , r = ""
                        , l = "";
                    switch (pt["e"]) {
                        case "corlexcorp":
                        case "crypwa":
                            s = ["prof", "home", "cardFront", "file", "selfile"];
                            break;
                        case "fingarante":
                        case "crypfund":
                        case "dev":
                            s = ["prof", "home", "file", "selfile"];
                            break
                    }
                    return this.kycDocuments.forEach( (c, d) => {
                            let u = this.tokens.fullScreenVerification[this.newVerificationText ? "types2" : "types"][c]
                                , m = e.filter(t => t.type === c);
                            m.sort( (t, e) => t.id - e.id);
                            let p = m[m.length - 1];
                            switch (o = p ? p.status : -1,
                                i = s[d],
                                l = c,
                                o) {
                                case -1:
                                    n = "",
                                        r = this.tokens.fullScreenVerification.upload.toUpperCase() + " " + u.toUpperCase();
                                    break;
                                case 0:
                                    n = "wait-fs",
                                        r = u.toUpperCase() + " - " + this.tokens.fullScreenVerification.isUnderReview.toUpperCase();
                                    break;
                                case 1:
                                    n = "green-fs",
                                        r = u.toUpperCase() + " - " + this.tokens.fullScreenVerification.isConfirmed.toUpperCase();
                                    break;
                                case 2:
                                    n = "red-fs",
                                        r = u.toUpperCase() + " - " + this.tokens.fullScreenVerification.uploadAnotherDocument.toUpperCase();
                                    break
                            }
                            let h = {
                                icon: i,
                                over: a,
                                status: o,
                                cssClass: n,
                                text: r,
                                type: l
                            };
                            t.push(h)
                        }
                    ),
                        t
                },
                searchSuccessfully() {
                    let t = []
                        , e = this.documents
                        , s = !1
                        , a = ""
                        , i = "";
                    this.kycDocuments.forEach( (o, n, r) => {
                            let l = e.filter(t => t.type === r[n]);
                            l.sort( (t, e) => t.id - e.id);
                            let c = l[l.length - 1];
                            i = c ? c.status : -1;
                            let d = {
                                icon: a,
                                over: s,
                                status: i
                            };
                            t.push(d)
                        }
                    );
                    let o = 0;
                    return t.forEach(t => {
                            1 === t.status && o++
                        }
                    ),
                        o
                },
                progressBarState() {
                    return `${this.searchSuccessfully} ${this.tokens.fullScreenVerification.progressBarOf} ${this.documentsData.length} ${this.tokens.fullScreenVerification.progressBarText}`
                }
            }
        }
            , gx = fx
            , bx = (s("1c34"),
            y(gx, hx, vx, !1, null, "8e31d98c", null))
            , yx = bx.exports
            , _x = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.TrFromSelect = !1,
                            t.TrToSelect = !1
                    }
                }
            }, [e("div", {
                staticClass: "fullscreen-page-title",
                class: {
                    hide: t.hideTransfer
                }
            }, [t._v(" " + t._s(t.tokens.fullScreen.accounts.toUpperCase()) + " ")]), e("div", {
                staticClass: "form-title",
                class: {
                    hide: t.hideTransfer
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenAccounts.manageAccounts.toUpperCase()) + " ")]), e("div", {
                staticClass: "row",
                class: {
                    hide: t.hideTransfer
                }
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.transferFrom))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.transferModel.from,
                    expression: "transferModel.from"
                }],
                staticClass: "form-control fs",
                class: {
                    activeSelect: t.TrFromSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.TrFromSelect = !t.TrFromSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.$set(t.transferModel, "from", e.target.multiple ? s : s[0])
                    }
                }
            }, [t._l(t.accounts, (function(s) {
                    return e("option", {
                        key: "from-cfd-" + s.id,
                        domProps: {
                            value: s.product + "-" + s.id
                        }
                    }, [t._v(t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1) + ")"))])
                }
            )), t._l(t.savingsAccounts, (function(s) {
                    return e("option", {
                        key: "from-savings-" + s.id,
                        domProps: {
                            value: s.product + "-" + s.id
                        }
                    }, [t._v(t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1) + ")"))])
                }
            ))], 2)]), e("div", {
                staticClass: "form-row"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.amount))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.transfer.amount,
                    expression: "transfer.amount"
                }],
                staticClass: "form-control fs",
                attrs: {
                    type: "number"
                },
                domProps: {
                    value: t.transfer.amount
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.transfer, "amount", e.target.value)
                    }
                }
            })])]), e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.transferTo))]), e("select", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.transferModel.to,
                    expression: "transferModel.to"
                }],
                staticClass: "form-control fs",
                class: {
                    activeSelect: t.TrToSelect
                },
                on: {
                    click: function(e) {
                        e.stopPropagation(),
                            t.TrToSelect = !t.TrToSelect
                    },
                    change: function(e) {
                        var s = Array.prototype.filter.call(e.target.options, (function(t) {
                                return t.selected
                            }
                        )).map((function(t) {
                                var e = "_value"in t ? t._value : t.value;
                                return e
                            }
                        ));
                        t.$set(t.transferModel, "to", e.target.multiple ? s : s[0])
                    }
                }
            }, [t._l(t.accounts, (function(s) {
                    return e("option", {
                        key: "to-cfd-" + s.id,
                        class: {
                            hide: t.transfer.from.id === s.id && t.transfer.from.product === s.product
                        },
                        domProps: {
                            value: s.product + "-" + s.id
                        }
                    }, [t._v(t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1) + ")"))])
                }
            )), t._l(t.savingsAccounts, (function(s) {
                    return e("option", {
                        key: "to-savings-" + s.id,
                        class: {
                            hide: t.transfer.from.id === s.id && t.transfer.from.product === s.product
                        },
                        domProps: {
                            value: s.product + "-" + s.id
                        }
                    }, [t._v(t._s(s.product.toUpperCase() + " " + s.id + " (" + t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1) + ")"))])
                }
            ))], 2)]), e("div", {
                staticClass: "form-row"
            }, [e("label", {
                staticStyle: {
                    height: "14px"
                }
            }, [t._v(" ")]), e("button", {
                staticClass: "fs-normal",
                attrs: {
                    disabled: t.transferDisable
                },
                on: {
                    click: t.makeTransfer
                }
            }, [t._v(t._s(t.tokens.fullScreenAccounts.makeTransfer))])])])]), e("div", {
                staticClass: "form-title"
            }, [t._v(" " + t._s(t.tokens.fullScreenAccounts.yourAccounts) + " ")]), e("div", {
                staticClass: "table-cont"
            }, [e("table", {
                staticClass: "cabinet fs"
            }, [e("thead", [e("tr", [e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.account.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.currency.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.balance.toUpperCase()))]), e("th", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenAccounts.credit.toUpperCase()))]), e("th", {
                staticClass: "fs"
            })])]), e("tbody", [t._l(t.accounts, (function(s) {
                    return e("tr", {
                        key: s.id,
                        staticClass: "fs"
                    }, [e("td", [t._v(t._s(s.product.toUpperCase() + " " + s.id))]), e("td", [t._v(t._s(s.currency))]), e("td", [t._v(t._s(t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1)))]), e("td", [t._v(t._s(t.currencySign(s.currency) + s.credit.toFixed(s.precision ? s.precision : 1)))]), e("td", [e("button", {
                        staticClass: "fs-small",
                        class: {
                            hide: t.activeAccount.id === s.id
                        },
                        on: {
                            click: function(e) {
                                return t.makeActive(s.id)
                            }
                        }
                    }, [t._v(t._s(t.tokens.fullScreenAccounts.makeActive))]), e("span", {
                        staticClass: "active",
                        class: {
                            hide: t.activeAccount.id !== s.id
                        }
                    }, [t._v(t._s(t.tokens.fullScreenAccounts.active))])])])
                }
            )), t._l(t.savingsAccounts, (function(s) {
                    return e("tr", {
                        key: s.product + "-" + s.id
                    }, [e("td", [t._v(t._s(s.product.toUpperCase() + " " + s.id))]), e("td", [t._v(t._s(s.currency))]), e("td", [t._v(t._s(t.currencySign(s.currency) + s.balance.toFixed(s.precision ? s.precision : 1)))]), e("td", [t._v(" - ")]), e("td")])
                }
            ))], 2)])])])
        }
            , Cx = []
            , wx = {
            name: "Accounts",
            data() {
                return {
                    TrFromSelect: !1,
                    TrToSelect: !1,
                    transfer: {
                        from: {
                            product: "cfd",
                            id: 0
                        },
                        to: {
                            product: "cfd",
                            id: 0
                        },
                        amount: ""
                    },
                    transferModel: {
                        from: "",
                        to: ""
                    },
                    hideTransfer: !0,
                    transferDisable: !1
                }
            },
            methods: {
                makeActive(t) {
                    l["i"].setItem("activeAccount", t),
                        this.$store.commit(n["b"], t)
                },
                makeTransfer() {
                    this.transfer.amount ? Object.keys(this.activeAccount.orders).length ? this.$store.commit(n["V"], "First need to close open orders") : (this.transferDisable = !0,
                        this.accounts[this.transfer.from.id].balance - this.transfer.amount > 0 ? this.$store.dispatch(r["T"], {
                            from: {
                                product: this.transfer.from.product,
                                id: this.transfer.from.id
                            },
                            to: {
                                product: this.transfer.to.product,
                                id: this.transfer.to.id
                            },
                            amount: this.transfer.amount
                        }) : this.$store.commit(n["V"], "Not enough money in the balance"),
                        setTimeout( () => {
                                this.transferDisable = !1
                            }
                            , 2e3)) : this.$store.commit(n["V"], "Incorrect amount")
                },
                currencySign: l["e"]
            },
            computed: {
                ...Object(o["b"])(["accounts", "activeAccount", "savingsAccounts", "tokens"])
            },
            watch: {
                accounts: {
                    deep: !0,
                    handler(t) {
                        if (!this.transferModel.from || !this.transferModel.to) {
                            this.hideTransfer = !0;
                            for (let e in t)
                                if (this.transferModel.from) {
                                    if (!this.transferModel.to) {
                                        this.transfer.to.id = t[e].id,
                                            this.transfer.to.product = t[e].product,
                                            this.transferModel.to = t[e].product + "-" + t[e].id,
                                        this.hideTransfer && (this.hideTransfer = !1);
                                        break
                                    }
                                } else
                                    this.transfer.from.id = t[e].id,
                                        this.transfer.from.product = t[e].product,
                                        this.transferModel.from = t[e].product + "-" + t[e].id
                        }
                    }
                },
                savingsAccounts: {
                    deep: !0,
                    handler(t) {
                        if (!this.transferModel.from || !this.transferModel.to) {
                            this.hideTransfer = !0;
                            for (let e in t)
                                if (this.transferModel.from) {
                                    if (!this.transferModel.to) {
                                        this.transfer.to.id = t[e].id,
                                            this.transfer.to.product = t[e].product,
                                            this.transferModel.to = t[e].product + "-" + t[e].id,
                                        this.hideTransfer && (this.hideTransfer = !1);
                                        break
                                    }
                                } else
                                    this.transfer.from.id = t[e].id,
                                        this.transfer.from.product = t[e].product,
                                        this.transferModel.from = t[e].product + "-" + t[e].id
                        }
                    }
                },
                transferModel: {
                    deep: !0,
                    handler(t) {
                        if (t.from === t.to) {
                            let e = {
                                id: 0,
                                product: "cfd"
                            };
                            for (let s in this.accounts)
                                if (this.accounts[s].id != t.from.id && this.accounts[s].product != t.from.product) {
                                    e = this.accounts[s];
                                    break
                                }
                            if (!e.id)
                                for (let s in this.savingsAccounts)
                                    if (this.savingsAccounts[s].id != t.from.id && this.savingsAccounts[s].product != t.from.product) {
                                        e = this.savingsAccounts[s];
                                        break
                                    }
                            this.transfer.to.id = e.id,
                                this.transfer.to.product = e.product,
                                this.transferModel.to = e.product + "-" + e.id
                        }
                        let e = {
                            from: t.from.split("-"),
                            to: t.to.split("-")
                        };
                        this.transfer.from.product = e.from[0],
                            this.transfer.from.id = e.from[1],
                            this.transfer.to.product = e.to[0],
                            this.transfer.to.id = e.to[1]
                    }
                }
            }
        }
            , kx = wx
            , Sx = (s("96ed"),
            y(kx, _x, Cx, !1, null, "a7d34482", null))
            , xx = Sx.exports
            , Mx = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "support",
                class: {
                    over: t.ddOver,
                    "new-chat": t.newChat
                },
                on: {
                    drop: function(e) {
                        return e.preventDefault(),
                            (e => t.addFile(e)).apply(null, arguments)
                    },
                    dragover: [function(t) {
                        t.preventDefault()
                    }
                        , function(e) {
                            return t.over(!0)
                        }
                    ],
                    dragenter: function(e) {
                        return t.over(!0)
                    },
                    dragleave: function(e) {
                        return t.over(!1)
                    },
                    keyup: function(e) {
                        if (!e.type.indexOf("key") && t._k(e.keyCode, "esc", 27, e.key, ["Esc", "Escape"]))
                            return null;
                        t.toggler = !1
                    }
                }
            }, [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.liveChat.toUpperCase()) + " ")]), e("div", {
                staticClass: "messages__inner"
            }, [e("div", {
                staticClass: "messages__content"
            }, [e("div", {
                staticClass: "messages",
                attrs: {
                    id: "support-messages"
                }
            }, t._l(t.supportMessages, (function(s) {
                    return e("div", {
                        key: s.id,
                        staticClass: "message",
                        class: "from-" + (s.manager_id ? "manager" : "client")
                    }, [e("div", {
                        staticClass: "text"
                    }, [e("div", {
                        staticClass: "text-content"
                    }, [e("div", {
                        domProps: {
                            innerHTML: t._s(t.convertText(s.text))
                        }
                    }), [".jpg", ".png", "jpeg"].indexOf(s.file.slice(-4)) > -1 ? e("div", {
                        staticClass: "pic",
                        on: {
                            click: function(e) {
                                return t.openImg(t.restEndpoint + "/kyc/document/" + s.file)
                            }
                        }
                    }, [e("img", {
                        attrs: {
                            src: t.restEndpoint + "/kyc/document/" + s.file
                        }
                    })]) : t._e(), ".pdf" === s.file.slice(-4) ? e("a", {
                        staticClass: "pdf",
                        attrs: {
                            href: t.restEndpoint + "/kyc/document/" + s.file,
                            target: "_blank"
                        }
                    }, [e("i", {
                        staticClass: "material-icons"
                    }, [t._v("attach_file")]), t._v(" PDF attachment ")]) : t._e(), e("div", {
                        staticClass: "footer"
                    }, [e("div", {
                        staticClass: "time"
                    }, [t._v(t._s(new Date(1e3 * s.time_created).toLocaleString()))]), "" !== s.text ? e("i", {
                        staticClass: "material-icons copy",
                        on: {
                            click: function(e) {
                                return t.copy(s.text)
                            }
                        }
                    }, [t._v("content_copy")]) : t._e()])]), e("div", {
                        staticClass: "avatar"
                    }, [e("img", {
                        attrs: {
                            src: s.manager_id ? t.staticBase + "misc/avatar.png" : t.user.avatar ? t.restEndpoint + "/avatar/" + t.user.avatar : t.staticBase + "misc/avatar.png"
                        }
                    })])])])
                }
            )), 0)]), e("div", {
                staticClass: "send",
                class: {
                    fileShow: t.previewShow
                }
            }, [e("div", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: t.previewShow,
                    expression: "previewShow"
                }],
                staticClass: "preview"
            }, [e("img", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ["image/jpeg", "image/png"].indexOf(this.typeFile) > -1,
                    expression: "['image/jpeg', 'image/png'].indexOf(this.typeFile) > -1"
                }],
                attrs: {
                    src: t.preview,
                    alt: ""
                }
            }), e("span", {
                directives: [{
                    name: "show",
                    rawName: "v-show",
                    value: ["application/pdf"].indexOf(this.typeFile) > -1,
                    expression: "['application/pdf'].indexOf(this.typeFile) > -1"
                }]
            }, [t._v(".PDF")])]), t._m(0), e("textarea", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.message,
                    expression: "message"
                }],
                staticClass: "form-control fs",
                attrs: {
                    maxlength: "524288",
                    placeholder: "" + t.tokens.fullScreenSupport.sendMessage,
                    id: "support-message"
                },
                domProps: {
                    value: t.message
                },
                on: {
                    keyup: function(e) {
                        return !e.type.indexOf("key") && t._k(e.keyCode, "enter", 13, e.key, "Enter") ? null : t.sendMessage.apply(null, arguments)
                    },
                    input: function(e) {
                        e.target.composing || (t.message = e.target.value)
                    }
                }
            }), t._v(" "), e("div", [e("input", {
                ref: "file",
                attrs: {
                    type: "file",
                    id: "file"
                },
                on: {
                    change: function(e) {
                        return t.loadPreview()
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    click: t.sendMessage
                }
            }, [t._v("send")])])])]), e("FsLightbox", {
                attrs: {
                    toggler: t.toggler,
                    sources: t.path ? t.path : []
                }
            })], 1)
        }
            , Ax = [function() {
            var t = this
                , e = t._self._c;
            return e("label", {
                staticClass: "attach",
                attrs: {
                    for: "file"
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("attach_file")])])
        }
        ]
            , Dx = {
            name: "Support",
            components: {
                FsLightbox: F_.a
            },
            mounted() {
                setInterval( () => {
                        "support" === this.modalFullscreen.page && this.$store.dispatch(r["R"])
                    }
                    , 3e3),
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
            },
            data() {
                return {
                    restEndpoint: pt["ub"],
                    message: "",
                    ddOver: !1,
                    toggler: !1,
                    path: [],
                    preview: "",
                    previewShow: !1,
                    typeFile: "",
                    newChat: pt["jb"]
                }
            },
            methods: {
                convertText(t) {
                    let e = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/gi;
                    return t.replace(e, t => '<a style="color: var(--white); word-break: break-word;" target="_blank" href="' + t + '">' + t + "</a>")
                },
                sendMessage() {
                    if (this.message.trim()) {
                        if (0 === this.user.enable_chat)
                            return this.$store.commit(n["V"], this.tokens.errors.CHAT_DISABLED),
                                this.message = "",
                                this.$refs.file.value = "",
                                this.preview = "",
                                void (this.previewShow = !1);
                        if (this.message && (this.$store.dispatch(r["S"], this.message),
                            this.message = ""),
                            this.$refs.file.files[0])
                            if (["image/jpeg", "image/png", "application/pdf"].indexOf(this.$refs.file.files[0].type) > -1) {
                                let t = new FormData;
                                t.append("file", this.$refs.file.files[0]),
                                    this.$store.dispatch(r["e"], t)
                            } else
                                this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE");
                        this.$refs.file.value = "",
                            this.preview = "",
                            this.previewShow = !1
                    }
                },
                copy(t) {
                    navigator.clipboard.writeText(t).then( () => {
                            this.$store.commit(n["U"], "Message copied to clipboard")
                        }
                    )
                },
                over(t) {
                    this.ddOver = t
                },
                addFile(t) {
                    if (this.ddOver = !1,
                        !t.dataTransfer.files)
                        return;
                    let e = new FormData;
                    e.append("file", t.dataTransfer.files[0]),
                        this.$store.dispatch(r["e"], e)
                },
                openImg(t) {
                    this.path[0] = t,
                        this.toggler = !this.toggler
                },
                loadPreview() {
                    let t = this.$refs.file.files[0];
                    this.typeFile = t.type,
                        ["image/jpeg", "image/png"].indexOf(this.typeFile) > -1 ? (this.preview = URL.createObjectURL(t),
                            this.previewShow = !0) : ["application/pdf"].indexOf(this.typeFile) > -1 ? (this.typeFile = t.type,
                            this.preview = "",
                            this.previewShow = !0) : (this.preview = "",
                            this.preview = !1,
                            this.$store.commit(n["V"], "LOCAL_INVALID_FILE_TYPE"))
                }
            },
            computed: {
                ...Object(o["b"])(["supportMessages", "modalFullscreen", "user", "tokens", "staticBase"])
            },
            watch: {
                supportMessages() {
                    setTimeout( () => {
                            let t = document.getElementById("support-messages");
                            t.scrollTop = t.scrollHeight
                        }
                        , 300)
                },
                modalFullscreen: {
                    deep: !0,
                    handler(t) {
                        "support" === t.page && setTimeout( () => {
                                let t = document.getElementById("support-messages");
                                t.scrollTop = t.scrollHeight
                            }
                            , 300)
                    }
                }
            }
        }
            , Px = Dx
            , Tx = (s("7ec0"),
            y(Px, Mx, Ax, !1, null, "34e7ec36", null))
            , Lx = Tx.exports
            , Ix = function() {
            var t = this
                , e = t._self._c;
            return e("div", [e("div", {
                staticClass: "fullscreen-page-title"
            }, [t._v(" " + t._s(t.tokens.fullScreen.settings.toUpperCase()) + " ")]), e("div", {
                staticClass: "setting-inner"
            }, [e("div", {
                staticClass: "setting-left",
                class: {
                    "hide-activity": t.disableActivityLog
                }
            }, [e("div", {
                staticClass: "card-bg"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenSettings.updatePassword))])]), e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.currentPassword))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password.showingOld ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.old,
                    expression: "password.old"
                }],
                ref: "password",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password.old) ? t._i(t.password.old, null) > -1 : t.password.old
                },
                on: {
                    change: function(e) {
                        var s = t.password.old
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && t.$set(t.password, "old", s.concat([o])) : n > -1 && t.$set(t.password, "old", s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.$set(t.password, "old", i)
                    }
                }
            }) : "radio" === (t.password.showingOld ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.old,
                    expression: "password.old"
                }],
                ref: "password",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password.old, null)
                },
                on: {
                    change: function(e) {
                        return t.$set(t.password, "old", null)
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.old,
                    expression: "password.old"
                }],
                ref: "password",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: t.password.showingOld ? "text" : "password"
                },
                domProps: {
                    value: t.password.old
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.password, "old", e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password.showingOld = !t.password.showingOld
                    },
                    mousedown: function(e) {
                        t.password.showingOld = !t.password.showingOld
                    }
                }
            }, [t._v(t._s(t.password.showingOld ? "visibility" : "visibility_off"))])])]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.newPassword))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password.showingUpdated ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.updated,
                    expression: "password.updated"
                }],
                ref: "password2",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password.updated) ? t._i(t.password.updated, null) > -1 : t.password.updated
                },
                on: {
                    change: function(e) {
                        var s = t.password.updated
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && t.$set(t.password, "updated", s.concat([o])) : n > -1 && t.$set(t.password, "updated", s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.$set(t.password, "updated", i)
                    }
                }
            }) : "radio" === (t.password.showingUpdated ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.updated,
                    expression: "password.updated"
                }],
                ref: "password2",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password.updated, null)
                },
                on: {
                    change: function(e) {
                        return t.$set(t.password, "updated", null)
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.updated,
                    expression: "password.updated"
                }],
                ref: "password2",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: t.password.showingUpdated ? "text" : "password"
                },
                domProps: {
                    value: t.password.updated
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.password, "updated", e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password.showingUpdated = !t.password.showingUpdated
                    },
                    mousedown: function(e) {
                        t.password.showingUpdated = !t.password.showingUpdated
                    }
                }
            }, [t._v(t._s(t.password.showingUpdated ? "visibility" : "visibility_off"))])])]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.confirmNewPassword))]), e("div", {
                staticClass: "show-hide-password"
            }, ["checkbox" === (t.password.showingConfirmed ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.confirmed,
                    expression: "password.confirmed"
                }],
                ref: "confirmed",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "checkbox"
                },
                domProps: {
                    checked: Array.isArray(t.password.confirmed) ? t._i(t.password.confirmed, null) > -1 : t.password.confirmed
                },
                on: {
                    change: function(e) {
                        var s = t.password.confirmed
                            , a = e.target
                            , i = !!a.checked;
                        if (Array.isArray(s)) {
                            var o = null
                                , n = t._i(s, o);
                            a.checked ? n < 0 && t.$set(t.password, "confirmed", s.concat([o])) : n > -1 && t.$set(t.password, "confirmed", s.slice(0, n).concat(s.slice(n + 1)))
                        } else
                            t.$set(t.password, "confirmed", i)
                    }
                }
            }) : "radio" === (t.password.showingConfirmed ? "text" : "password") ? e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.confirmed,
                    expression: "password.confirmed"
                }],
                ref: "confirmed",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: "radio"
                },
                domProps: {
                    checked: t._q(t.password.confirmed, null)
                },
                on: {
                    change: function(e) {
                        return t.$set(t.password, "confirmed", null)
                    }
                }
            }) : e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.password.confirmed,
                    expression: "password.confirmed"
                }],
                ref: "confirmed",
                staticClass: "form-control fs light-aspin",
                attrs: {
                    type: t.password.showingConfirmed ? "text" : "password"
                },
                domProps: {
                    value: t.password.confirmed
                },
                on: {
                    input: function(e) {
                        e.target.composing || t.$set(t.password, "confirmed", e.target.value)
                    }
                }
            }), e("i", {
                staticClass: "material-icons",
                on: {
                    touchstart: function(e) {
                        t.password.showingConfirmed = !t.password.showingConfirmed
                    },
                    mousedown: function(e) {
                        t.password.showingConfirmed = !t.password.showingConfirmed
                    }
                }
            }, [t._v(t._s(t.password.showingConfirmed ? "visibility" : "visibility_off"))])])])]), e("div", {
                staticClass: "pad"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("button", {
                staticClass: "fs-normal",
                on: {
                    click: t.updatePassword
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenSettings.changePassword) + " ")])])]), e("div", {
                staticClass: "col"
            })])]), t.disableActivityLog ? t._e() : e("div", {
                staticClass: "activity-log card-bg activeLog"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenDashboard.activityLog.toUpperCase()))])]), e("div", {
                staticClass: "activity-list"
            }, t._l(t.dashboardData.logins.rows, (function(s, a) {
                    return e("li", {
                        key: a
                    }, [e("h5", {
                        staticClass: "date"
                    }, [t._v(" " + t._s(`${new Date(1e3 * s.time).toLocaleDateString()} ${new Date(1e3 * s.time).toLocaleTimeString()}`))]), e("p", {
                        staticClass: "state"
                    }, [t._v(t._s(`${t.tokens.fullScreenDashboard.loginFromIp} ${s.ip}`))])])
                }
            )), 0)])]), e("div", {
                staticClass: "setting-right"
            }, [e("div", {
                staticClass: "pad card-bg",
                class: {
                    hide: t.user.otp
                }
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenSettings.activateProtection.toUpperCase()))])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.activationForGoogle))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.code,
                    expression: "code"
                }],
                staticClass: "form-control fs light-aspin",
                attrs: {
                    readonly: ""
                },
                domProps: {
                    value: t.code
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.code = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.activateAndEnter))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.codeCheck,
                    expression: "codeCheck"
                }],
                staticClass: "form-control fs light-aspin",
                domProps: {
                    value: t.codeCheck
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.codeCheck = e.target.value)
                    }
                }
            })])])]), e("div", {
                staticClass: "col qr"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.qrCode))]), e("div", {
                staticClass: "qr-new",
                on: {
                    click: function(e) {
                        return t.openQrCodeModal(t.otpEnableData.otpauth_url)
                    }
                }
            }, [e("QrcodeVue", {
                attrs: {
                    value: t.otpEnableData.otpauth_url,
                    size: 150
                }
            })], 1)])]), e("div", {
                staticClass: "form-row fs"
            }, [e("button", {
                staticClass: "btn fs-normal",
                on: {
                    click: t.activateOtp
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenSettings.activateProtection) + " ")])])]), e("div", {
                staticClass: "pad",
                class: {
                    hide: !t.user.otp
                }
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenSettings.protectionActive.toUpperCase()))])]), e("div", {
                staticClass: "row"
            }, [e("div", {
                staticClass: "col"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("label", {
                staticClass: "fs"
            }, [t._v(t._s(t.tokens.fullScreenSettings.twoFactorCode))]), e("input", {
                directives: [{
                    name: "model",
                    rawName: "v-model",
                    value: t.codeCheck,
                    expression: "codeCheck"
                }],
                staticClass: "form-control fs light-aspin",
                domProps: {
                    value: t.codeCheck
                },
                on: {
                    input: function(e) {
                        e.target.composing || (t.codeCheck = e.target.value)
                    }
                }
            })]), e("div", {
                staticClass: "form-row fs"
            }, [e("button", {
                staticClass: "btn fs-normal",
                on: {
                    click: t.disableOtp
                }
            }, [t._v(" " + t._s(t.tokens.fullScreenSettings.disableProtection) + " ")])])])])])])]), e("div", {
                staticClass: "settings-footer"
            }, [e("div", {
                staticClass: "form-row fs card-bg currency-item"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenSettings.dashboardCurrency.toUpperCase()))])]), e("div", {
                staticClass: "currency fs"
            }, t._l(t.currencies, (function(s) {
                    return e("div", {
                        key: s,
                        staticClass: "item fs",
                        class: {
                            active: t.activeCurrency === s
                        },
                        on: {
                            click: function(e) {
                                return t.changeCurrency(s)
                            }
                        }
                    }, [t.aspinDesign ? t._e() : e("div", {
                        staticClass: "radio"
                    }, [e("div", {
                        staticClass: "checked"
                    })]), e("img", {
                        attrs: {
                            src: t.staticBase + `currencies/${s || "USD"}.png`,
                            alt: ""
                        }
                    }), e("div", {
                        staticClass: "name"
                    }, [t._v(t._s(s || "USD"))])])
                }
            )), 0)]), e("div", {
                staticClass: "form-row fs card-bg"
            }, [e("div", {
                staticClass: "form-row fs"
            }, [e("div", {
                staticClass: "form-title"
            }, [t._v(t._s(t.tokens.fullScreenSettings.language.toUpperCase()))])]), e("div", {
                staticClass: "languages fs"
            }, t._l(t.languages, (function(s) {
                    return e("div", {
                        key: s,
                        staticClass: "item fs",
                        class: {
                            active: t.langActive === s
                        },
                        on: {
                            click: function(e) {
                                return t.changeLang(s)
                            }
                        }
                    }, [t.aspinDesign ? t._e() : e("div", {
                        staticClass: "radio"
                    }, [e("div", {
                        staticClass: "checked"
                    })]), e("div", {
                        staticClass: "flag fs small-flag",
                        class: "flag-" + s
                    }), e("div", {
                        staticClass: "name"
                    }, [t._v(t._s(t.rawTokens[s] ? t.rawTokens[s]._name : ""))])])
                }
            )), 0)])])])
        }
            , Fx = []
            , Ox = {
            name: "Settings",
            components: {
                QrcodeVue: tl
            },
            data() {
                return {
                    password: {
                        old: "",
                        updated: "",
                        confirmed: "",
                        showingOld: !1,
                        showingUpdated: !1,
                        showingConfirmed: !1
                    },
                    code: "",
                    codeCheck: "",
                    brand: pt["e"],
                    disableActivityLog: 1,
                    aspinDesign: pt["b"],
                    qrTitle: pt["sb"],
                    qrTitleBrand: pt["rb"],
                    staticBase: pt["Cb"]
                }
            },
            methods: {
                updatePassword() {
                    this.password.updated === this.password.confirmed ? (this.$store.dispatch(r["B"], {
                        old_password: this.password.old.trim(),
                        new_password: this.password.updated.trim()
                    }),
                        this.password.old = "",
                        this.password.updated = "",
                        this.password.confirmed = "") : this.$store.commit(n["V"], "LOCAL_PASSWORDS_NOT_MATCH")
                },
                activateOtp() {
                    this.$store.dispatch(r["y"], {
                        code: this.codeCheck
                    }),
                        this.codeCheck = ""
                },
                disableOtp() {
                    this.$store.dispatch(r["A"], {
                        code: this.codeCheck
                    }),
                        this.codeCheck = ""
                },
                changeCurrency(t) {
                    localStorage.activeCurrency = t,
                        this.$store.commit(n["c"], t)
                },
                changeLang(t) {
                    this.$store.commit(n["B"], t)
                },
                openQrCodeModal(t) {
                    this.$store.commit(n["F"], {
                        qrCode: !0
                    }),
                        this.$store.commit(n["O"], t)
                }
            },
            computed: {
                ...Object(o["b"])(["user", "otpEnableData", "langActive", "languages", "tokens", "rawTokens", "dashboardData", "currencies", "activeCurrency"])
            },
            watch: {
                otpEnableData(t) {
                    this.qrTitle && (t.otpauth_url = t.otpauth_url.replace(this.qrTitleBrand, this.qrTitle)),
                        this.code = t.base32
                }
            }
        }
            , Bx = Ox
            , Nx = (s("5cf9"),
            y(Bx, Ix, Fx, !1, null, "3423bf4c", null))
            , $x = Nx.exports
            , Vx = {
            name: "Fullscreen",
            components: {
                Dashboard: Vm,
                Personal: rx,
                Deposit: wp,
                Withdrawal: px,
                Verification: yx,
                Accounts: xx,
                Support: Lx,
                Savings: uf,
                Settings: $x,
                HamburgerMenu: Gw
            },
            mounted() {
                this.lightTheme && document.body.classList.add("light-theme")
            },
            data() {
                return {
                    isMobile: Object(l["h"])(),
                    logo: pt["ab"],
                    website: pt["Ob"],
                    tradingViewTheme: pt["Lb"],
                    aspinDesign: pt["b"],
                    platesFolder: pt["ob"],
                    apiBase: pt["ub"],
                    showLang: !1,
                    hideLogo: pt["Q"],
                    whiteAspinTheme: pt["Pb"],
                    logoRedirectOff: pt["bb"]
                }
            },
            methods: {
                ...Object(o["c"])(["setLightTheme", "setThemeColors"]),
                switchTheme() {
                    this.setLightTheme(!this.lightTheme),
                        localStorage.setItem("theme", this.lightTheme ? "white" : "black"),
                        localStorage.setItem("tradingview.current_theme.name", this.lightTheme ? "Light" : pt["Lb"]);
                    let t = this.lightTheme ? {
                        ...this.themeColors,
                        "background-dark": "#fff",
                        line: "#fff"
                    } : {
                        ...this.themeColors,
                        "background-dark": pt["Ib"],
                        line: pt["Kb"]
                    };
                    this.setThemeColors(t),
                    document.body.classList.contains("light-theme") && document.body.classList.remove("light-theme"),
                    this.lightTheme && document.body.classList.add("light-theme")
                },
                close() {
                    this.$store.commit(n["F"], {
                        fullscreen: !1
                    }),
                        this.$store.commit(n["F"], {
                            hamburgerMenu: !1
                        })
                },
                changePage(t) {
                    this.$store.commit(n["L"], {
                        page: t
                    })
                },
                logout() {
                    this.$store.dispatch(r["x"])
                },
                changeLang(t) {
                    this.$store.commit(n["B"], t)
                },
                errorHandler() {
                    this.logo.url = ""
                }
            },
            computed: {
                ...Object(o["b"])(["user", "tokens", "modals", "modalFullscreen", "activeAccount", "languages", "rawTokens", "langActive", "verificationState", "staticBase", "lightTheme", "themeColors"]),
                logoComputed() {
                    return this.lightTheme ? this.logo.url.replace(/white/, "black") : this.logo.url
                },
                plate() {
                    let t = ["beginner", "student", "basic", "bronze", "bronze_plus", "silver", "silver_plus", "gold", "platinum", "platinum_plus", "vip", "top", "diamond", "islamic", "business", "enterprise", "regular", "arbitrage", "basicml", "shift", "custom", "professional"].includes(this.activeAccount.group) ? this.activeAccount.group : "main";
                    return this.staticBase + this.platesFolder + "/" + t + "_plate.png"
                }
            },
            watch: {
                modalFullscreen: {
                    deep: !0,
                    handler(t) {
                        switch (t.page) {
                            case "deposit":
                                this.$store.dispatch(r["m"]);
                                break;
                            case "withdrawal":
                                this.$store.dispatch(r["W"]);
                                break;
                            case "settings":
                                this.user.otp || this.$store.dispatch(r["z"]);
                                break
                        }
                        this.$refs.fullscreen.scrollTo({
                            top: 0,
                            behavior: "smooth"
                        })
                    }
                }
            }
        }
            , Ex = Vx
            , Ux = (s("a733"),
            y(Ex, tx, ex, !1, null, "a29508fa", null))
            , Hx = Ux.exports
            , jx = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.autoTrader
                },
                on: {
                    click: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                on: {
                    click: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "close",
                on: {
                    click: t.hideModal
                }
            }, [e("i", {
                staticClass: "material-icons"
            }, [t._v("close")])]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.enable
                },
                on: {
                    click: function(e) {
                        t.enable = !t.enable
                    }
                }
            }, [t._v(" Auto Trader "), e("i", {
                staticClass: "material-icons btn",
                class: t.enable ? "green" : "red",
                attrs: {
                    title: "Enable"
                }
            }, [t._v("toggle_" + t._s(t.enable ? "on" : "off"))])]), e("div", {
                staticClass: "modal-inner"
            }, [e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.low
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("low")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelLow) + " "), e("div", {
                staticClass: "radio"
            })]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.medium
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("medium")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelMedium) + " "), e("div", {
                staticClass: "radio"
            })]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.riskLevel.high
                },
                on: {
                    click: function(e) {
                        return t.setRiskLevel("high")
                    }
                }
            }, [t._v(" " + t._s(t.tokens.autoTrader.riskLevelHigh) + " "), e("div", {
                staticClass: "radio"
            })])]), e("div", {
                staticClass: "row form-control"
            }, [t._v(" " + t._s(t.tokens.autoTrader[t.tradersTittle] || t.tokens.autoTrader.perDay) + " "), e("span", [t._v(t._s(t.tradersPerDayStr[t.activeRiskLevel]) + " " + t._s(t.tradersTittle ? t.tokens.autoTrader.days : ""))])]), e("p", {
                staticClass: "desc"
            }, [t._v(t._s(t.tokens.autoTrader.desc))]), e("div", {
                staticClass: "row form-control",
                class: {
                    active: t.accept
                },
                on: {
                    click: function(e) {
                        t.accept = !t.accept
                    }
                }
            }, [e("div", {
                staticClass: "accept"
            }, [t._v(t._s(t.tokens.autoTrader.accept) + " "), e("div", {
                staticClass: "radio"
            })])]), e("div", {
                staticClass: "row actions"
            }, [e("button", {
                staticClass: "button save",
                on: {
                    click: function(e) {
                        return t.save()
                    }
                }
            }, [t._v("Save")]), e("button", {
                staticClass: "button cancel",
                on: {
                    click: function(e) {
                        return t.hideModal()
                    }
                }
            }, [t._v("Cancel")])])])])
        }
            , qx = []
            , Rx = {
            name: "AutoTraderModal",
            mounted() {
                this.customTradersPerDay && (this.tradersPerDayStr.low = this.customTradersPerDay[0],
                    this.tradersPerDayStr.medium = this.customTradersPerDay[1],
                    this.tradersPerDayStr.high = this.customTradersPerDay[2])
            },
            data() {
                return {
                    tradersTittle: pt["Hb"],
                    riskLevel: {
                        low: !1,
                        medium: !1,
                        high: !1
                    },
                    customTradersPerDay: pt["Gb"],
                    activeRiskLevel: "low",
                    tradersPerDayStr: {
                        low: "1-3",
                        medium: "3-4",
                        high: "5+"
                    },
                    tradersPerDayNum: 3,
                    accept: !1,
                    enable: 0
                }
            },
            methods: {
                hideModal() {
                    this.$store.commit(n["F"], {
                        autoTrader: !1
                    }),
                        this.setAutoTraderConfig(),
                        this.accept = !1
                },
                deactivateRiskLevel() {
                    for (const t in this.riskLevel)
                        this.riskLevel[t] = !1
                },
                setRiskLevel(t) {
                    this.deactivateRiskLevel(),
                        this.riskLevel[t] = !0,
                        this.activeRiskLevel = t
                },
                save() {
                    this.accept ? (this.sendAutotraderConfig(),
                        this.hideModal(),
                        this.$store.commit(n["U"], "AutoTrader activated")) : this.$store.commit(n["V"], "Please press the `Accept` button")
                },
                sendAutotraderConfig() {
                    let t;
                    for (const e in this.riskLevel)
                        if (this.riskLevel[e])
                            switch (t = e,
                                e) {
                                case "low":
                                    this.tradersPerDayNum = 3;
                                    break;
                                case "medium":
                                    this.tradersPerDayNum = 4;
                                    break;
                                case "high":
                                    this.tradersPerDayNum = 30;
                                    break;
                                default:
                                    this.tradersPerDayNum = 3;
                                    break
                            }
                    this.$store.dispatch(r["O"], {
                        risk_level: t,
                        trades_day: this.tradersPerDayNum,
                        enable: this.enable
                    })
                },
                setAutoTraderConfig() {
                    this.deactivateRiskLevel(),
                        this.$set(this, "tradersPerDayNum", this.autoTraderConfig.trades_day > 1 ? this.autoTraderConfig.trades_day : 3),
                        this.$set(this.riskLevel, this.autoTraderConfig.risk_level, !0),
                        this.$set(this, "activeRiskLevel", this.autoTraderConfig.risk_level),
                        this.$set(this, "enable", this.autoTraderConfig.enable)
                }
            },
            computed: {
                ...Object(o["b"])(["modals", "autoTraderConfig", "tokens"])
            },
            watch: {
                autoTraderConfig() {
                    this.setAutoTraderConfig()
                }
            }
        }
            , Wx = Rx
            , zx = (s("c2cd"),
            y(Wx, jx, qx, !1, null, "8dd10eb0", null))
            , Gx = zx.exports
            , Yx = function() {
            var t = this
                , e = t._self._c;
            return e("div", {
                staticClass: "modal-wrapper",
                class: {
                    hide: !t.modals.timePicker
                },
                on: {
                    mousedown: function(e) {
                        return e.stopPropagation(),
                            t.hideModal.apply(null, arguments)
                    }
                }
            }, [e("div", {
                staticClass: "modal",
                style: {
                    top: t.position.top + "px",
                    left: t.position.left + "px"
                },
                on: {
                    mousedown: function(t) {
                        t.stopPropagation()
                    }
                }
            }, [e("div", {
                staticClass: "title"
            }, [t._v(t._s(t.tokens.timePickerModal.title.toUpperCase()))]), e("DatePicker", {
                attrs: {
                    type: "datetime",
                    confirm: !0,
                    "value-type": "timestamp",
                    "confirm-text": t.tokens.autoCloseModal.updateOrder
                },
                on: {
                    confirm: t.updateOrder
                },
                model: {
                    value: t.values.expiration,
                    callback: function(e) {
                        t.$set(t.values, "expiration", e)
                    },
                    expression: "values.expiration"
                }
            }), t._v(" " + t._s(t.values.expiration) + " ")], 1)])
        }
            , Zx = []
            , Jx = {
            name: "TimePickerModal",
            components: {
                DatePicker: Mm
            },
            data() {
                return {
                    values: {
                        left: 0,
                        top: 0,
                        orderActive: null,
                        expiration: null
                    },
                    mode: "default"
                }
            },
            methods: {
                updateOrder() {
                    const t = Date.now();
                    if (this.expiration <= t)
                        return this.$store.commit(n["V"], "INVALID_TIME"),
                            void (this.values.expiration = null);
                    this.$store.dispatch(r["i"], {
                        id: this.values.orderActive,
                        account_id: this.activeAccount.id,
                        expiration: this.values.expiration / 1e3
                    }),
                        this.$store.commit(n["F"], {
                            timePicker: !1
                        })
                },
                hideModal() {
                    this.$store.commit(n["F"], {
                        timePicker: !1
                    });
                    let t = document.querySelector(".mx-datepicker-popup");
                    t && (t.style.display = "none")
                },
                currencySign: l["e"],
                isMobile: l["h"]
            },
            computed: {
                ...Object(o["b"])(["modals", "modalTimePicker", "tokens", "activeAccount", "symbols", "orders"]),
                position() {
                    if (!this.modals.timePicker)
                        return {
                            left: 0,
                            top: 0
                        };
                    let t = {
                        width: document.body.offsetWidth,
                        height: document.body.offsetHeight
                    }
                        , e = {
                        width: 200,
                        height: this.values.orderActive ? 262 : 209
                    };
                    return t.width >= 600 && this.isMobile() ? {
                        left: this.modalTimePicker.posX,
                        top: this.modalTimePicker.posY - 87
                    } : t.width < 600 && this.isMobile() ? {
                        left: t.width - e.width,
                        top: this.modalTimePicker.top - 87
                    } : {
                        left: this.modalTimePicker.left - e.width - 10,
                        top: Math.min(this.modalTimePicker.top, t.height - e.height)
                    }
                }
            },
            watch: {
                modalTimePicker: {
                    deep: !0,
                    handler(t) {
                        for (let e in t)
                            void 0 !== this.values[e] && (this.values[e] = t[e]),
                            "expiration" === e && (this.values[e] = 1e3 * t[e] || null)
                    }
                },
                values: {
                    deep: !0,
                    handler(t) {
                        this.$store.commit(n["I"], t)
                    }
                }
            }
        }
            , Kx = Jx
            , Xx = (s("d505"),
            y(Kx, Yx, Zx, !1, null, "3ec4309a", null))
            , Qx = Xx.exports
            , tM = {
            name: "OldDesign",
            beforeMount() {
                this.updateStyles()
            },
            components: {
                TimePickerModal: Qx,
                AutoTraderModal: Gx,
                StatusBar: QS,
                OrdersPane: GS,
                Grid: PS,
                PendingModal: ok,
                AutoCloseModal: Qw,
                MenuModal: Hw,
                Menu: Gw,
                AssetsInfoModal: gC,
                NoConnectionModal: ow,
                NoLandscape: Q_,
                ProfitCalculatorModal: uC,
                RegisterModal: QC,
                Notifications: GC,
                AccountModal: HC,
                GridsModal: BC,
                LoginModal: Fa,
                CustomLoginModals: PC,
                BalanceModal: kC,
                ForgotPasswordModal: uk,
                NewPasswordModal: gk,
                ClosePositionModal: kk,
                DepositSuccessModal: Pk,
                DepositFailModal: Bk,
                WithdrawalCancelModal: Hk,
                SymbolsModal: oC,
                SideMenu: G_,
                Footer: H_,
                Header: A_,
                Fullscreen: Hx,
                PciDssModal: Gk,
                QrCodeModal: Qk,
                AlertMessageModal: oS
            },
            data() {
                return {
                    newPlatformDesign: !1,
                    brand: pt["e"],
                    customLoginModal: pt["C"],
                    sessionStateInit: !1,
                    isMobile: Object(l["h"])(),
                    cssVars: {
                        "--font": pt["s"],
                        "--background-footer": pt["m"],
                        "--background-dark": pt["k"],
                        "--background-dark-mid": pt["l"],
                        "--background": pt["i"],
                        "--background-light": pt["n"],
                        "--white": pt["z"],
                        "--white-to-black": pt["z"],
                        "--brand": pt["r"],
                        "--green": pt["t"],
                        "--green-button": pt["u"],
                        "--red": pt["x"],
                        "--primary-button": pt["w"],
                        "--secondary-button": pt["y"],
                        "--border": pt["q"],
                        "--market-watch-title": pt["v"],
                        "--assets-info-gradient": pt["j"],
                        "--color-bg-login": pt["o"],
                        "--color-bg-login-btn": pt["p"],
                        "--aspin-background-light": pt["n"]
                    },
                    cssVarsLight: {
                        "--font": "#313131",
                        "--background-footer": "#fff",
                        "--background-dark": "#fff",
                        "--background-dark-mid": "#fbfbfb",
                        "--background": "#fbfbfb",
                        "--brand": pt["r"],
                        "--green-button": pt["u"],
                        "--border": "#E8F2F9",
                        "--white-to-black": "#000",
                        "--assets-info-gradient": "linear-gradient(0deg, rgba(245, 255, 245, 1) 0%, rgba(245, 255, 245, .7) 45%, rgba(24, 31, 45, 0.45) 100%)",
                        "--aspin-background-light": "#fbfbfb"
                    }
                }
            },
            methods: {
                updateStyles() {
                    const t = document.querySelector("link.old-design-style")
                        , e = document.querySelector("link.new-design-style");
                    e && e.remove(),
                    t || this.addStyleSheet("../designs/old-design/general.css", "old-design-style")
                },
                addStyleSheet(t, e) {
                    const s = document.createElement("link");
                    s.rel = "stylesheet",
                        s.href = t,
                        s.className = e,
                        document.head.appendChild(s)
                }
            },
            computed: {
                ...Object(o["b"])(["blur", "symbols", "sessionsState", "staticBase", "lightTheme", "variables", "modals"]),
                alertMessage() {
                    return !!this.variables.ALERT_MESSAGE && this.variables.ALERT_MESSAGE.trim()
                }
            }
        }
            , eM = tM
            , sM = y(eM, __, C_, !1, null, null, null)
            , aM = sM.exports
            , iM = {
            name: "App",
            components: {
                OldDesign: aM,
                NewDesign: p_,
                BaseSwitchToBanner: y_
            },
            async mounted() {
                this.$store.dispatch(r["c"]),
                Object(l["h"])() && this.$store.commit(n["F"], {
                    menu: !1,
                    sideMenu: !1
                }),
                    window.onresize = () => {
                        window.scrollTo(0, document.body.scrollHeight);
                        let t = .01 * window.innerHeight;
                        document.documentElement.style.setProperty("--vh", t + "px")
                    }
                ;
                let t = .01 * window.innerHeight;
                document.documentElement.style.setProperty("--vh", t + "px")
            },
            data() {
                return {
                    sessionStateInit: !1,
                    bannerState: !0,
                    brand: pt["e"],
                    isMobile: Object(l["h"])(),
                    newPlatformDesign: JSON.parse(localStorage.getItem("new-design")) || !1
                }
            },
            methods: {
                closeBanner() {
                    this.bannerState = !1
                },
                changeDesign(t) {
                    this.newPlatformDesign = t,
                        localStorage.setItem("new-design", JSON.stringify(this.newPlatformDesign))
                },
                playClick() {
                    this.$store.dispatch(r["F"])
                },
                autoLogout(t) {
                    if (!t)
                        return;
                    let e = Number(window.localStorage.getItem("cfdLastInteraction") || 0)
                        , s = 60 * Math.floor(Number(t)) * 1e3;
                    e + s < Date.now() ? this.logout() : (this.logoutTimeoutId && clearTimeout(this.logoutTimeoutId),
                        this.logoutTimeoutId = setTimeout( () => {
                                let e = Number(window.localStorage.getItem("cfdLastInteraction") || 0);
                                e + s < Date.now() ? this.logout() : this.autoLogout(t)
                            }
                            , s))
                },
                logout() {
                    this.$store.dispatch(r["x"])
                }
            },
            computed: {
                ...Object(o["b"])(["blur", "symbols", "sessionsState", "staticBase", "lightTheme", "variables", "modals"])
            },
            watch: {
                variables: {
                    deep: !0,
                    handler(t) {
                        let e = Number(t.AUTO_LOGOUT) || !1;
                        e && e >= 1 && (localStorage.setItem("cfdLastInteraction", Date.now()),
                            this.autoLogout(e),
                            document.addEventListener("mousedown", () => {
                                    this.autoLogout(e),
                                        localStorage.setItem("cfdLastInteraction", Date.now())
                                }
                            ),
                            document.addEventListener("visibilitychange", () => {
                                    this.autoLogout(e)
                                }
                            ))
                    }
                }
            }
        }
            , oM = iM
            , nM = (s("a5ef"),
            y(oM, a, i, !1, null, null, null));
        e["default"] = nM.exports
    },
    "3e0b": function(t, e, s) {},
    "3eb7": function(t, e, s) {
        t.exports = s.p + "img/loader-circular-1.8a7630ca.gif"
    },
    "3ec1": function(t, e, s) {
        "use strict";
        s("4b09")
    },
    "3ef0": function(t, e, s) {},
    "3f36": function(t, e, s) {},
    "3f4f": function(t, e, s) {
        "use strict";
        s("c70a")
    },
    "411c": function(t, e, s) {},
    "42be": function(t, e, s) {
        "use strict";
        s("7ffb")
    },
    "449e": function(t, e, s) {},
    "44d2": function(t, e, s) {
        "use strict";
        var a = s("b622")
            , i = s("7c73")
            , o = s("9bf2").f
            , n = a("unscopables")
            , r = Array.prototype;
        void 0 === r[n] && o(r, n, {
            configurable: !0,
            value: i(null)
        }),
            t.exports = function(t) {
                r[n][t] = !0
            }
    },
    "44e7": function(t, e, s) {
        "use strict";
        var a = s("861d")
            , i = s("c6b6")
            , o = s("b622")
            , n = o("match");
        t.exports = function(t) {
            var e;
            return a(t) && (void 0 !== (e = t[n]) ? !!e : "RegExp" === i(t))
        }
    },
    "44ef": function(t, e, s) {},
    "44fb": function(t, e, s) {},
    "458f": function(t, e, s) {
        "use strict";
        s("7c83")
    },
    "45da": function(t, e, s) {
        "use strict";
        s("6696")
    },
    "46d4": function(t, e, s) {
        "use strict";
        s("b98b")
    },
    "477e": function(t, e, s) {},
    4952: function(t, e, s) {},
    4954: function(t, e, s) {},
    "49fc": function(t, e, s) {
        "use strict";
        s("2fe1")
    },
    "4a3d": function(t, e, s) {},
    "4a51": function(t, e, s) {
        "use strict";
        s("d00c")
    },
    "4af0": function(t, e, s) {
        "use strict";
        s("8f8b")
    },
    "4b09": function(t, e, s) {},
    "4b79": function(t, e, s) {},
    "4c42": function(t, e, s) {
        "use strict";
        s("2775")
    },
    "4c48": function(t, e, s) {},
    "4c65": function(t, e, s) {
        "use strict";
        s("a021")
    },
    "4ca4": function(t, e, s) {
        "use strict";
        s("0522")
    },
    "4da0": function(t, e, s) {
        "use strict";
        s("09d4")
    },
    "4e71": function(t, e, s) {},
    "4f47": function(t, e, s) {},
    5038: function(t, e, s) {
        "use strict";
        s("4e71")
    },
    "505b": function(t, e, s) {
        "use strict";
        s("7462")
    },
    5162: function(t, e, s) {
        "use strict";
        s("3a2f")
    },
    "518b": function(t, e, s) {
        "use strict";
        s("bc98")
    },
    "51c4": function(t, e, s) {
        "use strict";
        s("05b6")
    },
    5304: function(t, e, s) {
        "use strict";
        s("5416")
    },
    "531f": function(t, e, s) {
        "use strict";
        s("a540")
    },
    5416: function(t, e, s) {},
    "543c": function(t, e, s) {},
    5494: function(t, e, s) {
        "use strict";
        var a = s("83ab")
            , i = s("e330")
            , o = s("edd0")
            , n = URLSearchParams.prototype
            , r = i(n.forEach);
        a && !("size"in n) && o(n, "size", {
            get: function() {
                var t = 0;
                return r(this, (function() {
                        t++
                    }
                )),
                    t
            },
            configurable: !0,
            enumerable: !0
        })
    },
    "56e4": function(t, e, s) {
        "use strict";
        s("fb35")
    },
    "56e6": function(t, e, s) {},
    "57b8": function(t, e, s) {},
    "58ac": function(t, e, s) {
        "use strict";
        s("2a0d")
    },
    "598d": function(t, e, s) {
        "use strict";
        s("159e")
    },
    "599f": function(t, e, s) {
        t.exports = s.p + "img/credit-card.40702a7c.png"
    },
    "59c6": function(t, e, s) {},
    "5a95": function(t, e, s) {},
    "5b81": function(t, e, s) {
        "use strict";
        var a = s("23e7")
            , i = s("c65b")
            , o = s("e330")
            , n = s("1d80")
            , r = s("1626")
            , l = s("7234")
            , c = s("44e7")
            , d = s("577e")
            , u = s("dc4a")
            , m = s("90d8")
            , p = s("0cb2")
            , h = s("b622")
            , v = s("c430")
            , f = h("replace")
            , g = TypeError
            , b = o("".indexOf)
            , y = o("".replace)
            , _ = o("".slice)
            , C = Math.max;
        a({
            target: "String",
            proto: !0
        }, {
            replaceAll: function(t, e) {
                var s, a, o, h, w, k, S, x, M, A, D = n(this), P = 0, T = "";
                if (!l(t)) {
                    if (s = c(t),
                    s && (a = d(n(m(t))),
                        !~b(a, "g")))
                        throw new g("`.replaceAll` does not allow non-global regexes");
                    if (o = u(t, f),
                        o)
                        return i(o, t, D, e);
                    if (v && s)
                        return y(d(D), t, e)
                }
                h = d(D),
                    w = d(t),
                    k = r(e),
                k || (e = d(e)),
                    S = w.length,
                    x = C(1, S),
                    M = b(h, w);
                while (-1 !== M)
                    A = k ? d(e(w, M, h)) : p(w, h, M, [], void 0, e),
                        T += _(h, P, M) + A,
                        P = M + S,
                        M = M + x > h.length ? -1 : b(h, w, M + x);
                return P < h.length && (T += _(h, P)),
                    T
            }
        })
    },
    "5c49": function(t, e, s) {
        "use strict";
        s("0ef1")
    },
    "5cf9": function(t, e, s) {
        "use strict";
        s("6984")
    },
    "5ec0": function(t, e, s) {},
    "5f36": function(t, e, s) {
        "use strict";
        s("cd32")
    },
    "5f75": function(t, e, s) {},
    6060: function(t, e, s) {},
    "608d": function(t, e, s) {},
    "60e7": function(t, e, s) {
        "use strict";
        s("b41f")
    },
    6201: function(t, e, s) {
        "use strict";
        s("477e")
    },
    "634c": function(t, e, s) {},
    "635f": function(t, e, s) {
        "use strict";
        s("44fb")
    },
    "63a3": function(t, e, s) {
        "use strict";
        s("01a8")
    },
    "63ff": function(t, e, s) {
        "use strict";
        s("ff5c")
    },
    6463: function(t, e, s) {
        "use strict";
        s("1b9c")
    },
    "64aa": function(t, e, s) {},
    6505: function(t, e, s) {
        "use strict";
        s("af01")
    },
    6540: function(t, e, s) {},
    "65ad": function(t, e, s) {
        "use strict";
        s("e8d6")
    },
    "65d3": function(t, e, s) {},
    6626: function(t, e, s) {},
    6682: function(t, e, s) {
        "use strict";
        s("0e81")
    },
    6696: function(t, e, s) {},
    "66d5": function(t, e, s) {
        "use strict";
        s("2196")
    },
    "67b3": function(t, e, s) {},
    6887: function(t, e, s) {
        "use strict";
        s("6e31")
    },
    "692e": function(t, e, s) {},
    6984: function(t, e, s) {},
    "69d7": function(t, e, s) {
        "use strict";
        s("d0e9")
    },
    "69e6": function(t, e, s) {},
    "6a31": function(t, e, s) {
        "use strict";
        s("d7f6")
    },
    "6bbc": function(t, e, s) {},
    "6ce9": function(t, e, s) {
        "use strict";
        s("69e6")
    },
    "6d76": function(t, e, s) {
        "use strict";
        s("02d4")
    },
    "6e31": function(t, e, s) {},
    "6e79": function(t, e, s) {
        "use strict";
        s("f9a3")
    },
    "6f22": function(t, e, s) {},
    "70f9": function(t, e, s) {
        "use strict";
        s("d299")
    },
    7222: function(t, e, s) {},
    7236: function(t, e, s) {
        "use strict";
        s("f616")
    },
    7278: function(t, e, s) {},
    7462: function(t, e, s) {},
    "75b6": function(t, e, s) {
        "use strict";
        s("95d1")
    },
    "77d1": function(t, e, s) {},
    7883: function(t, e, s) {
        "use strict";
        s("4c48")
    },
    "798f": function(t, e, s) {},
    "79ed": function(t, e, s) {},
    "7aa2": function(t, e, s) {},
    "7c73": function(t, e, s) {
        "use strict";
        var a, i = s("825a"), o = s("37e8"), n = s("7839"), r = s("d012"), l = s("1be4"), c = s("cc12"), d = s("f772"), u = ">", m = "<", p = "prototype", h = "script", v = d("IE_PROTO"), f = function() {}, g = function(t) {
            return m + h + u + t + m + "/" + h + u
        }, b = function(t) {
            t.write(g("")),
                t.close();
            var e = t.parentWindow.Object;
            return t = null,
                e
        }, y = function() {
            var t, e = c("iframe"), s = "java" + h + ":";
            return e.style.display = "none",
                l.appendChild(e),
                e.src = String(s),
                t = e.contentWindow.document,
                t.open(),
                t.write(g("document.F=Object")),
                t.close(),
                t.F
        }, _ = function() {
            try {
                a = new ActiveXObject("htmlfile")
            } catch (e) {}
            _ = "undefined" != typeof document ? document.domain && a ? b(a) : y() : b(a);
            var t = n.length;
            while (t--)
                delete _[p][n[t]];
            return _()
        };
        r[v] = !0,
            t.exports = Object.create || function(t, e) {
                var s;
                return null !== t ? (f[p] = i(t),
                    s = new f,
                    f[p] = null,
                    s[v] = t) : s = _(),
                    void 0 === e ? s : o.f(s, e)
            }
    },
    "7c83": function(t, e, s) {},
    "7d0c": function(t, e, s) {},
    "7d62": function(t, e, s) {
        "use strict";
        s("9762")
    },
    "7e56": function(t, e, s) {},
    "7ec0": function(t, e, s) {
        "use strict";
        s("f485")
    },
    "7ff1": function(t, e, s) {
        "use strict";
        s("543c")
    },
    "7ffb": function(t, e, s) {},
    "802e": function(t, e, s) {},
    "80c4": function(t, e, s) {
        "use strict";
        s("382b")
    },
    8244: function(t, e, s) {
        "use strict";
        s("57b8")
    },
    "82b3": function(t, e, s) {},
    8308: function(t, e, s) {
        "use strict";
        s("0fb1")
    },
    "84ca": function(t, e, s) {},
    8541: function(t, e, s) {
        "use strict";
        s("ffb7")
    },
    8558: function(t, e, s) {
        "use strict";
        var a = s("cfe9")
            , i = s("b5db")
            , o = s("c6b6")
            , n = function(t) {
            return i.slice(0, t.length) === t
        };
        t.exports = function() {
            return n("Bun/") ? "BUN" : n("Cloudflare-Workers") ? "CLOUDFLARE" : n("Deno/") ? "DENO" : n("Node.js/") ? "NODE" : a.Bun && "string" == typeof Bun.version ? "BUN" : a.Deno && "object" == typeof Deno.version ? "DENO" : "process" === o(a.process) ? "NODE" : a.window && a.document ? "BROWSER" : "REST"
        }()
    },
    8756: function(t, e, s) {},
    "88a7": function(t, e, s) {
        "use strict";
        var a = s("cb2d")
            , i = s("e330")
            , o = s("577e")
            , n = s("d6d6")
            , r = URLSearchParams
            , l = r.prototype
            , c = i(l.append)
            , d = i(l["delete"])
            , u = i(l.forEach)
            , m = i([].push)
            , p = new r("a=1&a=2&b=3");
        p["delete"]("a", 1),
            p["delete"]("b", void 0),
        p + "" !== "a=2" && a(l, "delete", (function(t) {
                var e = arguments.length
                    , s = e < 2 ? void 0 : arguments[1];
                if (e && void 0 === s)
                    return d(this, t);
                var a = [];
                u(this, (function(t, e) {
                        m(a, {
                            key: e,
                            value: t
                        })
                    }
                )),
                    n(e, 1);
                var i, r = o(t), l = o(s), p = 0, h = 0, v = !1, f = a.length;
                while (p < f)
                    i = a[p++],
                        v || i.key === r ? (v = !0,
                            d(this, i.key)) : h++;
                while (h < f)
                    i = a[h++],
                    i.key === r && i.value === l || c(this, i.key, i.value)
            }
        ), {
            enumerable: !0,
            unsafe: !0
        })
    },
    "88ae": function(t, e, s) {
        "use strict";
        s("b9ca")
    },
    "88ce": function(t, e, s) {
        "use strict";
        s("afc3")
    },
    "8a8a": function(t, e, s) {
        "use strict";
        s("b4e4")
    },
    "8bdb": function(t, e, s) {},
    "8bf2": function(t, e, s) {
        "use strict";
        s("a552")
    },
    "8c52": function(t, e, s) {},
    "8e1c": function(t, e, s) {},
    "8e7c": function(t, e, s) {},
    "8e89": function(t, e, s) {
        "use strict";
        s("a431")
    },
    "8ea8": function(t, e, s) {},
    "8f8b": function(t, e, s) {},
    "90d8": function(t, e, s) {
        "use strict";
        var a = s("c65b")
            , i = s("1a2d")
            , o = s("3a9b")
            , n = s("ad6d")
            , r = RegExp.prototype;
        t.exports = function(t) {
            var e = t.flags;
            return void 0 !== e || "flags"in r || i(t, "flags") || !o(r, t) ? e : a(n, t)
        }
    },
    9143: function(t, e, s) {},
    "915f": function(t, e, s) {
        "use strict";
        s("e174")
    },
    "91d3": function(t, e, s) {
        "use strict";
        s("af8d")
    },
    "922d": function(t, e, s) {},
    "926d": function(t, e, s) {},
    9270: function(t, e, s) {
        "use strict";
        s("4954")
    },
    "92f6": function(t, e, s) {
        "use strict";
        s("8c52")
    },
    "93ce": function(t, e, s) {
        "use strict";
        s("a0c6")
    },
    "93e9": function(t, e, s) {},
    9441: function(t, e, s) {},
    "94a0": function(t, e, s) {},
    "95d1": function(t, e, s) {},
    9614: function(t, e, s) {
        "use strict";
        s("6bbc")
    },
    "96ed": function(t, e, s) {
        "use strict";
        s("926d")
    },
    9762: function(t, e, s) {},
    9857: function(t, e, s) {
        "use strict";
        s("8ea8")
    },
    "995a": function(t, e, s) {
        "use strict";
        s("1da3")
    },
    "99db": function(t, e, s) {},
    "9adc": function(t, e, s) {
        "use strict";
        var a = s("8558");
        t.exports = "NODE" === a
    },
    "9c6d": function(t, e, s) {
        "use strict";
        s("0b3f")
    },
    "9c7b": function(t, e, s) {},
    "9cc7": function(t, e, s) {
        "use strict";
        s("2f2d")
    },
    "9d73": function(t, e, s) {},
    "9df9": function(t, e, s) {},
    "9dfa": function(t, e, s) {
        "use strict";
        s("c82a")
    },
    "9e86": function(t, e, s) {
        "use strict";
        s("82b3")
    },
    a021: function(t, e, s) {},
    a0c6: function(t, e, s) {},
    a1bd: function(t, e, s) {
        "use strict";
        s("3ef0")
    },
    a287: function(t, e, s) {},
    a3fd: function(t, e, s) {},
    a431: function(t, e, s) {},
    a50b: function(t, e, s) {},
    a537: function(t, e, s) {},
    a540: function(t, e, s) {},
    a552: function(t, e, s) {},
    a5c9: function(t, e, s) {
        "use strict";
        s("ad9e")
    },
    a5ca: function(t, e, s) {},
    a5ef: function(t, e, s) {
        "use strict";
        s("e9c5")
    },
    a640: function(t, e, s) {
        "use strict";
        var a = s("d039");
        t.exports = function(t, e) {
            var s = [][t];
            return !!s && a((function() {
                    s.call(null, e || function() {
                        return 1
                    }
                        , 1)
                }
            ))
        }
    },
    a733: function(t, e, s) {
        "use strict";
        s("79ed")
    },
    a745: function(t, e, s) {
        "use strict";
        s("c3ba")
    },
    a78b: function(t, e, s) {
        "use strict";
        s("4b79")
    },
    a951: function(t, e, s) {
        "use strict";
        s("c798")
    },
    a9c2: function(t, e, s) {},
    aa42: function(t, e, s) {
        "use strict";
        s("d728")
    },
    ab2f: function(t, e, s) {
        "use strict";
        s("f4d4")
    },
    ab3b: function(t, e, s) {
        "use strict";
        s("f1f9")
    },
    abd1: function(t, e, s) {
        "use strict";
        s("2868")
    },
    ad6d: function(t, e, s) {
        "use strict";
        var a = s("825a");
        t.exports = function() {
            var t = a(this)
                , e = "";
            return t.hasIndices && (e += "d"),
            t.global && (e += "g"),
            t.ignoreCase && (e += "i"),
            t.multiline && (e += "m"),
            t.dotAll && (e += "s"),
            t.unicode && (e += "u"),
            t.unicodeSets && (e += "v"),
            t.sticky && (e += "y"),
                e
        }
    },
    ad89: function(t, e, s) {
        "use strict";
        s("d071")
    },
    ad9e: function(t, e, s) {},
    adc0: function(t, e, s) {
        "use strict";
        s("692e")
    },
    ae34: function(t, e, s) {
        "use strict";
        s("f784")
    },
    aec0: function(t, e, s) {
        "use strict";
        s("cf48")
    },
    af01: function(t, e, s) {},
    af3d: function(t, e, s) {},
    af8d: function(t, e, s) {},
    afc3: function(t, e, s) {},
    afec: function(t, e, s) {
        "use strict";
        s("f6dc")
    },
    affd: function(t, e, s) {},
    b01a: function(t, e, s) {
        "use strict";
        s("5f75")
    },
    b01b: function(t, e, s) {},
    b0ec: function(t, e, s) {
        "use strict";
        s("3d21")
    },
    b233: function(t, e, s) {},
    b29c: function(t, e, s) {},
    b319: function(t, e, s) {},
    b35d: function(t, e, s) {
        "use strict";
        s("67b3")
    },
    b365: function(t, e, s) {
        "use strict";
        s("93e9")
    },
    b383: function(t, e, s) {
        "use strict";
        s("150e")
    },
    b3ac: function(t, e, s) {
        "use strict";
        s("d275")
    },
    b41f: function(t, e, s) {},
    b4e4: function(t, e, s) {},
    b4f2: function(t, e, s) {},
    b592: function(t, e, s) {},
    b593: function(t, e, s) {
        "use strict";
        s("af3d")
    },
    b59b: function(t, e, s) {
        "use strict";
        s("9c7b")
    },
    b5b3: function(t, e, s) {},
    b98b: function(t, e, s) {},
    b9ca: function(t, e, s) {},
    ba68: function(t, e, s) {},
    bc98: function(t, e, s) {},
    be13: function(t, e, s) {
        "use strict";
        s("77d1")
    },
    be43: function(t, e, s) {
        "use strict";
        s("fa87")
    },
    be46: function(t, e, s) {},
    c28d: function(t, e, s) {
        "use strict";
        s("dc41")
    },
    c2cd: function(t, e, s) {
        "use strict";
        s("7278")
    },
    c3ba: function(t, e, s) {},
    c487: function(t, e, s) {
        "use strict";
        s("3f36")
    },
    c4e7: function(t, e, s) {
        "use strict";
        s("b4f2")
    },
    c678: function(t, e, s) {
        "use strict";
        s("3e0b")
    },
    c70a: function(t, e, s) {},
    c73d: function(t, e, s) {
        "use strict";
        var a = s("23e7")
            , i = s("cfe9")
            , o = s("edd0")
            , n = s("83ab")
            , r = TypeError
            , l = Object.defineProperty
            , c = i.self !== i;
        try {
            if (n) {
                var d = Object.getOwnPropertyDescriptor(i, "self");
                !c && d && d.get && d.enumerable || o(i, "self", {
                    get: function() {
                        return i
                    },
                    set: function(t) {
                        if (this !== i)
                            throw new r("Illegal invocation");
                        l(i, "self", {
                            value: t,
                            writable: !0,
                            configurable: !0,
                            enumerable: !0
                        })
                    },
                    configurable: !0,
                    enumerable: !0
                })
            } else
                a({
                    global: !0,
                    simple: !0,
                    forced: c
                }, {
                    self: i
                })
        } catch (u) {}
    },
    c798: function(t, e, s) {},
    c82a: function(t, e, s) {},
    ca0a: function(t, e, s) {
        "use strict";
        s("1dbc")
    },
    cab0: function(t, e, s) {},
    cad4: function(t, e, s) {
        "use strict";
        s("30af")
    },
    cb49: function(t, e, s) {
        "use strict";
        s("6f22")
    },
    ccfc: function(t, e, s) {
        s("d9e2"),
            s("14d9"),
            s("c73d"),
            function(t, s) {
                s(e)
            }(0, (function(t) {
                    "use strict";
                    function e(t, s) {
                        const a = Object.assign({}, t);
                        for (const i in s)
                            "object" != typeof t[i] || null === t[i] || Array.isArray(t[i]) ? void 0 !== s[i] && (a[i] = s[i]) : a[i] = e(t[i], s[i]);
                        return a
                    }
                    const s = {
                        mobile: {
                            disabled_features: ["left_toolbar", "header_widget", "timeframes_toolbar", "edit_buttons_in_legend", "context_menus", "control_bar", "border_around_the_chart"],
                            enabled_features: []
                        }
                    }
                        , a = {
                        width: 800,
                        height: 500,
                        interval: "1D",
                        timezone: "Etc/UTC",
                        container: "",
                        library_path: "",
                        locale: "en",
                        widgetbar: {
                            details: !1,
                            watchlist: !1,
                            watchlist_settings: {
                                default_symbols: []
                            }
                        },
                        overrides: {
                            "mainSeriesProperties.showCountdown": !1
                        },
                        studies_overrides: {},
                        trading_customization: {
                            position: {},
                            order: {}
                        },
                        brokerConfig: {
                            configFlags: {}
                        },
                        fullscreen: !1,
                        autosize: !1,
                        disabled_features: [],
                        enabled_features: [],
                        debug: !1,
                        logo: {},
                        time_frames: [{
                            text: "5y",
                            resolution: "1W"
                        }, {
                            text: "1y",
                            resolution: "1W"
                        }, {
                            text: "6m",
                            resolution: "120"
                        }, {
                            text: "3m",
                            resolution: "60"
                        }, {
                            text: "1m",
                            resolution: "30"
                        }, {
                            text: "5d",
                            resolution: "5"
                        }, {
                            text: "1d",
                            resolution: "1"
                        }],
                        client_id: "0",
                        user_id: "0",
                        charts_storage_api_version: "1.0",
                        favorites: {
                            intervals: [],
                            chartTypes: []
                        }
                    };
                    function i() {
                        return "CL v20.029 (internal id c7e6d52b @ 2021-09-16T11:38:03.852Z)"
                    }
                    const o = class {
                            constructor(t) {
                                if (this._id = "tradingview_" + (1048576 * (1 + Math.random()) | 0).toString(16).substring(1),
                                    this._ready = !1,
                                    this._readyHandlers = [],
                                    this._onWindowResize = this._autoResizeChart.bind(this),
                                    !t.datafeed)
                                    throw new Error("Datafeed is not defined");
                                if (this._options = e(a, t),
                                    t.preset) {
                                    const e = s[t.preset];
                                    e ? (void 0 !== this._options.disabled_features ? this._options.disabled_features = this._options.disabled_features.concat(e.disabled_features) : this._options.disabled_features = e.disabled_features,
                                        void 0 !== this._options.enabled_features ? this._options.enabled_features = this._options.enabled_features.concat(e.enabled_features) : this._options.enabled_features = e.enabled_features) : console.warn("Unknown preset: `" + t.preset + "`")
                                }
                                "Dark" === this._options.theme && void 0 === this._options.loading_screen && (this._options.loading_screen = {
                                    backgroundColor: "#181f2d"
                                }),
                                    this._create()
                            }
                            onChartReady(t) {
                                this._ready ? t.call(this) : this._readyHandlers.push(t)
                            }
                            headerReady() {
                                return this._innerWindowLoaded.then( () => this._innerWindow().headerReady())
                            }
                            onGrayedObjectClicked(t) {
                                this._innerAPI().onGrayedObjectClicked(t)
                            }
                            onShortcut(t, e) {
                                this._innerWindow().createShortcutAction(t, e)
                            }
                            subscribe(t, e) {
                                this._innerAPI().subscribe(t, e)
                            }
                            unsubscribe(t, e) {
                                this._innerAPI().unsubscribe(t, e)
                            }
                            chart(t) {
                                return this._innerAPI().chart(t)
                            }
                            getLanguage() {
                                return this._options.locale
                            }
                            setSymbol(t, e, s) {
                                this._innerAPI().changeSymbol(t, e, s)
                            }
                            remove() {
                                window.removeEventListener("resize", this._onWindowResize),
                                    this._readyHandlers.splice(0, this._readyHandlers.length),
                                    delete window[this._id],
                                this._iFrame.parentNode && this._iFrame.parentNode.removeChild(this._iFrame)
                            }
                            closePopupsAndDialogs() {
                                this._innerAPI().closePopupsAndDialogs()
                            }
                            selectLineTool(t) {
                                this._innerAPI().selectLineTool(t)
                            }
                            selectedLineTool() {
                                return this._innerAPI().selectedLineTool()
                            }
                            save(t) {
                                this._innerAPI().saveChart(t)
                            }
                            load(t, e) {
                                this._innerAPI().loadChart({
                                    json: t,
                                    extendedData: e
                                })
                            }
                            getSavedCharts(t) {
                                this._innerAPI().getSavedCharts(t)
                            }
                            loadChartFromServer(t) {
                                this._innerAPI().loadChartFromServer(t)
                            }
                            saveChartToServer(t, e, s) {
                                this._innerAPI().saveChartToServer(t, e, s)
                            }
                            removeChartFromServer(t, e) {
                                this._innerAPI().removeChartFromServer(t, e)
                            }
                            onContextMenu(t) {
                                this._innerAPI().onContextMenu(t)
                            }
                            createButton(t) {
                                return this._innerWindow().createButton(t)
                            }
                            showNoticeDialog(t) {
                                this._innerAPI().showNoticeDialog(t)
                            }
                            showConfirmDialog(t) {
                                this._innerAPI().showConfirmDialog(t)
                            }
                            showLoadChartDialog() {
                                this._innerAPI().showLoadChartDialog()
                            }
                            showSaveAsChartDialog() {
                                this._innerAPI().showSaveAsChartDialog()
                            }
                            symbolInterval() {
                                return this._innerAPI().getSymbolInterval()
                            }
                            mainSeriesPriceFormatter() {
                                return this._innerAPI().mainSeriesPriceFormatter()
                            }
                            getIntervals() {
                                return this._innerAPI().getIntervals()
                            }
                            getStudiesList() {
                                return this._innerAPI().getStudiesList()
                            }
                            addCustomCSSFile(t) {
                                this._innerWindow().addCustomCSSFile(t)
                            }
                            applyOverrides(t) {
                                this._options = e(this._options, {
                                    overrides: t
                                }),
                                    this._innerWindow().applyOverrides(t)
                            }
                            applyStudiesOverrides(t) {
                                this._innerWindow().applyStudiesOverrides(t)
                            }
                            watchList() {
                                return this._innerAPI().watchlist()
                            }
                            activeChart() {
                                return this._innerAPI().activeChart()
                            }
                            chartsCount() {
                                return this._innerAPI().chartsCount()
                            }
                            layout() {
                                return this._innerAPI().layout()
                            }
                            setLayout(t) {
                                this._innerAPI().setLayout(t)
                            }
                            layoutName() {
                                return this._innerAPI().layoutName()
                            }
                            changeTheme(t, e) {
                                this._innerWindow().changeTheme(t, e)
                            }
                            getTheme() {
                                return this._innerWindow().getTheme()
                            }
                            takeScreenshot() {
                                this._innerAPI().takeScreenshot()
                            }
                            lockAllDrawingTools() {
                                return this._innerAPI().lockAllDrawingTools()
                            }
                            hideAllDrawingTools() {
                                return this._innerAPI().hideAllDrawingTools()
                            }
                            drawOnAllCharts(t) {
                                this._innerAPI().drawOnAllCharts(t)
                            }
                            magnetEnabled() {
                                return this._innerAPI().magnetEnabled()
                            }
                            magnetMode() {
                                return this._innerAPI().magnetMode()
                            }
                            undoRedoState() {
                                return this._innerAPI().undoRedoState()
                            }
                            setIntervalLinkingEnabled(t) {
                                this._innerAPI().setIntervalLinkingEnabled(t)
                            }
                            setTimeFrame(t) {
                                this._innerAPI().setTimeFrame(t)
                            }
                            symbolSync() {
                                return this._innerAPI().symbolSync()
                            }
                            intervalSync() {
                                return this._innerAPI().intervalSync()
                            }
                            crosshairSync() {
                                return this._innerAPI().crosshairSync()
                            }
                            timeSync() {
                                return this._innerAPI().timeSync()
                            }
                            getAllFeatures() {
                                return this._innerWindow().getAllFeatures()
                            }
                            clearUndoHistory() {
                                return this._innerAPI().clearUndoHistory()
                            }
                            undo() {
                                return this._innerAPI().undo()
                            }
                            redo() {
                                return this._innerAPI().redo()
                            }
                            startFullscreen() {
                                this._innerAPI().startFullscreen()
                            }
                            exitFullscreen() {
                                this._innerAPI().exitFullscreen()
                            }
                            takeClientScreenshot(t) {
                                return this._innerAPI().takeClientScreenshot(t)
                            }
                            _innerAPI() {
                                return this._innerWindow().tradingViewApi
                            }
                            _innerWindow() {
                                return this._iFrame.contentWindow
                            }
                            _autoResizeChart() {
                                this._options.fullscreen && (this._iFrame.style.height = window.innerHeight + "px")
                            }
                            _create() {
                                const t = this._render();
                                this._options.container_id && console.warn("`container_id` is now deprecated. Please use `container` instead to either still pass a string or an `HTMLElement`.");
                                const e = this._options.container_id || this._options.container
                                    , s = "string" == typeof e ? document.getElementById(e) : e;
                                if (null === s)
                                    throw new Error("There is no such element - #" + this._options.container);
                                s.innerHTML = t,
                                    this._iFrame = s.querySelector("#" + this._id);
                                const a = this._iFrame;
                                (this._options.autosize || this._options.fullscreen) && (a.style.width = "100%",
                                this._options.fullscreen || (a.style.height = "100%")),
                                    window.addEventListener("resize", this._onWindowResize),
                                    this._onWindowResize(),
                                    this._innerWindowLoaded = new Promise(t => {
                                            const e = () => {
                                                    a.removeEventListener("load", e, !1),
                                                        t()
                                                }
                                            ;
                                            a.addEventListener("load", e, !1)
                                        }
                                    ),
                                    this._innerWindowLoaded.then( () => {
                                            this._innerWindow().widgetReady( () => {
                                                    this._ready = !0;
                                                    for (const e of this._readyHandlers)
                                                        try {
                                                            e.call(this)
                                                        } catch (t) {
                                                            console.error(t)
                                                        }
                                                    this._innerWindow().initializationFinished()
                                                }
                                            )
                                        }
                                    )
                            }
                            _render() {
                                const t = window;
                                if (t[this._id] = {
                                    datafeed: this._options.datafeed,
                                    customFormatters: this._options.custom_formatters || this._options.customFormatters,
                                    brokerFactory: this._options.broker_factory || this._options.brokerFactory,
                                    overrides: this._options.overrides,
                                    studiesOverrides: this._options.studies_overrides,
                                    tradingCustomization: this._options.trading_customization,
                                    disabledFeatures: this._options.disabled_features,
                                    enabledFeatures: this._options.enabled_features,
                                    brokerConfig: this._options.broker_config || this._options.brokerConfig,
                                    restConfig: this._options.restConfig,
                                    favorites: this._options.favorites,
                                    logo: this._options.logo,
                                    numeric_formatting: this._options.numeric_formatting,
                                    rss_news_feed: this._options.rss_news_feed,
                                    newsProvider: this._options.news_provider,
                                    loadLastChart: this._options.load_last_chart,
                                    saveLoadAdapter: this._options.save_load_adapter,
                                    loading_screen: this._options.loading_screen,
                                    settingsAdapter: this._options.settings_adapter,
                                    getCustomIndicators: this._options.custom_indicators_getter,
                                    additionalSymbolInfoFields: this._options.additional_symbol_info_fields,
                                    headerWidgetButtonsMode: this._options.header_widget_buttons_mode
                                },
                                    this._options.saved_data)
                                    t[this._id].chartContent = {
                                        json: this._options.saved_data
                                    },
                                    this._options.saved_data_meta_info && (t[this._id].chartContentExtendedData = this._options.saved_data_meta_info);
                                else if (!this._options.load_last_chart && !this._options.symbol)
                                    throw new Error("Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set");
                                const e = "/tradingview/" + encodeURIComponent(this._options.locale) + "-tv-chart.c7e6d52b.html#symbol=" + encodeURIComponent(this._options.symbol || "") + "&interval=" + encodeURIComponent(this._options.interval) + (this._options.timeframe ? "&timeframe=" + encodeURIComponent(this._options.timeframe) : "") + (this._options.toolbar_bg ? "&toolbarbg=" + encodeURIComponent(this._options.toolbar_bg.replace("#", "")) : "") + (this._options.studies_access ? "&studiesAccess=" + encodeURIComponent(JSON.stringify(this._options.studies_access)) : "") + "&widgetbar=" + encodeURIComponent(JSON.stringify(this._options.widgetbar)) + (this._options.drawings_access ? "&drawingsAccess=" + encodeURIComponent(JSON.stringify(this._options.drawings_access)) : "") + "&timeFrames=" + encodeURIComponent(JSON.stringify(this._options.time_frames)) + "&locale=" + encodeURIComponent(this._options.locale) + "&uid=" + encodeURIComponent(this._id) + "&clientId=" + encodeURIComponent(String(this._options.client_id)) + "&userId=" + encodeURIComponent(String(this._options.user_id)) + (this._options.charts_storage_url ? "&chartsStorageUrl=" + encodeURIComponent(this._options.charts_storage_url) : "") + (this._options.charts_storage_api_version ? "&chartsStorageVer=" + encodeURIComponent(this._options.charts_storage_api_version) : "") + (this._options.custom_css_url ? "&customCSS=" + encodeURIComponent(this._options.custom_css_url) : "") + (this._options.auto_save_delay ? "&autoSaveDelay=" + encodeURIComponent(String(this._options.auto_save_delay)) : "") + "&debug=" + encodeURIComponent(String(this._options.debug)) + (this._options.snapshot_url ? "&snapshotUrl=" + encodeURIComponent(this._options.snapshot_url) : "") + (this._options.timezone ? "&timezone=" + encodeURIComponent(this._options.timezone) : "") + (this._options.study_count_limit ? "&studyCountLimit=" + encodeURIComponent(String(this._options.study_count_limit)) : "") + (this._options.symbol_search_request_delay ? "&ssreqdelay=" + encodeURIComponent(String(this._options.symbol_search_request_delay)) : "") + (this._options.compare_symbols ? "&compareSymbols=" + encodeURIComponent(JSON.stringify(this._options.compare_symbols)) : "") + (this._options.theme ? "&theme=" + encodeURIComponent(String(this._options.theme)) : "") + (this._options.header_widget_buttons_mode ? "&header_widget_buttons_mode=" + encodeURIComponent(String(this._options.header_widget_buttons_mode)) : "") + (this._options.time_scale ? "&time_scale=" + encodeURIComponent(JSON.stringify(this._options.time_scale)) : "");
                                return '<iframe id="' + this._id + '" name="' + this._id + '"  src="' + e + '"' + (this._options.autosize || this._options.fullscreen ? "" : ' width="' + this._options.width + '" height="' + this._options.height + '"') + ' frameborder="0" allowTransparency="true" scrolling="no" allowfullscreen style="display:block;"></iframe>'
                            }
                        }
                    ;
                    window.TradingView = window.TradingView || {},
                        window.TradingView.version = i,
                        t.version = i,
                        t.widget = o,
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        })
                }
            ))
    },
    cd32: function(t, e, s) {},
    cdc2: function(t, e, s) {
        "use strict";
        s("fed7")
    },
    ce0c: function(t, e, s) {
        "use strict";
        s("ec2f")
    },
    cedb: function(t, e, s) {
        "use strict";
        s("6060")
    },
    cf48: function(t, e, s) {},
    cfa6: function(t, e, s) {
        "use strict";
        s("f3ad")
    },
    d00c: function(t, e, s) {},
    d071: function(t, e, s) {},
    d0e9: function(t, e, s) {},
    d1f6: function(t, e, s) {},
    d275: function(t, e, s) {},
    d299: function(t, e, s) {},
    d359: function(t, e, s) {},
    d3fe: function(t, e, s) {},
    d505: function(t, e, s) {
        "use strict";
        s("cab0")
    },
    d517: function(t, e, s) {
        "use strict";
        s("8756")
    },
    d58f: function(t, e, s) {
        "use strict";
        var a = s("59ed")
            , i = s("7b0b")
            , o = s("44ad")
            , n = s("07fa")
            , r = TypeError
            , l = "Reduce of empty array with no initial value"
            , c = function(t) {
            return function(e, s, c, d) {
                var u = i(e)
                    , m = o(u)
                    , p = n(u);
                if (a(s),
                0 === p && c < 2)
                    throw new r(l);
                var h = t ? p - 1 : 0
                    , v = t ? -1 : 1;
                if (c < 2)
                    while (1) {
                        if (h in m) {
                            d = m[h],
                                h += v;
                            break
                        }
                        if (h += v,
                            t ? h < 0 : p <= h)
                            throw new r(l)
                    }
                for (; t ? h >= 0 : p > h; h += v)
                    h in m && (d = s(d, m[h], h, u));
                return d
            }
        };
        t.exports = {
            left: c(!1),
            right: c(!0)
        }
    },
    d681: function(t, e, s) {
        "use strict";
        s("a5ca")
    },
    d6d6: function(t, e, s) {
        "use strict";
        var a = TypeError;
        t.exports = function(t, e) {
            if (t < e)
                throw new a("Not enough arguments");
            return t
        }
    },
    d728: function(t, e, s) {},
    d7f6: function(t, e, s) {},
    d923: function(t, e, s) {
        "use strict";
        s("2809")
    },
    d9d9: function(t, e, s) {},
    d9fd: function(t, e, s) {
        "use strict";
        s("8e7c")
    },
    db6f: function(t, e, s) {},
    dbe5: function(t, e, s) {
        "use strict";
        s("35c6")
    },
    dc41: function(t, e, s) {},
    dc8d: function(t, e, s) {
        "use strict";
        s("84ca")
    },
    dc93: function(t, e, s) {
        "use strict";
        s("b01b")
    },
    dce2: function(t, e, s) {},
    dd3f: function(t, e, s) {
        "use strict";
        s("449e")
    },
    dd91: function(t, e, s) {
        "use strict";
        s("8e1c")
    },
    de62: function(t, e, s) {
        "use strict";
        s("922d")
    },
    deb8: function(t, e, s) {},
    df75: function(t, e, s) {
        "use strict";
        var a = s("ca84")
            , i = s("7839");
        t.exports = Object.keys || function(t) {
            return a(t, i)
        }
    },
    df91: function(t, e, s) {
        "use strict";
        s("a3fd")
    },
    e099: function(t, e) {
        !function() {
            "use strict";
            var e = {
                d: function(t, s) {
                    for (var a in s)
                        e.o(s, a) && !e.o(t, a) && Object.defineProperty(t, a, {
                            enumerable: !0,
                            get: s[a]
                        })
                },
                o: function(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                },
                r: function(t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module"
                    }),
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        })
                }
            }
                , s = {};
            e.r(s),
                e.d(s, {
                    default: function() {
                        return It
                    }
                });
            var a = function() {
                var t = this
                    , e = t._self._c;
                return t.isOpen ? e("div", {
                    ref: "container",
                    staticClass: "fslightbox-container fslightbox-full-dimension fslightbox-fade-in-strong"
                }, [e("Naver", {
                    attrs: {
                        i: t.i
                    }
                }), t._v(" "), e("Swc", {
                    attrs: {
                        i: t.i
                    }
                }), t._v(" "), e("SlideButtons", {
                    attrs: {
                        i: t.i
                    }
                }), t._v(" "), e("SlideSwipingHoverer", {
                    attrs: {
                        i: t.i
                    }
                })], 1) : t._e()
            };
            a._withStripped = !0;
            var i = "fslightbox-"
                , o = "".concat(i, "styles")
                , n = "".concat(i, "cursor-grabbing")
                , r = "".concat(i, "open")
                , l = "".concat(i, "fade-in")
                , c = "".concat(i, "fade-out")
                , d = c + "-strong"
                , u = "".concat(i, "opacity-")
                , m = "".concat(u, "1")
                , p = "".concat(i, "source");
            function h() {
                var t = document.createElement("style");
                t.className = o,
                    t.appendChild(document.createTextNode(".fslightbox-absoluted{position:absolute;top:0;left:0}.fslightbox-fade-in{animation:fslightbox-fade-in .3s cubic-bezier(0, 0, 0.7, 1)}.fslightbox-fade-out{animation:fslightbox-fade-out .3s ease}.fslightboxfis{animation:fslightboxfis .3s cubic-bezier(0, 0, 0.7, 1)}.fslightbox-fade-out-strong{animation:fslightbox-fade-out-strong .3s ease}@keyframes fslightbox-fade-in{from{opacity:.65}to{opacity:1}}@keyframes fslightbox-fade-out{from{opacity:.35}to{opacity:0}}@keyframes fslightboxfis{from{opacity:.3}to{opacity:1}}@keyframes fslightbox-fade-out-strong{from{opacity:1}to{opacity:0}}.fslightbox-cursor-grabbing{cursor:grabbing}.fslightbox-full-dimension{width:100%;height:100%}.fslightbox-open{overflow:hidden;height:100%}.fslightbox-flex-centered{display:flex;justify-content:center;align-items:center}.fslightbox-opacity-0{opacity:0 !important}.fslightbox-opacity-1{opacity:1 !important}.fslightbox-scrollbarfix{padding-right:17px}.fslightboxtt{transition:transform .3s}.fslightbox-container{font-family:Arial,sans-serif;position:fixed;top:0;left:0;background:linear-gradient(rgba(30, 30, 30, 0.9), black 1810%);z-index:9999999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:none;-webkit-tap-highlight-color:transparent}.fslightbox-container *{box-sizing:border-box}.fslightbox-svg-path{transition:fill .15s ease;fill:#ddd}.fslightbox-nav{height:45px;width:100%;position:absolute;top:0;left:0}.fslightbox-slide-number-container{display:flex;justify-content:center;align-items:center;position:relative;height:100%;font-size:15px;color:#d7d7d7;z-index:0;max-width:55px;text-align:left}.fslightbox-slide-number-container .fslightbox-flex-centered{height:100%}.fslightbox-slash{display:block;margin:0 5px;width:1px;height:12px;transform:rotate(15deg);background:#fff}.fslightbox-toolbar{position:absolute;z-index:3;right:0;top:0;height:100%;display:flex;background:rgba(35,35,35,.65)}.fslightbox-toolbar-button{height:100%;width:45px;cursor:pointer}.fslightbox-toolbar-button:hover .fslightbox-svg-path{fill:#fff}.fslightbox-slide-btn-container{display:flex;align-items:center;padding:12px 12px 12px 6px;position:absolute;top:50%;cursor:pointer;z-index:3;transform:translateY(-50%)}@media(min-width: 476px){.fslightbox-slide-btn-container{padding:22px 22px 22px 6px}}@media(min-width: 768px){.fslightbox-slide-btn-container{padding:30px 30px 30px 6px}}.fslightbox-slide-btn-container:hover .fslightbox-svg-path{fill:#f1f1f1}.fslightbox-slide-btn{padding:9px;font-size:26px;background:rgba(35,35,35,.65)}@media(min-width: 768px){.fslightbox-slide-btn{padding:10px}}@media(min-width: 1600px){.fslightbox-slide-btn{padding:11px}}.fslightbox-slide-btn-previous-container{left:0}@media(max-width: 475.99px){.fslightbox-slide-btn-previous-container{padding-left:3px}}.fslightbox-slide-btn-next-container{right:0;padding-left:12px;padding-right:3px}@media(min-width: 476px){.fslightbox-slide-btn-next-container{padding-left:22px}}@media(min-width: 768px){.fslightbox-slide-btn-next-container{padding-left:30px}}@media(min-width: 476px){.fslightbox-slide-btn-next-container{padding-right:6px}}.fslightbox-down-event-detector{position:absolute;z-index:1}.fslightbox-slide-swiping-hoverer{z-index:4}.fslightboxin{font-size:22px;color:#eaebeb;margin:auto}.fslightbox-video{object-fit:cover}.fslightboxl{display:block;margin:auto;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:67px;height:67px}.fslightboxl div{box-sizing:border-box;display:block;position:absolute;width:54px;height:54px;margin:6px;border:5px solid;border-color:#999 transparent transparent transparent;border-radius:50%;animation:fslightboxl 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite}.fslightboxl div:nth-child(1){animation-delay:-0.45s}.fslightboxl div:nth-child(2){animation-delay:-0.3s}.fslightboxl div:nth-child(3){animation-delay:-0.15s}@keyframes fslightboxl{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.fslightbox-source{position:relative;z-index:2;opacity:0;transform:translateZ(0);margin:auto;backface-visibility:hidden}")),
                    document.head.appendChild(t)
            }
            function v(t) {
                return v = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                        return typeof t
                    }
                    : function(t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }
                    ,
                    v(t)
            }
            "object" === ("undefined" == typeof document ? "undefined" : v(document)) && h();
            var f = []
                , g = "fslightbox-types";
            function b(t) {
                var e, s = t.props, a = 0, i = {};
                this.getSourceTypeFromLocalStorageByUrl = function(t) {
                    return e[t] ? e[t] : o(t)
                }
                    ,
                    this.handleReceivedSourceTypeForUrl = function(t, s) {
                        if (!1 === i[s] && (a--,
                            "invalid" !== t ? i[s] = t : delete i[s],
                        0 === a)) {
                            !function(t, e) {
                                for (var s in e)
                                    t[s] = e[s]
                            }(e, i);
                            try {
                                localStorage.setItem(g, JSON.stringify(e))
                            } catch (t) {}
                        }
                    }
                ;
                var o = function(t) {
                    a++,
                        i[t] = !1
                };
                if (s.disableLocalStorage)
                    this.getSourceTypeFromLocalStorageByUrl = function() {}
                        ,
                        this.handleReceivedSourceTypeForUrl = function() {}
                    ;
                else {
                    try {
                        e = JSON.parse(localStorage.getItem(g))
                    } catch (t) {}
                    e || (e = {},
                        this.getSourceTypeFromLocalStorageByUrl = o)
                }
            }
            var y = "image"
                , _ = "video"
                , C = "youtube"
                , w = "custom"
                , k = "invalid";
            function S(t) {
                var e = t.componentsServices.isLightboxOpenManager
                    , s = t.elements.sourcesComponents
                    , a = t.sawu;
                this.runActionsForSourceTypeAndIndex = function(t, i) {
                    var o;
                    switch (t) {
                        case y:
                            o = "I";
                            break;
                        case _:
                            o = "V";
                            break;
                        case C:
                            o = "Y";
                            break;
                        case w:
                            o = "C";
                            break;
                        default:
                            o = "In"
                    }
                    s[i] = o,
                    e.get() && a[i]()
                }
            }
            function x(t, e, s) {
                var a = t.props
                    , i = a.types
                    , o = a.type
                    , n = a.sources;
                this.getTypeSetByClientForIndex = function(t) {
                    var e;
                    return i && i[t] ? e = i[t] : o && (e = o),
                        e
                }
                    ,
                    this.retrieveTypeWithXhrForIndex = function(t) {
                        !function(t, e) {
                            var s = document.createElement("a");
                            s.href = t;
                            var a = s.hostname;
                            if ("www.youtube.com" === a || "youtu.be" === a)
                                return e(C);
                            var i = new XMLHttpRequest;
                            i.onreadystatechange = function() {
                                if (4 !== i.readyState) {
                                    if (2 === i.readyState) {
                                        var t, s = i.getResponseHeader("content-type");
                                        switch (s.slice(0, s.indexOf("/"))) {
                                            case "image":
                                                t = y;
                                                break;
                                            case "video":
                                                t = _;
                                                break;
                                            default:
                                                t = k
                                        }
                                        i.onreadystatechange = null,
                                            i.abort(),
                                            e(t)
                                    }
                                } else
                                    e(k)
                            }
                                ,
                                i.open("GET", t),
                                i.send()
                        }(n[t], (function(a) {
                                e.handleReceivedSourceTypeForUrl(a, n[t]),
                                    s.runActionsForSourceTypeAndIndex(a, t)
                            }
                        ))
                    }
            }
            function M(t) {
                var e = this
                    , s = t.componentsServices
                    , a = s.isFullscreenOpenManager
                    , i = s.isLightboxOpenManager
                    , o = t.core
                    , n = o.eventsDispatcher
                    , l = o.globalEventsController
                    , c = o.scrollbarRecompensor
                    , u = t.elements
                    , m = t.fs
                    , p = t.props
                    , h = t.sourcePointerProps
                    , v = t.timeout;
                this.isLightboxFadingOut = !1,
                    this.runActions = function() {
                        e.isLightboxFadingOut = !0,
                            u.container.classList.add(d),
                            l.removeListeners(),
                        p.exitFullscreenOnClose && a.get() && m.exitFullscreen(),
                            v((function() {
                                    e.isLightboxFadingOut = !1,
                                        h.isPointering = !1,
                                        u.container.classList.remove(d),
                                        document.documentElement.classList.remove(r),
                                        c.removeRecompense(),
                                        i.set(!1),
                                        n.dispatch("onClose")
                                }
                            ), 270)
                    }
            }
            function A(t) {
                var e = t.core
                    , s = e.lightboxCloser
                    , a = e.slideChangeFacade
                    , i = t.fs;
                this.listener = function(t) {
                    switch (t.key) {
                        case "Escape":
                            s.closeLightbox();
                            break;
                        case "ArrowLeft":
                            a.changeToPrevious();
                            break;
                        case "ArrowRight":
                            a.changeToNext();
                            break;
                        case "F11":
                            t.preventDefault(),
                                i.toggleFullscreen()
                    }
                }
            }
            function D(t) {
                var e = t.componentsServices
                    , s = t.elements
                    , a = t.smw
                    , i = t.sourcePointerProps
                    , o = t.stageIndexes;
                function r(t, e) {
                    a[t].v(i.swipedX)[e]()
                }
                this.runActionsForEvent = function(t) {
                    e.showSlideSwipingHoverer(),
                        s.container.classList.add(n),
                        i.swipedX = t.screenX - i.downScreenX,
                        r(o.current, "z"),
                        void 0 !== o.previous && i.swipedX > 0 ? r(o.previous, "ne") : void 0 !== o.next && i.swipedX < 0 && r(o.next, "p")
                }
            }
            function P(t) {
                var e = t.props.sources
                    , s = t.resolve
                    , a = t.sourcePointerProps
                    , i = s(D);
                1 === e.length ? this.listener = function() {
                        a.swipedX = 1
                    }
                    : this.listener = function(t) {
                        a.isPointering && i.runActionsForEvent(t)
                    }
            }
            function T(t) {
                var e = t.core.slideIndexChanger
                    , s = t.smw
                    , a = t.stageIndexes
                    , i = t.sws;
                function o(t) {
                    var e = s[a.current];
                    e.a(),
                        e[t]()
                }
                function n(t, e) {
                    void 0 !== t && (s[t].s(),
                        s[t][e]())
                }
                this.p = function() {
                    var t = a.previous;
                    if (void 0 === t)
                        o("z");
                    else {
                        o("p");
                        var s = a.next;
                        e.changeTo(t);
                        var r = a.previous;
                        i.d(r),
                            i.b(s),
                            o("z"),
                            n(r, "ne")
                    }
                }
                    ,
                    this.n = function() {
                        var t = a.next;
                        if (void 0 === t)
                            o("z");
                        else {
                            o("ne");
                            var s = a.previous;
                            e.changeTo(t);
                            var r = a.next;
                            i.d(r),
                                i.b(s),
                                o("z"),
                                n(r, "p")
                        }
                    }
            }
            function L(t) {
                var e = t.componentsServices
                    , s = t.core.lightboxCloser
                    , a = t.elements
                    , i = t.resolve
                    , o = t.sourcePointerProps
                    , r = i(T);
                this.runNoSwipeActions = function() {
                    e.hideSlideSwipingHoverer(),
                    o.isSourceDownEventTarget || s.closeLightbox(),
                        o.isPointering = !1
                }
                    ,
                    this.runActions = function() {
                        o.swipedX > 0 ? r.p() : r.n(),
                            e.hideSlideSwipingHoverer(),
                            a.container.classList.remove(n),
                            o.isPointering = !1
                    }
            }
            function I(t) {
                var e = t.resolve
                    , s = t.sourcePointerProps
                    , a = e(L);
                this.listener = function() {
                    s.isPointering && (s.swipedX ? a.runActions() : a.runNoSwipeActions())
                }
            }
            function F(t, e) {
                var s = t.classList;
                s.contains(e) && s.remove(e)
            }
            function O(t, e, s) {
                for (var a = 0; a < t.props.sources.length; a++)
                    t.collections[e][a] = t.resolve(s, [a])
            }
            function B(t, e, s, a) {
                var i = t.data
                    , o = t.elements.sources
                    , n = s / a
                    , r = 0;
                this.adjustSize = function() {
                    if ((r = i.maxSourceWidth / n) < i.maxSourceHeight)
                        return s < i.maxSourceWidth && (r = a),
                            l();
                    r = a > i.maxSourceHeight ? i.maxSourceHeight : a,
                        l()
                }
                ;
                var l = function() {
                    var t = o[e].style;
                    t.width = r * n + "px",
                        t.height = r + "px"
                }
            }
            function N(t, e) {
                var s = this
                    , a = t.collections.sourceSizers
                    , i = t.elements.sources
                    , o = t.isl
                    , n = t.resolve
                    , r = t.saw
                    , l = t.sawu;
                function c(t, s) {
                    a[e] = n(B, [e, t, s]),
                        a[e].adjustSize()
                }
                this.runActions = function(t, a) {
                    o[e] = !0,
                        l[e](),
                        i[e].classList.add(m),
                        r[e].classList.add("fslightboxfis"),
                        c(t, a),
                        s.runActions = c
                }
            }
            function $(t, e) {
                var s, a = this, i = t.elements.sources, o = t.props, n = (0,
                    t.resolve)(N, [e]);
                this.handleImageLoad = function(t) {
                    var e = t.target
                        , s = e.naturalWidth
                        , a = e.naturalHeight;
                    n.runActions(s, a)
                }
                    ,
                    this.handleVideoLoad = function(t) {
                        var e = t.target
                            , a = e.videoWidth
                            , i = e.videoHeight;
                        s = !0,
                            n.runActions(a, i)
                    }
                    ,
                    this.handleNotMetaDatedVideoLoad = function() {
                        s || a.handleYoutubeLoad()
                    }
                    ,
                    this.handleYoutubeLoad = function() {
                        var t = 1920
                            , e = 1080;
                        o.maxYoutubeVideoDimensions && (t = o.maxYoutubeVideoDimensions.width,
                            e = o.maxYoutubeVideoDimensions.height),
                            n.runActions(t, e)
                    }
                    ,
                    this.handleCustomLoad = function() {
                        var t = i[e];
                        if (t) {
                            var s = t.offsetWidth
                                , o = t.offsetHeight;
                            s && o ? n.runActions(s, o) : setTimeout(a.handleCustomLoad)
                        }
                    }
            }
            function V(t) {
                var e = t.componentsServices.isLightboxOpenManager
                    , s = t.core
                    , a = s.eventsDispatcher
                    , i = s.globalEventsController
                    , o = s.scrollbarRecompensor
                    , n = s.sourceDisplayFacade
                    , r = s.windowResizeActioner
                    , d = (t.elements,
                    t.st)
                    , u = t.stageIndexes
                    , m = t.sws;
                function p() {
                    n.displaySourcesWhichShouldBeDisplayed(),
                        document.documentElement.classList.add("fslightbox-open"),
                        o.addRecompense(),
                        i.attachListeners(),
                        r.runActions(),
                        a.dispatch("onOpen")
                }
                t.o = function() {
                    O(t, "sourceLoadHandlers", $),
                        e.set(!0, (function() {
                                m.b(u.previous),
                                    m.b(u.current),
                                    m.b(u.next),
                                    d.u(),
                                    m.c(),
                                    m.a(),
                                    p(),
                                    a.dispatch("onShow")
                            }
                        ))
                }
                    ,
                    t.i = function() {
                        t.ii = !0,
                            O(t, "sourceLoadHandlers", $),
                            function(t) {
                                var e, s, a;
                                s = (e = t).core.eventsDispatcher,
                                    a = e.props,
                                    s.dispatch = function(t) {
                                        a[t] && a[t]()
                                    }
                                    ,
                                    function(t) {
                                        var e = t.componentsServices.isFullscreenOpenManager
                                            , s = t.fs
                                            , a = ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"];
                                        function i(t) {
                                            for (var e = 0; e < a.length; e++)
                                                document[t](a[e], o)
                                        }
                                        function o() {
                                            e.set(document.fullscreenElement || document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement)
                                        }
                                        s.enterFullscreen = function() {
                                            e.set(!0);
                                            var t = document.documentElement;
                                            t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen()
                                        }
                                            ,
                                            s.exitFullscreen = function() {
                                                e.set(!1),
                                                    document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen()
                                            }
                                            ,
                                            s.toggleFullscreen = function() {
                                                e.get() ? s.exitFullscreen() : s.enterFullscreen()
                                            }
                                            ,
                                            s.listen = function() {
                                                i("addEventListener")
                                            }
                                            ,
                                            s.unlisten = function() {
                                                i("removeEventListener")
                                            }
                                    }(t),
                                    function(t) {
                                        var e = t.core
                                            , s = e.globalEventsController
                                            , a = e.windowResizeActioner
                                            , i = t.fs
                                            , o = t.resolve
                                            , n = o(A)
                                            , r = o(P)
                                            , l = o(I);
                                        s.attachListeners = function() {
                                            document.addEventListener("pointermove", r.listener),
                                                document.addEventListener("pointerup", l.listener),
                                                addEventListener("resize", a.runActions),
                                                document.addEventListener("keydown", n.listener),
                                                i.listen()
                                        }
                                            ,
                                            s.removeListeners = function() {
                                                document.removeEventListener("pointermove", r.listener),
                                                    document.removeEventListener("pointerup", l.listener),
                                                    removeEventListener("resize", a.runActions),
                                                    document.removeEventListener("keydown", n.listener),
                                                    i.unlisten()
                                            }
                                    }(t),
                                    function(t) {
                                        var e = t.core.lightboxCloser
                                            , s = (0,
                                            t.resolve)(M);
                                        e.closeLightbox = function() {
                                            s.isLightboxFadingOut || s.runActions()
                                        }
                                    }(t),
                                    function(t) {
                                        var e = t.data
                                            , s = t.core.scrollbarRecompensor;
                                        s.addRecompense = function() {
                                            "complete" === document.readyState ? a() : window.addEventListener("load", (function() {
                                                    a(),
                                                        s.addRecompense = a
                                                }
                                            ))
                                        }
                                        ;
                                        var a = function() {
                                            document.body.offsetHeight > window.innerHeight && (document.body.style.marginRight = e.scrollbarWidth + "px")
                                        };
                                        s.removeRecompense = function() {
                                            document.body.style.removeProperty("margin-right")
                                        }
                                    }(t),
                                    function(t) {
                                        var e = t.core
                                            , s = e.slideChangeFacade
                                            , a = e.slideIndexChanger
                                            , i = t.props.sources
                                            , o = t.st;
                                        i.length > 1 ? (s.changeToPrevious = function() {
                                                a.jumpTo(o.getPreviousSlideIndex())
                                            }
                                                ,
                                                s.changeToNext = function() {
                                                    a.jumpTo(o.getNextSlideIndex())
                                                }
                                        ) : (s.changeToPrevious = function() {}
                                                ,
                                                s.changeToNext = function() {}
                                        )
                                    }(t),
                                    function(t) {
                                        var e = t.componentsServices
                                            , s = t.core
                                            , a = s.slideIndexChanger
                                            , i = s.sourceDisplayFacade
                                            , o = t.isl
                                            , n = t.saw
                                            , r = t.smw
                                            , d = t.st
                                            , u = t.stageIndexes
                                            , m = t.sws;
                                        a.changeTo = function(t) {
                                            u.current = t,
                                                d.u(),
                                                e.setSlideNumber(t + 1),
                                                i.displaySourcesWhichShouldBeDisplayed()
                                        }
                                            ,
                                            a.jumpTo = function(t) {
                                                var e = u.previous
                                                    , s = u.current
                                                    , i = u.next
                                                    , p = o[s]
                                                    , h = o[t];
                                                a.changeTo(t);
                                                for (var v = 0; v < r.length; v++)
                                                    r[v].d();
                                                m.d(s),
                                                    m.c(),
                                                    requestAnimationFrame((function() {
                                                            requestAnimationFrame((function() {
                                                                    var t = u.previous
                                                                        , a = u.current
                                                                        , v = u.next;
                                                                    function f() {
                                                                        d.i(s) ? s === u.previous ? r[s].ne() : s === u.next && r[s].p() : (r[s].h(),
                                                                            r[s].n())
                                                                    }
                                                                    p && n[s].classList.add(c),
                                                                    h && n[a].classList.add(l),
                                                                        m.a(),
                                                                    void 0 !== t && t !== s && r[t].ne(),
                                                                        r[a].n(),
                                                                    void 0 !== v && v !== s && r[v].p(),
                                                                        m.b(e),
                                                                        m.b(i),
                                                                        o[s] ? setTimeout(f, 260) : f()
                                                                }
                                                            ))
                                                        }
                                                    ))
                                            }
                                    }(t),
                                    function(t) {
                                        var e = t.core.sourcesPointerDown
                                            , s = t.elements.sources
                                            , a = t.smw
                                            , i = t.sourcePointerProps
                                            , o = t.stageIndexes;
                                        e.listener = function(t) {
                                            "VIDEO" !== t.target.tagName && t.preventDefault(),
                                                i.isPointering = !0,
                                                i.downScreenX = t.screenX,
                                                i.swipedX = 0;
                                            var e = s[o.current];
                                            e && e.contains(t.target) ? i.isSourceDownEventTarget = !0 : i.isSourceDownEventTarget = !1;
                                            for (var n = 0; n < a.length; n++)
                                                a[n].d()
                                        }
                                    }(t),
                                    function(t) {
                                        var e = t.core.sourceDisplayFacade
                                            , s = t.props.loadOnlyCurrentSource
                                            , a = t.sawu
                                            , i = t.stageIndexes;
                                        e.displaySourcesWhichShouldBeDisplayed = function() {
                                            if (s)
                                                a[i.current]();
                                            else
                                                for (var t in i) {
                                                    var e = i[t];
                                                    void 0 !== e && a[e]()
                                                }
                                        }
                                    }(t),
                                    function(t) {
                                        var e = t.props.sources
                                            , s = t.st
                                            , a = t.stageIndexes
                                            , i = e.length - 1;
                                        s.getPreviousSlideIndex = function() {
                                            return 0 === a.current ? i : a.current - 1
                                        }
                                            ,
                                            s.getNextSlideIndex = function() {
                                                return a.current === i ? 0 : a.current + 1
                                            }
                                            ,
                                            s.u = 0 === i ? function() {}
                                                : 1 === i ? function() {
                                                        0 === a.current ? (a.next = 1,
                                                            delete a.previous) : (a.previous = 0,
                                                            delete a.next)
                                                    }
                                                    : function() {
                                                        a.previous = s.getPreviousSlideIndex(),
                                                            a.next = s.getNextSlideIndex()
                                                    }
                                            ,
                                            s.i = i <= 2 ? function() {
                                                    return !0
                                                }
                                                : function(t) {
                                                    var e = a.current;
                                                    if (0 === e && t === i || e === i && 0 === t)
                                                        return !0;
                                                    var s = e - t;
                                                    return -1 === s || 0 === s || 1 === s
                                                }
                                    }(t),
                                    function(t) {
                                        var e = t.collections.sourceSizers
                                            , s = t.core.windowResizeActioner
                                            , a = t.data
                                            , i = t.elements.sources
                                            , o = t.smw
                                            , n = t.stageIndexes;
                                        s.runActions = function() {
                                            innerWidth < 992 ? a.maxSourceWidth = innerWidth : a.maxSourceWidth = .9 * innerWidth,
                                                a.maxSourceHeight = .9 * innerHeight;
                                            for (var t = 0; t < i.length; t++)
                                                o[t].d(),
                                                e[t] && i[t] && e[t].adjustSize();
                                            var s = n.previous
                                                , r = n.next;
                                            void 0 !== s && o[s].ne(),
                                            void 0 !== r && o[r].p()
                                        }
                                    }(t),
                                    function(t) {
                                        var e = t.isl
                                            , s = t.stageIndexes
                                            , a = t.saw
                                            , i = t.smw
                                            , o = t.st
                                            , n = t.sws;
                                        n.a = function() {
                                            for (var t in s)
                                                i[s[t]].s()
                                        }
                                            ,
                                            n.b = function(t) {
                                                void 0 === t || o.i(t) || (i[t].h(),
                                                    i[t].n())
                                            }
                                            ,
                                            n.c = function() {
                                                for (var t in s)
                                                    n.d(s[t])
                                            }
                                            ,
                                            n.d = function(t) {
                                                if (e[t]) {
                                                    var s = a[t];
                                                    F(s, "fslightboxfis"),
                                                        F(s, l),
                                                        F(s, c)
                                                }
                                            }
                                    }(t)
                            }(t),
                            d.u(),
                            e.set(!0, (function() {
                                    p(),
                                        function(t) {
                                            for (var e = t.props.sources, s = t.resolve, a = s(b), i = s(S), o = s(x, [a, i]), n = 0; n < e.length; n++)
                                                if ("string" == typeof e[n]) {
                                                    var r = o.getTypeSetByClientForIndex(n);
                                                    if (r)
                                                        i.runActionsForSourceTypeAndIndex(r, n);
                                                    else {
                                                        var l = a.getSourceTypeFromLocalStorageByUrl(e[n]);
                                                        l ? i.runActionsForSourceTypeAndIndex(l, n) : o.retrieveTypeWithXhrForIndex(n)
                                                    }
                                                } else
                                                    i.runActionsForSourceTypeAndIndex(w, n)
                                        }(t),
                                        a.dispatch("onInit")
                                }
                            ))
                    }
            }
            function E(t) {
                var e = t.componentsServices.isLightboxOpenManager
                    , s = t.core.slideIndexChanger
                    , a = t.stageIndexes;
                this.runCurrentStageIndexUpdateActionsFor = function(t) {
                    t !== a.current && (e.get() ? s.jumpTo(t) : a.current = t)
                }
            }
            function U(t, e, s) {
                return U = H() ? Reflect.construct.bind() : function(t, e, s) {
                    var a = [null];
                    a.push.apply(a, e);
                    var i = new (Function.bind.apply(t, a));
                    return s && j(i, s.prototype),
                        i
                }
                    ,
                    U.apply(null, arguments)
            }
            function H() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                    ))),
                        !0
                } catch (e) {
                    return !1
                }
            }
            function j(t, e) {
                return j = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                    return t.__proto__ = e,
                        t
                }
                    ,
                    j(t, e)
            }
            function q(t) {
                return function(t) {
                    if (Array.isArray(t))
                        return R(t)
                }(t) || function(t) {
                    if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"])
                        return Array.from(t)
                }(t) || function(t, e) {
                    if (t) {
                        if ("string" == typeof t)
                            return R(t, e);
                        var s = Object.prototype.toString.call(t).slice(8, -1);
                        return "Object" === s && t.constructor && (s = t.constructor.name),
                            "Map" === s || "Set" === s ? Array.from(t) : "Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s) ? R(t, e) : void 0
                    }
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            function R(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var s = 0, a = new Array(e); s < e; s++)
                    a[s] = t[s];
                return a
            }
            function W(t) {
                var e = this;
                this.props = t,
                    this.data = {
                        isFullyRendered: !1,
                        maxSourceWidth: 0,
                        maxSourceHeight: 0,
                        scrollbarWidth: 0
                    },
                    this.isl = [],
                    this.sourcePointerProps = {
                        isPointering: !1,
                        downScreenX: null,
                        isSourceDownEventTarget: !1,
                        swipedX: 0
                    },
                    this.stageIndexes = {
                        current: 0
                    },
                    this.componentsServices = {
                        isLightboxOpenManager: {},
                        setSlideNumber: null,
                        isFullscreenOpenManager: {},
                        showSlideSwipingHoverer: null,
                        hideSlideSwipingHoverer: null
                    },
                    this.sawu = [],
                    this.elements = {
                        sources: [],
                        sourcesComponents: []
                    },
                    this.saw = [],
                    this.smw = [],
                    this.collections = {
                        sourceLoadHandlers: [],
                        sourceSizers: [],
                        xhrs: []
                    },
                    this.core = {
                        eventsDispatcher: {},
                        globalEventsController: {},
                        lightboxCloser: {},
                        lightboxUpdater: {},
                        scrollbarRecompensor: {},
                        slideChangeFacade: {},
                        slideIndexChanger: {},
                        sourcesPointerDown: {},
                        sourceDisplayFacade: {},
                        windowResizeActioner: {}
                    },
                    this.fs = {},
                    this.st = {},
                    this.sws = {},
                    this.getQueuedAction = function(t, s) {
                        var a = [];
                        return function() {
                            a.push(!0),
                                e.timeout((function() {
                                        a.pop(),
                                        a.length || t()
                                    }
                                ), s)
                        }
                    }
                    ,
                    this.resolve = function(t) {
                        var s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        return s.unshift(e),
                            U(t, q(s))
                    }
                    ,
                    this.timeout = function(t, s) {
                        setTimeout((function() {
                                e.elements.container && t()
                            }
                        ), s)
                    }
                    ,
                    function(t) {
                        var e = t.componentsServices.isLightboxOpenManager
                            , s = t.core
                            , a = s.lightboxCloser
                            , i = s.lightboxUpdater
                            , o = t.data
                            , n = (0,
                            t.resolve)(E);
                        i.handleSlideProp = function() {
                            var e = t.props;
                            "number" == typeof e.sourceIndex ? n.runCurrentStageIndexUpdateActionsFor(e.sourceIndex) : "string" == typeof e.source ? n.runCurrentStageIndexUpdateActionsFor(e.sources.indexOf(e.source)) : "number" == typeof e.slide && n.runCurrentStageIndexUpdateActionsFor(e.slide - 1)
                        }
                            ,
                            i.handleTogglerUpdate = function() {
                                e.get() ? a.closeLightbox() : o.isInitialized ? t.o() : t.i()
                            }
                    }(this),
                    V(this)
            }
            var z = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    ref: "nav",
                    staticClass: "fslightbox-nav"
                }, [e("Toolbar", {
                    attrs: {
                        i: t.i
                    }
                }), t._v(" "), t.hasMoreThanSource ? e("SlideNumber", {
                    attrs: {
                        i: t.i
                    }
                }) : t._e()], 1)
            };
            z._withStripped = !0;
            var G = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "fslightbox-toolbar"
                }, [e("FullscreenButton", {
                    attrs: {
                        i: t.i
                    }
                }), t._v(" "), e("CloseButton", {
                    attrs: {
                        i: t.i
                    }
                })], 1)
            };
            G._withStripped = !0;
            var Y = function() {
                return (0,
                    this._self._c)("ToolbarButton", {
                    attrs: {
                        "on-click": this.onClick,
                        "view-box": "0 0 24 24",
                        size: "20px",
                        d: "M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z",
                        title: "Close"
                    }
                })
            };
            Y._withStripped = !0;
            var Z = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "fslightbox-toolbar-button fslightbox-flex-centered",
                    attrs: {
                        title: t.title
                    },
                    on: {
                        click: t.onClick
                    }
                }, [e("Svger", {
                    attrs: {
                        size: t.size,
                        "view-box": t.viewBox,
                        d: t.d
                    }
                })], 1)
            };
            Z._withStripped = !0;
            var J = function() {
                var t = this
                    , e = t._self._c;
                return e("svg", {
                    attrs: {
                        width: t.size,
                        height: t.size,
                        viewBox: t.viewBox,
                        xmlns: "http://www.w3.org/2000/svg"
                    }
                }, [e("path", {
                    staticClass: "fslightbox-svg-path",
                    attrs: {
                        d: t.d
                    }
                })])
            };
            function K(t, e, s, a, i, o, n, r) {
                var l, c = "function" == typeof t ? t.options : t;
                if (e && (c.render = e,
                    c.staticRenderFns = s,
                    c._compiled = !0),
                a && (c.functional = !0),
                o && (c._scopeId = "data-v-" + o),
                    n ? (l = function(t) {
                        (t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__),
                        i && i.call(this, t),
                        t && t._registeredComponents && t._registeredComponents.add(n)
                    }
                        ,
                        c._ssrRegister = l) : i && (l = r ? function() {
                            i.call(this, (c.functional ? this.parent : this).$root.$options.shadowRoot)
                        }
                        : i),
                    l)
                    if (c.functional) {
                        c._injectStyles = l;
                        var d = c.render;
                        c.render = function(t, e) {
                            return l.call(e),
                                d(t, e)
                        }
                    } else {
                        var u = c.beforeCreate;
                        c.beforeCreate = u ? [].concat(u, l) : [l]
                    }
                return {
                    exports: t,
                    options: c
                }
            }
            J._withStripped = !0;
            var X = K({
                props: {
                    size: String,
                    viewBox: String,
                    d: String
                }
            }, J, [], !1, null, null, null).exports
                , Q = K({
                components: {
                    Svger: X
                },
                props: {
                    onClick: Function,
                    size: String,
                    viewBox: String,
                    d: String,
                    title: String
                }
            }, Z, [], !1, null, null, null).exports
                , tt = K({
                components: {
                    ToolbarButton: Q
                },
                props: {
                    i: Number
                },
                data: function() {
                    return {
                        onClick: f[this.i].core.lightboxCloser.closeLightbox
                    }
                }
            }, Y, [], !1, null, null, null).exports
                , et = function() {
                var t = this;
                return (0,
                    t._self._c)("ToolbarButton", {
                    attrs: {
                        "on-click": t.getButtonData("onClick"),
                        "view-box": t.getButtonData("viewBox"),
                        size: t.getButtonData("size"),
                        d: t.getButtonData("d"),
                        title: t.getButtonData("title")
                    }
                })
            };
            et._withStripped = !0;
            var st = K({
                components: {
                    ToolbarButton: Q
                },
                props: {
                    i: Number
                },
                data: function() {
                    return {
                        isFullscreenOpen: !1
                    }
                },
                methods: {
                    getButtonData: function(t) {
                        var e = f[this.i].fs
                            , s = e.exitFullscreen
                            , a = e.enterFullscreen;
                        return (this.isFullscreenOpen ? {
                            onClick: s,
                            viewBox: "0 0 950 1024",
                            size: "24px",
                            d: "M682 342h128v84h-212v-212h84v128zM598 810v-212h212v84h-128v128h-84zM342 342v-128h84v212h-212v-84h128zM214 682v-84h212v212h-84v-128h-128z",
                            title: "Exit fullscreen"
                        } : {
                            onClick: a,
                            viewBox: "0 0 18 18",
                            size: "20px",
                            d: "M4.5 11H3v4h4v-1.5H4.5V11zM3 7h1.5V4.5H7V3H3v4zm10.5 6.5H11V15h4v-4h-1.5v2.5zM11 3v1.5h2.5V7H15V3h-4z",
                            title: "Enter fullscreen"
                        })[t]
                    }
                },
                created: function() {
                    var t = this
                        , e = f[this.i].componentsServices.isFullscreenOpenManager;
                    e.get = function() {
                        return t.isFullscreenOpen
                    }
                        ,
                        e.set = function(e) {
                            return t.isFullscreenOpen = e
                        }
                }
            }, et, [], !1, null, null, null)
                , at = K({
                components: {
                    FullscreenButton: st.exports,
                    CloseButton: tt
                },
                props: {
                    i: Number
                }
            }, G, [], !1, null, null, null).exports
                , it = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    ref: "source-outer",
                    staticClass: "fslightbox-slide-number-container"
                }, [e("div", {
                    ref: "source-inner",
                    staticClass: "fslightbox-flex-centered"
                }, [e("span", [t._v(t._s(t.slide))]), t._v(" "), e("span", {
                    staticClass: "fslightbox-slash"
                }), t._v(" "), e("span", [t._v(t._s(t.sourcesCount))])])])
            };
            it._withStripped = !0;
            var ot = K({
                props: {
                    i: Number
                },
                data: function() {
                    return {
                        slide: f[this.i].stageIndexes.current + 1,
                        sourcesCount: f[this.i].props.sources.length
                    }
                },
                created: function() {
                    var t = this;
                    f[this.i].componentsServices.setSlideNumber = function(e) {
                        return t.slide = e
                    }
                },
                mounted: function() {
                    this.$refs["source-inner"].offsetWidth > 55 && (this.$refs["source-outer"].style.justifyContent = "flex-start")
                }
            }, it, [], !1, null, null, null)
                , nt = K({
                components: {
                    SlideNumber: ot.exports,
                    Toolbar: at
                },
                props: {
                    i: Number
                },
                data: function() {
                    return {
                        hasMoreThanSource: f[this.i].props.sources.length > 1
                    }
                }
            }, z, [], !1, null, null, null).exports
                , rt = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    staticClass: "fslightbox-absoluted fslightbox-full-dimension",
                    on: {
                        pointerdown: t.listener
                    }
                }, t._l(t.sources.length, (function(s, a) {
                        return e("Smw", {
                            key: a,
                            attrs: {
                                i: t.i,
                                j: a
                            }
                        })
                    }
                )), 1)
            };
            rt._withStripped = !0;
            var lt = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    ref: "a",
                    staticClass: "fslightbox-absoluted fslightbox-full-dimension fslightbox-flex-centered",
                    style: t.css
                }, [e("Saw", {
                    attrs: {
                        i: t.i,
                        j: t.j
                    }
                })], 1)
            };
            lt._withStripped = !0;
            var ct = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    ref: "a"
                }, [t.isl ? t._e() : e("div", {
                    staticClass: "fslightboxl"
                }, [e("div"), e("div"), e("div"), e("div")]), t.current === t.j || !t.loadOnlyCurrentSource && t.ist ? e(t.sourceComponent, {
                    tag: "component",
                    attrs: {
                        i: t.i,
                        j: t.j
                    }
                }) : t._e()], 1)
            };
            ct._withStripped = !0;
            var dt = function() {
                var t = this;
                return (0,
                    t._self._c)("img", t._b({
                    ref: "ref",
                    staticClass: "fslightbox-source",
                    attrs: {
                        src: t.src
                    },
                    on: {
                        load: t.onLoad
                    }
                }, "img", t.customAttributes, !1))
            };
            dt._withStripped = !0;
            var ut = K({
                props: {
                    i: Number,
                    j: Number
                },
                data: function() {
                    var t = this
                        , e = f[this.i]
                        , s = e.collections.sourceLoadHandlers
                        , a = e.props
                        , i = a.customAttributes;
                    return {
                        onLoad: function(e) {
                            s[t.j].handleImageLoad(e)
                        },
                        src: a.sources[this.j],
                        customAttributes: i && i[this.j]
                    }
                },
                mounted: function() {
                    f[this.i].elements.sources[this.j] = this.$refs.ref
                }
            }, dt, [], !1, null, null, null).exports
                , mt = function() {
                var t = this
                    , e = t._self._c;
                return e("video", t._b({
                    ref: "ref",
                    staticClass: "fslightbox-source fslightbox-video",
                    attrs: {
                        controls: ""
                    },
                    on: {
                        loadedmetadata: t.onLoad
                    }
                }, "video", t.customAttributes, !1), [e("source", {
                    attrs: {
                        src: t.src
                    }
                })])
            };
            mt._withStripped = !0;
            var pt = K({
                props: {
                    i: Number,
                    j: Number
                },
                data: function() {
                    var t = f[this.i]
                        , e = t.collections.sourceLoadHandlers
                        , s = t.props
                        , a = s.customAttributes
                        , i = s.sources;
                    return {
                        onLoad: e[this.j].handleVideoLoad,
                        src: i[this.j],
                        customAttributes: a && a[this.j]
                    }
                },
                mounted: function() {
                    f[this.i].elements.sources[this.j] = this.$refs.ref
                }
            }, mt, [], !1, null, null, null).exports
                , ht = function() {
                var t = this;
                return (0,
                    t._self._c)("iframe", t._b({
                    ref: "a",
                    staticClass: "fslightbox-source fslightbox-youtube-iframe",
                    attrs: {
                        src: t.src,
                        allowfullscreen: ""
                    }
                }, "iframe", t.customAttributes, !1))
            };
            ht._withStripped = !0;
            var vt = {
                props: {
                    i: Number,
                    j: Number
                },
                created: function() {
                    var t = f[this.i].props
                        , e = t.customAttributes
                        , s = t.sources
                        , a = this.j
                        , i = s[a]
                        , o = i.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/)[2]
                        , n = i.split("?")[1];
                    n = n || "",
                        this.src = "https://www.youtube.com/embed/".concat(o, "?").concat(n),
                        this.customAttributes = e && e[a]
                },
                mounted: function() {
                    var t = f[this.i]
                        , e = this.j;
                    t.elements.sources[e] = this.$refs.a,
                        t.collections.sourceLoadHandlers[e].handleYoutubeLoad()
                }
            }
                , ft = K(vt, ht, [], !1, null, null, null).exports
                , gt = function() {
                var t = this;
                return (0,
                    t._self._c)(t.c, t._b({
                    ref: "a",
                    tag: "component"
                }, "component", t.p, !1))
            };
            gt._withStripped = !0;
            var bt = K({
                props: {
                    i: Number,
                    j: Number
                },
                created: function() {
                    var t = f[this.i].props.sources[this.j];
                    this.c = t.component ? t.component : t,
                        this.p = t.props ? t.props : {}
                },
                mounted: function() {
                    var t = f[this.i]
                        , e = t.collections.sourceLoadHandlers
                        , s = t.elements.sources;
                    s[this.j] = this.$refs.a.$el,
                        s[this.j].classList.add(p),
                        e[this.j].handleCustomLoad()
                }
            }, gt, [], !1, null, null, null).exports
                , yt = function() {
                return (0,
                    this._self._c)("div", {
                    staticClass: "fslightboxin fslightbox-flex-centered"
                }, [this._v("Invalid source")])
            };
            yt._withStripped = !0;
            var _t = K({
                props: {
                    i: Number,
                    j: Number
                },
                mounted: function() {
                    var t = f[this.i]
                        , e = t.isl
                        , s = t.saw
                        , a = t.sawu
                        , i = this.j;
                    e[i] = !0,
                        a[i](),
                        s[i].classList.add("fslightboxfis")
                }
            }, yt, [], !1, null, null, null).exports
                , Ct = K({
                props: {
                    i: Number,
                    j: Number
                },
                components: {
                    I: ut,
                    V: pt,
                    Y: ft,
                    C: bt,
                    In: _t
                },
                data: function() {
                    var t = {};
                    return this.attachComponentDataToObject(t),
                        t
                },
                created: function() {
                    var t = this;
                    f[this.i].sawu[this.j] = function() {
                        t.attachComponentDataToObject(t)
                    }
                },
                mounted: function() {
                    f[this.i].saw[this.j] = this.$refs.a
                },
                methods: {
                    attachComponentDataToObject: function(t) {
                        var e = f[this.i]
                            , s = e.elements.sourcesComponents
                            , a = e.isl
                            , i = e.props.loadOnlyCurrentSource
                            , o = e.st
                            , n = e.stageIndexes.current;
                        t.sourceComponent = s[this.j],
                            t.isl = a[this.j],
                            t.ist = o.i(this.j),
                            t.current = n,
                            t.loadOnlyCurrentSource = i
                    }
                }
            }, ct, [], !1, null, null, null).exports
                , wt = {
                props: {
                    i: Number,
                    j: Number
                },
                components: {
                    Saw: Ct
                },
                created: function() {
                    this.css = f[this.i].st.i(this.j) ? {} : {
                        display: "none"
                    }
                },
                mounted: function() {
                    var t = f[this.i]
                        , e = this.$refs.a
                        , s = 0;
                    function a(t) {
                        e.style.transform = "translateX(".concat(t + s, "px)"),
                            s = 0
                    }
                    function i() {
                        return (1 + t.props.slideDistance) * innerWidth
                    }
                    e.s = function() {
                        e.style.display = "flex"
                    }
                        ,
                        e.h = function() {
                            e.style.display = "none"
                        }
                        ,
                        e.a = function() {
                            e.classList.add("fslightboxtt")
                        }
                        ,
                        e.d = function() {
                            e.classList.remove("fslightboxtt")
                        }
                        ,
                        e.n = function() {
                            e.style.removeProperty("transform")
                        }
                        ,
                        e.v = function(t) {
                            return s = t,
                                e
                        }
                        ,
                        e.ne = function() {
                            a(-i())
                        }
                        ,
                        e.z = function() {
                            a(0)
                        }
                        ,
                        e.p = function() {
                            a(i())
                        }
                        ,
                        t.smw[this.j] = e
                }
            }
                , kt = K(wt, lt, [], !1, null, null, null).exports
                , St = K({
                props: {
                    i: Number
                },
                components: {
                    Smw: kt
                },
                data: function() {
                    var t = f[this.i]
                        , e = t.core.sourcesPointerDown.listener;
                    return {
                        sources: t.props.sources,
                        listener: e
                    }
                }
            }, rt, [], !1, null, null, null).exports
                , xt = function() {
                var t = this
                    , e = t._self._c;
                return t.sourcesCount > 1 ? e("div", [e("SlideButton", {
                    attrs: {
                        "on-click": t.changeToPrevious,
                        name: "previous",
                        d: "M18.271,9.212H3.615l4.184-4.184c0.306-0.306,0.306-0.801,0-1.107c-0.306-0.306-0.801-0.306-1.107,0L1.21,9.403C1.194,9.417,1.174,9.421,1.158,9.437c-0.181,0.181-0.242,0.425-0.209,0.66c0.005,0.038,0.012,0.071,0.022,0.109c0.028,0.098,0.075,0.188,0.142,0.271c0.021,0.026,0.021,0.061,0.045,0.085c0.015,0.016,0.034,0.02,0.05,0.033l5.484,5.483c0.306,0.307,0.801,0.307,1.107,0c0.306-0.305,0.306-0.801,0-1.105l-4.184-4.185h14.656c0.436,0,0.788-0.353,0.788-0.788S18.707,9.212,18.271,9.212z"
                    }
                }), t._v(" "), e("SlideButton", {
                    attrs: {
                        "on-click": t.changeToNext,
                        name: "next",
                        d: "M1.729,9.212h14.656l-4.184-4.184c-0.307-0.306-0.307-0.801,0-1.107c0.305-0.306,0.801-0.306,1.106,0l5.481,5.482c0.018,0.014,0.037,0.019,0.053,0.034c0.181,0.181,0.242,0.425,0.209,0.66c-0.004,0.038-0.012,0.071-0.021,0.109c-0.028,0.098-0.075,0.188-0.143,0.271c-0.021,0.026-0.021,0.061-0.045,0.085c-0.015,0.016-0.034,0.02-0.051,0.033l-5.483,5.483c-0.306,0.307-0.802,0.307-1.106,0c-0.307-0.305-0.307-0.801,0-1.105l4.184-4.185H1.729c-0.436,0-0.788-0.353-0.788-0.788S1.293,9.212,1.729,9.212z"
                    }
                })], 1) : t._e()
            };
            xt._withStripped = !0;
            var Mt = function() {
                var t = this
                    , e = t._self._c;
                return e("div", {
                    class: "fslightbox-slide-btn-container fslightbox-slide-btn-".concat(t.name, "-container"),
                    attrs: {
                        title: t.title
                    },
                    on: {
                        click: t.onClick
                    }
                }, [e("div", {
                    staticClass: "fslightbox-slide-btn fslightbox-flex-centered"
                }, [e("Svger", {
                    attrs: {
                        "view-box": "0 0 20 20",
                        size: "20px",
                        d: t.d
                    }
                })], 1)])
            };
            Mt._withStripped = !0;
            var At = K({
                components: {
                    Svger: X
                },
                props: {
                    onClick: Function,
                    name: String,
                    d: String
                },
                data: function() {
                    var t = this.name.charAt(0).toUpperCase() + this.name.slice(1);
                    return {
                        title: "".concat(t, " slide")
                    }
                }
            }, Mt, [], !1, null, null, null).exports
                , Dt = K({
                props: {
                    i: Number
                },
                components: {
                    SlideButton: At
                },
                data: function() {
                    var t = f[this.i]
                        , e = t.core.slideChangeFacade
                        , s = e.changeToPrevious
                        , a = e.changeToNext;
                    return {
                        sourcesCount: t.props.sources.length,
                        changeToPrevious: s,
                        changeToNext: a
                    }
                }
            }, xt, [], !1, null, null, null).exports
                , Pt = function() {
                var t = this
                    , e = t._self._c;
                return t.isSlideSwipingHovererShown ? e("div", {
                    staticClass: "fslightbox-slide-swiping-hoverer fslightbox-full-dimension fslightbox-absoluted"
                }) : t._e()
            };
            Pt._withStripped = !0;
            var Tt, Lt = K({
                props: {
                    i: Number
                },
                data: function() {
                    return {
                        isSlideSwipingHovererShown: !1
                    }
                },
                created: function() {
                    var t = this
                        , e = f[this.i].componentsServices;
                    e.showSlideSwipingHoverer = function() {
                        t.isSlideSwipingHovererShown || (t.isSlideSwipingHovererShown = !0)
                    }
                        ,
                        e.hideSlideSwipingHoverer = function() {
                            t.isSlideSwipingHovererShown && (t.isSlideSwipingHovererShown = !1)
                        }
                }
            }, Pt, [], !1, null, null, null).exports, It = K({
                props: {
                    toggler: Boolean,
                    sources: Array,
                    slide: Number,
                    source: String,
                    sourceIndex: Number,
                    onOpen: Function,
                    onClose: Function,
                    onInit: Function,
                    onShow: Function,
                    disableLocalStorage: Boolean,
                    types: Array,
                    type: String,
                    customAttributes: Array,
                    maxYoutubeVideoDimensions: Object,
                    loadOnlyCurrentSource: Boolean,
                    slideDistance: {
                        type: Number,
                        default: .3
                    },
                    openOnMount: Boolean,
                    exitFullscreenOnClose: Boolean
                },
                components: {
                    Swc: St,
                    SlideButtons: Dt,
                    Naver: nt,
                    SlideSwipingHoverer: Lt
                },
                data: function() {
                    return {
                        isOpen: !1
                    }
                },
                watch: {
                    slide: function() {
                        f[this.i].core.lightboxUpdater.handleSlideProp()
                    },
                    sourceIndex: function() {
                        f[this.i].core.lightboxUpdater.handleSlideProp()
                    },
                    source: function() {
                        f[this.i].core.lightboxUpdater.handleSlideProp()
                    },
                    toggler: function() {
                        f[this.i].core.lightboxUpdater.handleSlideProp(),
                            f[this.i].core.lightboxUpdater.handleTogglerUpdate()
                    }
                },
                created: function() {
                    var t = this;
                    this.i = f.push(new W(this)) - 1;
                    var e = f[this.i].componentsServices.isLightboxOpenManager;
                    e.get = function() {
                        return t.isOpen
                    }
                        ,
                        e.set = function(e, s) {
                            t.isOpen = e,
                            s && (Tt = s)
                        }
                },
                mounted: function() {
                    f[this.i].elements.container = this.$refs.container,
                        function(t) {
                            var e = t.data
                                , s = t.props.openOnMount;
                            document.getElementsByClassName(o).length || h(),
                                e.scrollbarWidth = function() {
                                    var t = document.createElement("div")
                                        , e = t.style
                                        , s = document.createElement("div");
                                    e.visibility = "hidden",
                                        e.width = "100px",
                                        e.msOverflowStyle = "scrollbar",
                                        e.overflow = "scroll",
                                        s.style.width = "100%",
                                        document.body.appendChild(t);
                                    var a = t.offsetWidth;
                                    t.appendChild(s);
                                    var i = s.offsetWidth;
                                    return document.body.removeChild(t),
                                    a - i
                                }(),
                            s && t.i()
                        }(f[this.i])
                },
                updated: function() {
                    f[this.i].elements.container = this.$refs.container,
                    Tt && Tt(),
                        Tt = null
                }
            }, a, [], !1, null, null, null).exports;
            t.exports = s
        }()
    },
    e13b: function(t, e, s) {
        "use strict";
        s("f214")
    },
    e174: function(t, e, s) {},
    e1ec: function(t, e, s) {
        "use strict";
        s("64aa")
    },
    e37d: function(t, e, s) {
        "use strict";
        s("9143")
    },
    e4d0: function(t, e, s) {
        "use strict";
        s("10fd")
    },
    e4d3: function(t, e, s) {
        "use strict";
        s("a9c2")
    },
    e6b0: function(t, e, s) {},
    e6f5: function(t, e, s) {
        "use strict";
        s("102f")
    },
    e712: function(t, e, s) {
        "use strict";
        s("9441")
    },
    e898: function(t, e, s) {
        "use strict";
        s("0f16")
    },
    e8d6: function(t, e, s) {},
    e97a: function(t, e, s) {},
    e9c5: function(t, e, s) {},
    ea98: function(t, e, s) {
        "use strict";
        var a = s("23e7")
            , i = s("e330")
            , o = s("1d80")
            , n = s("5926")
            , r = s("577e")
            , l = s("d039")
            , c = i("".charAt)
            , d = l((function() {
                return "\ud842" !== "𠮷".at(-2)
            }
        ));
        a({
            target: "String",
            proto: !0,
            forced: d
        }, {
            at: function(t) {
                var e = r(o(this))
                    , s = e.length
                    , a = n(t)
                    , i = a >= 0 ? a : s + a;
                return i < 0 || i >= s ? void 0 : c(e, i)
            }
        })
    },
    eb30: function(t, e, s) {
        "use strict";
        s("be46")
    },
    ebab: function(t, e, s) {},
    ec2f: function(t, e, s) {},
    ed0b: function(t, e, s) {
        "use strict";
        s("d3fe")
    },
    edd0: function(t, e, s) {
        "use strict";
        var a = s("13d2")
            , i = s("9bf2");
        t.exports = function(t, e, s) {
            return s.get && a(s.get, e, {
                getter: !0
            }),
            s.set && a(s.set, e, {
                setter: !0
            }),
                i.f(t, e, s)
        }
    },
    edf9: function(t, e, s) {
        "use strict";
        s("59c6")
    },
    ef57: function(t, e, s) {
        "use strict";
        s("4a3d")
    },
    efac: function(t, e, s) {},
    f0c4: function(t, e, s) {
        "use strict";
        s("db6f")
    },
    f0d3: function(t, e, s) {
        "use strict";
        s("1813")
    },
    f1f9: function(t, e, s) {},
    f214: function(t, e, s) {},
    f235: function(t, e, s) {
        "use strict";
        s("350a")
    },
    f3ad: function(t, e, s) {},
    f430: function(t, e, s) {},
    f485: function(t, e, s) {},
    f4d4: function(t, e, s) {},
    f60f: function(t, e, s) {
        "use strict";
        s("f430")
    },
    f616: function(t, e, s) {},
    f6dc: function(t, e, s) {},
    f784: function(t, e, s) {},
    f985: function(t, e, s) {
        "use strict";
        s("802e")
    },
    f9a3: function(t, e, s) {},
    f9d2: function(t, e, s) {
        "use strict";
        s("b592")
    },
    fa17: function(t, e, s) {},
    fa6d: function(t, e, s) {},
    fa87: function(t, e, s) {},
    faed: function(t, e, s) {
        "use strict";
        s("6626")
    },
    fb35: function(t, e, s) {},
    fc43: function(t, e, s) {},
    fc69: function(t, e, s) {
        "use strict";
        s("9d73")
    },
    fd32: function(t, e, s) {},
    fd85: function(t, e, s) {
        "use strict";
        s("3532")
    },
    fed7: function(t, e, s) {},
    ff3d: function(t, e, s) {
        "use strict";
        s("b5b3")
    },
    ff5c: function(t, e, s) {},
    ffb7: function(t, e, s) {}
}]);
//# sourceMappingURL=chunk-22c0b763.c26baacb.js.map
